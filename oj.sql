/*
 Navicat Premium Data Transfer

 Source Server         : oj
 Source Server Type    : MySQL
 Source Server Version : 80016
 Source Host           : localhost:3306
 Source Schema         : oj

 Target Server Type    : MySQL
 Target Server Version : 80016
 File Encoding         : 65001

 Date: 20/06/2019 09:51:32
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for lessons
-- ----------------------------
DROP TABLE IF EXISTS `lessons`;
CREATE TABLE `lessons`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `lessonname` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of lessons
-- ----------------------------
INSERT INTO `lessons` VALUES (13, '程序设计基础');
INSERT INTO `lessons` VALUES (14, 'Java程序设计基础（16网工）');
INSERT INTO `lessons` VALUES (16, 'Python编程与办公自动化');
INSERT INTO `lessons` VALUES (17, 'test');

-- ----------------------------
-- Table structure for problem
-- ----------------------------
DROP TABLE IF EXISTS `problem`;
CREATE TABLE `problem`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `describe` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `io` varchar(300) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `difficulty` int(11) NULL DEFAULT NULL,
  `subsum` int(11) NULL DEFAULT NULL,
  `acsum` int(11) NULL DEFAULT NULL,
  `inputDescribe` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `outputDescribe` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `language` int(11) NULL DEFAULT NULL,
  `lessonid` int(11) NULL DEFAULT NULL,
  `auth` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `iocount` int(11) NULL DEFAULT NULL,
  `input` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `output` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 944 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of problem
-- ----------------------------
INSERT INTO `problem` VALUES (44, '数的奇偶性', '<pre>输入一个整数。确定他是奇数还是偶数。</pre>', '[{\'in\': \'2\\n14\\n13\\n\', \'out\': \'0\\n1\\n\'}]', 1, 15, 8, '<pre>输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括 一个int类型整数。</pre>', '<pre>输出有 n 行，每行是整数0或1，对应相应输入行的结果。如果对应输入行是奇数，则输出 1，否则，输出 0。</pre>', 1, 13, 'ymc', 1, '2\n14\n13\n', '0\n1\n');
INSERT INTO `problem` VALUES (45, 'Hello World', '<p>让计算机输出\"Hello,World.\"。请注意字母大小写和标点符号，输出不包括两边的引号，行末输出一个换行符。&nbsp;&nbsp;<br></p>', '[{\'in\': \'\', \'out\': \'Hello,World.\\n\'}]', 1, 33, 13, '<p>本题无输入。&nbsp;&nbsp;<br></p>', '<pre>Hello,World.</pre>', 1, 13, 'ymc', 1, '本题无输入样例', 'Hello,World.\n');
INSERT INTO `problem` VALUES (46, '输出 C', '<dd><pre>在标准输出上输出有*号构成的字母C,如下所示：\n****\n*\n*\n****\n</pre></dd><p><br></p>', '[{\'in\': \'\', \'out\': \'****\\n*\\n*\\n****\\n\'}]', 1, 4, 1, '<pre>无</pre>', '<pre>****\n*\n*\n****</pre>', 1, 13, 'ymc', 1, '', '****\n*\n*\n****');
INSERT INTO `problem` VALUES (47, '平方', '<dd><pre>输入一个整数n，求这个数的平方。\n\n</pre></dd>', '[{\'in\': \'\', \'out\': \'4\\n\'}]', 1, 4, 0, '<pre><p>输入只有一个整数n。</p></pre>', '<pre><p>在单独的一行中输出n的平方。</p></pre>', 1, 13, 'ymc', 1, '2', '4\n');
INSERT INTO `problem` VALUES (48, '输出网格', '<dd><pre><p>输出如下所示的网格<br>+---+---+<br>|   |   |<br>+---+---+<br>说明：两个“+”之间有三个“-”。</p>\n</pre></dd>', '[{\'in\': \'\', \'out\': \'+---+---+\\n|   |   |\\n+---+---+\\n\'}]', 1, 2, 2, '<pre><p>无输入</p></pre>', '<pre><p><span style=\"font-size: 1em;\">输入如样例所示的网格，总共三行。</span>\n</p><p>\n\n</p></pre>', 1, 13, 'ymc', 1, '', '+---+---+\n|   |   |\n+---+---+\n');
INSERT INTO `problem` VALUES (49, '混合运算', '<pre><p>写一个程序，计算1.47*(32.54-32.1)值，并在计算机屏幕上输出。<br><strong>要求输出结果后再输出一个换行符。</strong></p></pre><p><br></p>', '[{\'in\': \'\', \'out\': \'0.6468\\n\'}]', 1, 1, 1, '<p>本题无输入。&nbsp;&nbsp;<br></p>', '<p>写一个程序，计算1.47*(32.54-32.1)值，并在计算机屏幕上输出。<strong>结果保留4位小数。</strong><br><strong>要求输出结果后再输出一个换行符。</strong>&nbsp;&nbsp;<br></p>', 1, 13, 'ymc', 1, '本题无输入样例', '0.6468\n');
INSERT INTO `problem` VALUES (52, '定义树类', '<pre><p>定义一个Tree（树）类，有ages（树龄） Field， 方法grow(int years)对ages加上years，<span style=\"font-size: 1em;\">方法showAge()显示Tree类对象的ages的值。</span></p></pre>', '[{\'in\': \'20 30\\n30 40\\n11 34\\n0 0\', \'out\': \'Tree ages:50\\nTree ages:70\\nTree ages:45\'}]', 1, 4, 2, '<p>输入树的初始树龄ages,和生长的years ，如果两个都为0结束输入。&nbsp;&nbsp;<br></p>', '<p>输出生长后的树龄， 具体见样例。&nbsp;&nbsp;<br></p>', 8, 15, 'ymc', 1, '20 30\n30 40\n11 34\n0 0', 'Tree ages:50\nTree ages:70\nTree ages:45\n');
INSERT INTO `problem` VALUES (53, 'Circle类的实现', '<pre><p>定义一个Circle类。</p>\n<p>它有三个私有整型Field（分别为半径和圆心的横坐标、纵坐标）；</p>\n<p>一个默认构造方法，默认中心坐标在(0,0)，半径为1；</p>\n<p>一个计算直径的方法calDiameter()；</p>\n<p>一个计算面积的方法calArea()；</p>\n<p>一个计算周长的方法calPerimeter()；</p>\n<p>一个输出圆的中心坐标和半径的函数output()。</p>\n<p>&nbsp;</p>\n<p>PI的取值为3.14</p></pre>', '[{\'in\': \'2 3 5\\n\', \'out\': \'Center=(2,3) and Radius=5\\nDiameter=10\\nArea=78.5\\nPerimeter=31.4\\n\'}]', 1, 3, 1, '<p>要求用户输入圆的中心坐标和半径。&nbsp;&nbsp;<br></p>', '<p>分四行输出，第一行显示圆的中心坐标和半径，第二行显示圆的直径，第三行显示圆的面积，第四行显示圆的周长，周长和面积要求保留一位小数。&nbsp;&nbsp;<br></p>', 8, 16, 'ymc', 1, '2 3 5\n', 'Center=(2,3) and Radius=5\nDiameter=10\nArea=78.5\nPerimeter=31.4\n');
INSERT INTO `problem` VALUES (56, '长方体', '<pre><p>有一个长方体类Cuboid，包含长（length）、宽（width）和高（height）三个Field，均为整数类型，</p>\n<p>有构造器和设置上述三个参数的方法，以及用于计算底面积的方法getBottomArea()，计算体积的方法getVolume()。</p>\n<p>输入长、宽、高，由计算底面积和体积的方法得到底面积和体积，并分行打印出来。</p></pre>', '[{\'in\': \'\', \'out\': \'200\\n6000\\n\'}]', 2, 7, 2, '<p>依次输入长方体的长、宽、高。&nbsp;&nbsp;<br></p>', '<p>在第一行输出底面积，第二行输出体积。&nbsp;&nbsp;<br></p>', 8, 16, 'ymc', 1, '10 20 30', '200\n6000\n');
INSERT INTO `problem` VALUES (57, 'Hello,World', '<pre><p>写一个程序，在标准输出中输出如下三行信息。</p>\n<p>********************<br> Hello,World!<br>********************</p></pre>', '[{\'in\': \'\', \'out\': \'********************\\n    Hello,World!\\n********************\\n\'}]', 1, 27, 32, '<p>无&nbsp;&nbsp;<br></p>', '<p>第一行总共20个*号，后面无空格，第二行先是4个空格，然后是Hello,World!，两个单词之间有一个逗号，第二个单词后面跟一个感叹号，后面没有任何空格。第三行是20个*号。&nbsp;&nbsp;<br></p>', 4, 14, 'ymc', 1, '', '********************\n    Hello,World!\n********************\n');
INSERT INTO `problem` VALUES (58, '定义树类', '<pre><p>定义一个Tree（树）类，有ages（树龄） Field， 方法grow(int years)对ages加上years，</p>\n<p>方法showAge()显示Tree类对象的ages的值。</p></pre>', '[{\'in\': \'20 30\\n30 40\\n11 34\\n0 0\\n\', \'out\': \'Tree ages:50\\nTree ages:70\\nTree ages:45\\n\'}]', 1, 2, 1, '<p>输入树的初始树龄ages,和生长的years ，如果两个都为0结束输入。&nbsp;&nbsp;<br></p>', '<p>输出生长后的树龄， 具体见样例。&nbsp;&nbsp;<br></p>', 8, 16, 'ymc', 1, '20 30\n30 40\n11 34\n0 0\n', 'Tree ages:50\nTree ages:70\nTree ages:45\n');
INSERT INTO `problem` VALUES (112, '害死人不偿命的(3n+1)猜想', '卡拉兹(Callatz)猜想：\n\n对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……\n\n我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？\n\n', '[{\'in\': \'3\\n\', \'out\': \'5\\n\'}]', 1, 1, 1, ' 每个测试输入包含 1 个测试用例，即给出正整数 n 的值。\n\n', ' 输出从 n 计算到 1 需要的步数。\n\n', 8, 16, 'pat', 1, '3\n', '5\n');
INSERT INTO `problem` VALUES (113, '写出这个数', '读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。\n\n', '[{\'in\': \'1234567890987654321123456789\\n\', \'out\': \'yi san wu\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10^{100}。\n\n', ' 在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。\n\n', 8, 16, 'pat', 1, '1234567890987654321123456789\n', 'yi san wu\n');
INSERT INTO `problem` VALUES (114, '我要通过！', '“答案正确”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“答案正确”大派送 —— 只要读入的字符串满足下列条件，系统就输出“答案正确”，否则输出“答案错误”。\n\n得到“答案正确”的条件是：\n\n1. 字符串中必须仅有 P、 A、 T这三种字符，不可以包含其它字符；\n2. 任意形如 xPATx 的字符串都可以获得“答案正确”，其中 x 或者是空字符串，或者是仅由字母 A 组成的字符串；\n3. 如果 aPbTc 是正确的，那么 aPbATca 也是正确的，其中 a、 b、 c 均或者是空字符串，或者是仅由字母 A 组成的字符串。\n\n现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“答案正确”的。\n\n', '[{\'in\': \'8\\nPAT\\nPAAT\\nAAPATAA\\nAAPAATAAAA\\nxPATx\\nPT\\nWhatever\\nAPAAATAA\\n\', \'out\': \'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 n (<10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。\n\n', ' 每个字符串的检测结果占一行，如果该字符串可以获得“答案正确”，则输出 YES，否则输出 NO。\n\n', 8, 16, 'pat', 1, '8\nPAT\nPAAT\nAAPATAA\nAAPAATAAAA\nxPATx\nPT\nWhatever\nAPAAATAA\n', 'YES\nYES\nYES\nYES\nNO\nNO\nNO\nNO\n');
INSERT INTO `problem` VALUES (115, '成绩排名', '读入 n（0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。\n\n', '[{\'in\': \'3\\nJoe Math990112 89\\nMike CS991301 100\\nMary EE990830 95\\n\', \'out\': \'Mike CS991301\\nJoe Math990112\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，格式为\n\n第 1 行：正整数 n\n第 2 行：第 1 个学生的姓名 学号 成绩\n第 3 行：第 2 个学生的姓名 学号 成绩\n  ... ... ...\n第 n+1 行：第 n 个学生的姓名 学号 成绩\n\n其中姓名和学号均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。\n\n', ' 对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。\n\n', 8, 16, 'pat', 1, '3\nJoe Math990112 89\nMike CS991301 100\nMary EE990830 95\n', 'Mike CS991301\nJoe Math990112\n');
INSERT INTO `problem` VALUES (116, '继续(3n+1)猜想', '卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。\n\n当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 n=3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 n=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 n 为“关键数”，如果 n 不能被数列中的其他数字所覆盖。\n\n现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。\n\n', '[{\'in\': \'6\\n3 5 6 7 8 11\\n\', \'out\': \'7 6\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，第 1 行给出一个正整数 K (<100)，第 2 行给出 K 个互不相同的待验证的正整数 n (1<nle 100)的值，数字间用空格隔开。\n\n', ' 每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。\n\n', 8, 16, 'pat', 1, '6\n3 5 6 7 8 11\n', '7 6\n');
INSERT INTO `problem` VALUES (117, '换个格式输出整数', '让我们用字母 B 来表示“百”、字母 S 表示“十”，用 12...n 来表示不为零的个位数字 n（<10），换个格式来输出任一个不超过 3 位的正整数。例如 234 应该被输出为 BBSSS1234，因为它有 2 个“百”、3 个“十”、以及个位的 4。\n\n', '[{\'in\': \'234\\n\', \'out\': \'BBSSS1234\\n\'}, {\'in\': \'23\\n\', \'out\': \'SS123\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，给出正整数 n（<1000）。\n\n', ' 每个测试用例的输出占一行，用规定的格式输出 n。\n\n', 8, 16, 'pat', 2, '234\n', 'BBSSS1234\n');
INSERT INTO `problem` VALUES (118, '素数对猜想', '让我们定义dn为：dn = p{n+1}-pn，其中pi是第i个素数。显然有d1 = 1，且对于n1有dn是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。\n\n现给定任意正整数N(<10^5)，请计算不超过N的满足猜想的素数对的个数。\n\n\n', '[{\'in\': \'20\\n\', \'out\': \'4\\n\'}]', 1, 0, 0, ' 输入格式:\n\n输入在一行给出正整数N。\n\n', ' 输出格式:\n\n在一行中输出不超过N的满足猜想的素数对的个数。\n\n', 8, 16, 'pat', 1, '20\n', '4\n');
INSERT INTO `problem` VALUES (119, '数组元素循环右移问题', '一个数组A中存有N（0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（ge 0）个位置，即将A中的数据由（A0 A1 cdots A{N-1}）变换为（A{N-M} cdots A{N-1} A0 A1 cdots A{N-M-1}）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？\n\n', '[{\'in\': \'6 2\\n1 2 3 4 5 6\\n\', \'out\': \'5 6 1 2 3 4\\n\'}]', 1, 0, 0, ' 输入格式:\n\n每个输入包含一个测试用例，第1行输入N（1le N le 100）和M（ge 0）；第2行输入N个整数，之间用空格分隔。\n\n', ' 输出格式:\n\n在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。\n\n', 8, 16, 'pat', 1, '6 2\n1 2 3 4 5 6\n', '5 6 1 2 3 4\n');
INSERT INTO `problem` VALUES (120, '说反话', '给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。\n\n', '[{\'in\': \'Hello World Here I Come\\n\', \'out\': \'Come I Here World Hello\\n\'}]', 1, 0, 0, ' 测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。\n\n', ' 每个测试用例的输出占一行，输出倒序后的句子。\n\n', 8, 16, 'pat', 1, 'Hello World Here I Come\n', 'Come I Here World Hello\n');
INSERT INTO `problem` VALUES (121, '一元多项式求导', '设计函数求一元多项式的导数。（注：x^n（n为整数）的一阶导数为n x^{n-1}。）\n\n', '[{\'in\': \'3 4 -5 2 6 1 -2 0\\n\', \'out\': \'12 3 -10 1 6 0\\n\'}]', 1, 0, 0, ' 输入格式:\n\n以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过 1000 的整数）。数字间以空格分隔。\n\n', ' 输出格式:\n\n以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是 0，但是表示为 0\n0。\n\n', 8, 16, 'pat', 1, '3 4 -5 2 6 1 -2 0\n', '12 3 -10 1 6 0\n');
INSERT INTO `problem` VALUES (122, 'A+B 和 C', '给定区间 -2^{31}, 2^{31} 内的 3 个整数 A、B 和 C，请判断 A+B 是否大于 C。\n\n', '[{\'in\': \'4\\n1 2 3\\n2 3 4\\n2147483647 0 2147483646\\n0 -2147483648 -2147483647\\n\', \'out\': \'Case #1: false\\nCase #2: true\\nCase #3: true\\nCase #4: false\\n\'}]', 1, 0, 0, ' 输入第 1 行给出正整数 T (le 10)，是测试用例的个数。随后给出 T 组测试用例，每组占一行，顺序给出 A、B 和 C。整数间以空格分隔。\n\n', ' 对每组测试用例，在一行中输出 Case X: true 如果 A+BC，否则输出 Case X: false，其中 X 是测试用例的编号（从 1 开始）。\n\n', 8, 16, 'pat', 1, '4\n1 2 3\n2 3 4\n2147483647 0 2147483646\n0 -2147483648 -2147483647\n', 'Case #1: false\nCase #2: true\nCase #3: true\nCase #4: false\n');
INSERT INTO `problem` VALUES (123, '数字分类', '给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：\n\n- A1 = 能被 5 整除的数字中所有偶数的和；\n- A2 = 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 n1-n2+n3-n4cdots；\n- A3 = 被 5 除后余 2 的数字的个数；\n- A4 = 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；\n- A5 = 被 5 除后余 4 的数字中最大数字。\n\n', '[{\'in\': \'13 1 2 3 4 5 6 7 8 9 10 20 16 18\\n\', \'out\': \'30 11 2 9.7 9\\n\'}, {\'in\': \'8 1 2 4 5 6 7 9 16\\n\', \'out\': \'N 11 2 N 9\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。\n\n', ' 对给定的 N 个正整数，按题目要求计算 A1~A5 并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。\n\n若其中某一类数字不存在，则在相应位置输出 N。\n\n', 8, 16, 'pat', 2, '13 1 2 3 4 5 6 7 8 9 10 20 16 18\n', '30 11 2 9.7 9\n');
INSERT INTO `problem` VALUES (124, '数素数', '令 Pi 表示第 i 个素数。现任给两个正整数 M le N le 10^4，请输出 PM 到 PN 的所有素数。\n\n', '[{\'in\': \'5 27\\n\', \'out\': \'11 13 17 19 23 29 31 37 41 43\\n47 53 59 61 67 71 73 79 83 89\\n97 101 103\\n\'}]', 1, 0, 0, ' 输入在一行中给出 M 和 N，其间以空格分隔。\n\n', ' 输出从 PM 到 PN 的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '5 27\n', '11 13 17 19 23 29 31 37 41 43\n47 53 59 61 67 71 73 79 83 89\n97 101 103\n');
INSERT INTO `problem` VALUES (125, '福尔摩斯的约会', '大侦探福尔摩斯接到一张奇怪的字条：我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&hgsfdk d&Hyscvnm。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间星期四 14:04，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 D，代表星期四；第 2 对相同的字符是 E ，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母 A 到 N 表示）；后面两字符串第 1 对相同的英文字母 s 出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。\n\n', '[{\'in\': \'3485djDkxh4hhGE \\n2984akDfkkkkggEdsb \\ns&hgsfdk \\nd&Hyscvnm\\n\', \'out\': \'THU 14:04\\n\'}]', 1, 0, 0, ' 输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。\n\n', ' 在一行中输出约会的时间，格式为 DAY HH:MM，其中 DAY 是某星期的 3 字符缩写，即 MON 表示星期一，TUE 表示星期二，WED 表示星期三，THU 表示星期四，FRI 表示星期五，SAT 表示星期六，SUN 表示星期日。题目输入保证每个测试存在唯一解。\n\n', 8, 16, 'pat', 1, '3485djDkxh4hhGE \n2984akDfkkkkggEdsb \ns&hgsfdk \nd&Hyscvnm\n', 'THU 14:04\n');
INSERT INTO `problem` VALUES (126, '部分A+B', '正整数 A 的“DA（为 1 位整数）部分”定义为由 A 中所有 DA 组成的新整数 PA。例如：给定 A = 3862767，DA = 6，则 A 的“6 部分”PA 是 66，因为 A 中有 2 个 6。\n\n现给定 A、DA、B、DB，请编写程序计算 PA + PB。\n\n', '[{\'in\': \'3862767 6 13530293 3\\n\', \'out\': \'399\\n\'}, {\'in\': \'3862767 1 13530293 8\\n\', \'out\': \'0\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 A、DA、B、DB，中间以空格分隔，其中 0 < A, B < 10^{10}。\n\n', ' 在一行中输出 PA + PB 的值。\n\n', 8, 16, 'pat', 2, '3862767 6 13530293 3\n', '399\n');
INSERT INTO `problem` VALUES (127, 'A除以B', '本题要求计算 A/B，其中 A 是不超过 1000 位的正整数，B 是 1 位正整数。你需要输出商数 Q 和余数 R，使得 A = B times Q + R 成立。\n\n', '[{\'in\': \'123456789050987654321 7\\n\', \'out\': \'17636684150141093474 3\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 A 和 B，中间以 1 空格分隔。\n\n', ' 在一行中依次输出 Q 和 R，中间以 1 空格分隔。\n\n', 8, 16, 'pat', 1, '123456789050987654321 7\n', '17636684150141093474 3\n');
INSERT INTO `problem` VALUES (128, '锤子剪刀布', '大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：\n\n\nFigCJB.jpg(~/724da598-b37f-4f1f-99b4-71459654ce3a.jpg)\n\n\n现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。\n\n', '[{\'in\': \'10\\nC J\\nJ B\\nC B\\nB B\\nB C\\nC C\\nC B\\nJ B\\nB C\\nJ J\\n\', \'out\': \'5 3 2\\n2 3 5\\nB B\\n\'}]', 1, 0, 0, ' 输入第 1 行给出正整数 N（le 10^5），即双方交锋的次数。随后 N 行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C 代表“锤子”、J 代表“剪刀”、B 代表“布”，第 1 个字母代表甲方，第 2 个代表乙方，中间有 1 个空格。\n\n', ' 输出第 1、2 行分别给出甲、乙的胜、平、负次数，数字间以 1 个空格分隔。第 3 行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有 1 个空格。如果解不唯一，则输出按字母序最小的解。\n\n', 8, 16, 'pat', 1, '10\nC J\nJ B\nC B\nB B\nB C\nC C\nC B\nJ B\nB C\nJ J\n', '5 3 2\n2 3 5\nB B\n');
INSERT INTO `problem` VALUES (129, '数字黑洞', '给定任一个各位数字不完全相同的 4 位正整数，如果我们先把 4 个数字按非递增排序，再按非递减排序，然后用第 1 个数字减第 2 个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的 6174，这个神奇的数字也叫 Kaprekar 常数。\n\n例如，我们从6767开始，将得到\n\n7766 - 6677 = 1089\n9810 - 0189 = 9621\n9621 - 1269 = 8352\n8532 - 2358 = 6174\n7641 - 1467 = 6174\n... ...\n\n\n现给定任意 4 位正整数，请编写程序演示到达黑洞的过程。\n\n', '[{\'in\': \'6767\\n\', \'out\': \'7766 - 6677 = 1089\\n9810 - 0189 = 9621\\n9621 - 1269 = 8352\\n8532 - 2358 = 6174\\n\'}, {\'in\': \'2222\\n\', \'out\': \'2222 - 2222 = 0000\\n\'}]', 1, 0, 0, ' 输入给出一个 (0, 10^4) 区间内的正整数 N。\n\n', ' 如果 N 的 4 位数字全相等，则在一行内输出 N - N = 0000；否则将计算的每一步在一行内输出，直到 6174 作为差出现，输出格式见样例。注意每个数字按 4 位数格式输出。\n\n', 8, 16, 'pat', 2, '6767\n', '7766 - 6677 = 1089\n9810 - 0189 = 9621\n9621 - 1269 = 8352\n8532 - 2358 = 6174\n');
INSERT INTO `problem` VALUES (130, '月饼', '月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。\n\n注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45/2 = 94.5（亿元）。\n\n', '[{\'in\': \'3 20\\n18 15 10\\n75 72 45\\n\', \'out\': \'94.50\\n\'}]', 1, 0, 0, ' 每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 D 表示市场最大需求量。随后一行给出 N 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 N 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。\n\n', ' 对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。\n\n', 8, 16, 'pat', 1, '3 20\n18 15 10\n75 72 45\n', '94.50\n');
INSERT INTO `problem` VALUES (131, '个位数统计', '给定一个 k 位整数 N = d{k-1}10^{k-1} + cdots + d1 10^1 + d0 (0le di le 9, i=0,cdots ,k-1, d{k-1}0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 N = 100311，则有 2 个 0，3 个 1，和 1 个 3。\n\n', '[{\'in\': \'100311\\n\', \'out\': \'0:2\\n1:3\\n3:1\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 N。\n\n', ' 对 N 中每一种不同的个位数字，以 D:M 的格式在一行中输出该位数字 D 及其在 N 中出现的次数 M。要求按 D 的升序输出。\n\n', 8, 16, 'pat', 1, '100311\n', '0:2\n1:3\n3:1\n');
INSERT INTO `problem` VALUES (132, 'D进制的A+B', '输入两个非负 10 进制整数 A 和 B (le 2^{30} -1)，输出 A+B 的 D (1 < D le 10)进制数。\n\n', '[{\'in\': \'123 456 8\\n\', \'out\': \'1103\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 3 个整数 A、B 和 D。\n\n', ' 输出 A+B 的 D 进制数。\n\n', 8, 16, 'pat', 1, '123 456 8\n', '1103\n');
INSERT INTO `problem` VALUES (133, '组个最小数', '给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。\n\n现给定数字，请编写程序输出能够组成的最小的数。\n\n', '[{\'in\': \'2 2 0 0 0 3 0 0 1 0\\n\', \'out\': \'10015558\\n\'}]', 1, 0, 0, ' 输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。\n\n', ' 在一行中输出能够组成的最小的数。\n\n', 8, 16, 'pat', 1, '2 2 0 0 0 3 0 0 1 0\n', '10015558\n');
INSERT INTO `problem` VALUES (134, '科学计数法', '科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式 +-1-9.0-9+E+-0-9+，即数字的整数部分只有 1 位，小数部分至少有 1 位，该数字及其指数部分的正负号即使对正数也必定明确给出。\n\n现以科学计数法的格式给出实数 A，请编写程序按普通数字表示法输出 A，并保证所有有效位都被保留。\n\n', '[{\'in\': \'+1.23400E-03\\n\', \'out\': \'0.00123400\\n\'}, {\'in\': \'-1.2E+10\\n\', \'out\': \'-12000000000\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例，即一个以科学计数法表示的实数 A。该数字的存储长度不超过 9999 字节，且其指数的绝对值不超过 9999。\n\n', ' 对每个测试用例，在一行中按普通数字表示法输出 A，并保证所有有效位都被保留，包括末尾的 0。\n\n', 8, 16, 'pat', 2, '+1.23400E-03\n', '0.00123400\n');
INSERT INTO `problem` VALUES (135, '反转链表', '给定一个常数 K 以及一个单链表 L，请编写程序将 L 中每 K 个结点反转。例如：给定 L 为 1→2→3→4→5→6，K 为 3，则输出应该为 3→2→1→6→5→4；如果 K 为 4，则输出应该为 4→3→2→1→5→6，即最后不到 K 个元素不反转。\n\n', '[{\'in\': \'00100 6 4\\n00000 4 99999\\n00100 1 12309\\n68237 6 -1\\n33218 3 00000\\n99999 5 68237\\n12309 2 33218\\n\', \'out\': \'00000 4 33218\\n33218 3 12309\\n12309 2 00100\\n00100 1 99999\\n99999 5 68237\\n68237 6 -1\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例第 1 行给出第 1 个结点的地址、结点总个数正整数 N (le 10^5)、以及正整数 K (le N)，即要求反转的子链结点的个数。结点的地址是 5 位非负整数，NULL 地址用 -1 表示。\n\n接下来有 N 行，每行格式为：\n\nAddress Data Next\n\n\n其中 Address 是结点地址，Data 是该结点保存的整数数据，Next 是下一结点的地址。\n\n', ' 对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。\n\n', 8, 16, 'pat', 1, '00100 6 4\n00000 4 99999\n00100 1 12309\n68237 6 -1\n33218 3 00000\n99999 5 68237\n12309 2 33218\n', '00000 4 33218\n33218 3 12309\n12309 2 00100\n00100 1 99999\n99999 5 68237\n68237 6 -1\n');
INSERT INTO `problem` VALUES (136, '程序运行时间', '要获得一个 C 语言程序的运行时间，常用的方法是调用头文件 time.h，其中提供了 clock() 函数，可以捕捉从程序开始运行到 clock() 被调用时所耗费的时间。这个时间单位是 clock tick，即“时钟打点”。同时还有一个常数 CLKTCK，给出了机器时钟每秒所走的时钟打点数。于是为了获得一个函数 f 的运行时间，我们只要在调用 f 之前先调用 clock()，获得一个时钟打点数 C1；在 f 执行完成后再调用 clock()，获得另一个时钟打点数 C2；两次获得的时钟打点数之差 (C2-C1) 就是 f 运行所消耗的时钟打点数，再除以常数 CLKTCK，就得到了以秒为单位的运行时间。\n\n这里不妨简单假设常数 CLKTCK 为 100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。\n\n', '[{\'in\': \'123 4577973\\n\', \'out\': \'12:42:59\\n\'}]', 1, 0, 0, ' 输入在一行中顺序给出 2 个整数 C1 和 C2。注意两次获得的时钟打点数肯定不相同，即 C1 < C2，并且取值在 0, 10^7。\n\n', ' 在一行中输出被测函数运行的时间。运行时间必须按照 hh:mm:ss（即2位的 时:分:秒）格式输出；不足 1 秒的时间四舍五入到秒。\n\n', 8, 16, 'pat', 1, '123 4577973\n', '12:42:59\n');
INSERT INTO `problem` VALUES (137, '打印沙漏', '本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“”，要求按下列格式打印\n\n\n \n  \n \n\n\n\n所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。\n\n给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。\n\n\n', '[{\'in\': \'19 *\\n\', \'out\': \'*****\\n ***\\n  *\\n ***\\n*****\\n2\\n\'}]', 1, 0, 0, ' 输入格式:\n\n输入在一行给出1个正整数N（le1000）和一个符号，中间以空格分隔。\n\n', ' 输出格式:\n\n首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。\n\n', 8, 16, 'pat', 1, '19 *\n', '*****\n ***\n  *\n ***\n*****\n2\n');
INSERT INTO `problem` VALUES (138, '人口普查', '某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。\n\n这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。\n\n', '[{\'in\': \'5\\nJohn 2001/05/12\\nTom 1814/09/06\\nAnn 2121/01/30\\nJames 1814/09/05\\nSteve 1967/11/20\\n\', \'out\': \'3 Tom John\\n\'}]', 1, 0, 0, ' 输入在第一行给出正整数 N，取值在(0, 10^5；随后 N 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 yyyy/mm/dd（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。\n\n', ' 在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。\n\n', 8, 16, 'pat', 1, '5\nJohn 2001/05/12\nTom 1814/09/06\nAnn 2121/01/30\nJames 1814/09/05\nSteve 1967/11/20\n', '3 Tom John\n');
INSERT INTO `problem` VALUES (139, '旧键盘', '旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及实际被输入的文字，请你列出肯定坏掉的那些键。\n\n', '[{\'in\': \'7_This_is_a_test\\n_hs_s_a_es\\n\', \'out\': \'7TI\\n\'}]', 1, 0, 0, ' 输入在 2 行中分别给出应该输入的文字、以及实际被输入的文字。每段文字是不超过 80 个字符的串，由字母 A-Z（包括大、小写）、数字 0-9、以及下划线 （代表空格）组成。题目保证 2 个字符串均非空。\n\n', ' 按照发现顺序，在一行中输出坏掉的键。其中英文字母只输出大写，每个坏键只输出一次。题目保证至少有 1 个坏键。\n\n', 8, 16, 'pat', 1, '7_This_is_a_test\n_hs_s_a_es\n', '7TI\n');
INSERT INTO `problem` VALUES (140, '完美数列', '给定一个正整数数列，和正整数 p，设这个数列中的最大值是 M，最小值是 m，如果 M le mp，则称这个数列是完美数列。\n\n现在给定参数 p 和一些正整数，请你从中选择尽可能多的数构成一个完美数列。\n\n', '[{\'in\': \'10 8\\n2 3 20 4 5 1 6 7 8 9\\n\', \'out\': \'8\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数 N 和 p，其中 N（le 10^5）是输入的正整数的个数，p（le 10^9）是给定的参数。第二行给出 N 个正整数，每个数不超过 10^9。\n\n', ' 在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。\n\n', 8, 16, 'pat', 1, '10 8\n2 3 20 4 5 1 6 7 8 9\n', '8\n');
INSERT INTO `problem` VALUES (141, '查验身份证', '一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：\n\n首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值Z；最后按照以下关系对应Z值与校验码M的值：\n\nZ：0 1 2 3 4 5 6 7 8 9 10\nM：1 0 X 9 8 7 6 5 4 3 2\n\n现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。\n\n', '[{\'in\': \'4\\n320124198808240056\\n12010X198901011234\\n110108196711301866\\n37070419881216001X\\n\', \'out\': \'12010X198901011234\\n110108196711301866\\n37070419881216001X\\n\'}, {\'in\': \'2\\n320124198808240056\\n110108196711301862\\n\', \'out\': \'All passed\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数N（le 100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。\n\n', ' 按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出All passed。\n\n', 8, 16, 'pat', 2, '4\n320124198808240056\n12010X198901011234\n110108196711301866\n37070419881216001X\n', '12010X198901011234\n110108196711301866\n37070419881216001X\n');
INSERT INTO `problem` VALUES (142, '挖掘机技术哪家强', '为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。\n\n', '[{\'in\': \'6\\n3 65\\n2 80\\n1 100\\n2 70\\n3 40\\n3 0\\n\', \'out\': \'2 150\\n\'}]', 1, 0, 0, ' 输入在第 1 行给出不超过 10^5 的正整数 N，即参赛人数。随后 N 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。\n\n', ' 在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。\n\n', 8, 16, 'pat', 1, '6\n3 65\n2 80\n1 100\n2 70\n3 40\n3 0\n', '2 150\n');
INSERT INTO `problem` VALUES (143, '旧键盘打字', '旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及坏掉的那些键，打出的结果文字会是怎样？\n\n', '[{\'in\': \'7+IE.\\n7_This_is_a_test.\\n\', \'out\': \'_hs_s_a_tst\\n\'}]', 1, 0, 0, ' 输入在 2 行中分别给出坏掉的那些键、以及应该输入的文字。其中对应英文字母的坏键以大写给出；每段文字是不超过 10^5 个字符的串。可用的字符包括字母 a-z, A-Z、数字 0-9、以及下划线 （代表空格）、,、.、-、+（代表上档键）。题目保证第 2 行输入的文字串非空。\n\n注意：如果上档键坏掉了，那么大写的英文字母无法被打出。\n\n', ' 在一行中输出能够被打出的结果文字。如果没有一个字符能被打出，则输出空行。\n\n', 8, 16, 'pat', 1, '7+IE.\n7_This_is_a_test.\n', '_hs_s_a_tst\n');
INSERT INTO `problem` VALUES (144, '有理数四则运算', '本题要求编写程序，计算 2 个有理数的和、差、积、商。\n\n', '[{\'in\': \'2/3 -4/2\\n\', \'out\': \'2/3 + (-2) = (-1 1/3)\\n2/3 - (-2) = 2 2/3\\n2/3 * (-2) = (-1 1/3)\\n2/3 / (-2) = (-1/3)\\n\'}, {\'in\': \'5/3 0/6\\n\', \'out\': \'1 2/3 + 0 = 1 2/3\\n1 2/3 - 0 = 1 2/3\\n1 2/3 * 0 = 0\\n1 2/3 / 0 = Inf\\n\'}]', 1, 0, 0, ' 输入在一行中按照 a1/b1 a2/b2 的格式给出两个分数形式的有理数，其中分子和分母全是整型范围内的整数，负号只可能出现在分子前，分母不为 0。\n\n', ' 分别在 4 行中按照 有理数1 运算符 有理数2 = 结果 的格式顺序输出 2 个有理数的和、差、积、商。注意输出的每个有理数必须是该有理数的最简形式 k a/b，其中 k 是整数部分，a/b 是最简分数部分；若为负数，则须加括号；若除法分母为 0，则输出 Inf。题目保证正确的输出中没有超过整型范围的整数。\n\n', 8, 16, 'pat', 2, '2/3 -4/2\n', '2/3 + (-2) = (-1 1/3)\n2/3 - (-2) = 2 2/3\n2/3 * (-2) = (-1 1/3)\n2/3 / (-2) = (-1/3)\n');
INSERT INTO `problem` VALUES (145, '插入与归并', '根据维基百科的定义：\n\n插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。\n\n归并排序进行如下迭代操作：首先将原始序列看成 N 个只包含 1 个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下 1 个有序的序列。\n\n现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？\n\n\n', '[{\'in\': \'10\\n3 1 2 8 7 5 9 4 6 0\\n1 2 3 7 8 5 9 4 6 0\\n\', \'out\': \'Insertion Sort\\n1 2 3 5 7 8 9 4 6 0\\n\'}, {\'in\': \'10\\n3 1 2 8 7 5 9 4 0 6\\n1 3 2 8 5 7 4 9 0 6\\n\', \'out\': \'Merge Sort\\n1 2 3 8 4 5 7 9 0 6\\n\'}]', 1, 0, 0, ' 输入在第一行给出正整数 N (le100)；随后一行给出原始序列的 N 个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。\n\n', ' 首先在第 1 行中输出Insertion Sort表示插入排序、或Merge Sort表示归并排序；然后在第 2 行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行首尾不得有多余空格。\n\n', 8, 16, 'pat', 2, '10\n3 1 2 8 7 5 9 4 6 0\n1 2 3 7 8 5 9 4 6 0\n', 'Insertion Sort\n1 2 3 5 7 8 9 4 6 0\n');
INSERT INTO `problem` VALUES (146, '跟奥巴马一起编程', '美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！\n\n', '[{\'in\': \'10 a\\n\', \'out\': \'aaaaaaaaaa\\na        a\\na        a\\na        a\\naaaaaaaaaa\\n\'}]', 1, 0, 0, ' 输入在一行中给出正方形边长 N（3le Nle 20）和组成正方形边的某种字符 C，间隔一个空格。\n\n', ' 输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。\n\n', 8, 16, 'pat', 1, '10 a\n', 'aaaaaaaaaa\na        a\na        a\na        a\naaaaaaaaaa\n');
INSERT INTO `problem` VALUES (147, '在霍格沃茨找零钱', '如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱 P 和他实付的钱 A，你的任务是写一个程序来计算他应该被找的零钱。\n\n', '[{\'in\': \'10.16.27 14.1.28\\n\', \'out\': \'3.2.1\\n\'}, {\'in\': \'14.1.28 10.16.27\\n\', \'out\': \'-3.2.1\\n\'}]', 1, 0, 0, ' 输入在 1 行中分别给出 P 和 A，格式为 Galleon.Sickle.Knut，其间用 1 个空格分隔。这里 Galleon 是 0, 10^7 区间内的整数，Sickle 是 0, 17) 区间内的整数，Knut 是 0, 29) 区间内的整数。\n\n', ' 在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。\n\n', 8, 16, 'pat', 2, '10.16.27 14.1.28\n', '3.2.1\n');
INSERT INTO `problem` VALUES (148, '统计同成绩学生', '本题要求读入 N 名学生的成绩，将获得某一给定分数的学生人数输出。\n\n', '[{\'in\': \'10\\n60 75 90 55 75 99 82 90 75 50\\n3 75 90 88\\n\', \'out\': \'3 2 0\\n\'}]', 1, 0, 0, ' 输入在第 1 行给出不超过 10^5 的正整数 N，即学生总人数。随后一行给出 N 名学生的百分制整数成绩，中间以空格分隔。最后一行给出要查询的分数个数 K（不超过 N 的正整数），随后是 K 个分数，中间以空格分隔。\n\n', ' 在一行中按查询顺序给出得分等于指定分数的学生人数，中间以空格分隔，但行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '10\n60 75 90 55 75 99 82 90 75 50\n3 75 90 88\n', '3 2 0\n');
INSERT INTO `problem` VALUES (149, '到底买不买', '小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。\n\n为方便起见，我们用0-9、a-z、A-Z范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。\n\nfigbuy.jpg(~/b7e2ffa6-8819-436d-ad79-a41263abe914.jpg)\n\n图 1\n\n', '[{\'in\': \'ppRYYGrrYBR2258\\nYrR8RrY\\n\', \'out\': \'Yes 8\\n\'}, {\'in\': \'ppRYYGrrYB225\\nYrR8RrY\\n\', \'out\': \'No 2\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例分别在 2 行中先后给出摊主的珠串和小红想做的珠串，两串都不超过 1000 个珠子。\n\n', ' 如果可以买，则在一行中输出 Yes 以及有多少多余的珠子；如果不可以买，则在一行中输出 No 以及缺了多少珠子。其间以 1 个空格分隔。\n\n', 8, 16, 'pat', 2, 'ppRYYGrrYBR2258\nYrR8RrY\n', 'Yes 8\n');
INSERT INTO `problem` VALUES (150, '有几个PAT', '字符串 APPAPT 中包含了两个单词 PAT，其中第一个 PAT 是第 2 位(P)，第 4 位(A)，第 6 位(T)；第二个 PAT 是第 3 位(P)，第 4 位(A)，第 6 位(T)。\n\n现给定字符串，问一共可以形成多少个 PAT？\n\n', '[{\'in\': \'APPAPT\\n\', \'out\': \'2\\n\'}]', 1, 0, 0, ' 输入只有一行，包含一个字符串，长度不超过10^5，只包含 P、A、T 三种字母。\n\n', ' 在一行中输出给定字符串中包含多少个 PAT。由于结果可能比较大，只输出对 1000000007 取余数的结果。\n\n', 8, 16, 'pat', 1, 'APPAPT\n', '2\n');
INSERT INTO `problem` VALUES (151, '考试座位号', '每个 PAT 考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。\n\n', '[{\'in\': \'4\\n3310120150912233 2 4\\n3310120150912119 4 1\\n3310120150912126 1 3\\n3310120150912002 3 2\\n2\\n3 4\\n\', \'out\': \'3310120150912002 2\\n3310120150912119 1\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 1000），随后 N 行，每行给出一个考生的信息：准考证号 试机座位号 考试座位号。其中准考证号由 16 位数字组成，座位从 1 到 N 编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。\n\n考生信息之后，给出一个正整数 M（le N），随后一行中给出 M 个待查询的试机座位号码，以空格分隔。\n\n', ' 对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用 1 个空格分隔。\n\n', 8, 16, 'pat', 1, '4\n3310120150912233 2 4\n3310120150912119 4 1\n3310120150912126 1 3\n3310120150912002 3 2\n2\n3 4\n', '3310120150912002 2\n3310120150912119 1\n');
INSERT INTO `problem` VALUES (152, '字符统计', '请编写程序，找出一段给定文字中出现最频繁的那个英文字母。\n\n', '[{\'in\': \'This is a simple TEST.  There ARE numbers and other symbols 1&2&3...........\\n\', \'out\': \'e 7\\n\'}]', 1, 0, 0, ' 输入在一行中给出一个长度不超过 1000 的字符串。字符串由 ASCII 码表中任意可见字符及空格组成，至少包含 1 个英文字母，以回车结束（回车不算在内）。\n\n', ' 在一行中输出出现频率最高的那个英文字母及其出现次数，其间以空格分隔。如果有并列，则输出按字母序最小的那个字母。统计时不区分大小写，输出小写字母。\n\n', 8, 16, 'pat', 1, 'This is a simple TEST.  There ARE numbers and other symbols 1&2&3...........\n', 'e 7\n');
INSERT INTO `problem` VALUES (153, '输出PATest', '给定一个长度不超过 10^4 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 PATestPATest.... 这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。\n\n', '[{\'in\': \'redlesPayBestPATTopTeePHPereatitAPPT\\n\', \'out\': \'PATestPATestPTetPTePePee\\n\'}]', 1, 0, 0, ' 输入在一行中给出一个长度不超过 10^4 的、仅由英文字母构成的非空字符串。\n\n', ' 在一行中按题目要求输出排序后的字符串。题目保证输出非空。\n\n', 8, 16, 'pat', 1, 'redlesPayBestPATTopTeePHPereatitAPPT\n', 'PATestPATestPTetPTePePee\n');
INSERT INTO `problem` VALUES (154, '火星数字', '火星人是以 13 进制计数的：\n\n- 地球人的 0 被火星人称为 tret。\n- 地球人数字 1 到 12 的火星文分别为：jan, feb, mar, apr, may, jun, jly, aug, sep, oct, nov, dec。\n- 火星人将进位以后的 12 个高位数字分别称为：tam, hel, maa, huh, tou, kes, hei, elo, syy, lok, mer, jou。\n\n例如地球人的数字 29 翻译成火星文就是 hel mar；而火星文 elo nov 对应地球数字 115。为了方便交流，请你编写程序实现地球和火星数字之间的互译。\n\n', '[{\'in\': \'4\\n29\\n5\\nelo nov\\ntam\\n\', \'out\': \'hel mar\\nmay\\n115\\n13\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（<100），随后 N 行，每行给出一个 0, 169) 区间内的数字 —— 或者是地球文，或者是火星文。\n\n', ' 对应输入的每一行，在一行中输出翻译后的另一种语言的数字。\n\n', 8, 16, 'pat', 1, '4\n29\n5\nelo nov\ntam\n', 'hel mar\nmay\n115\n13\n');
INSERT INTO `problem` VALUES (155, '快速排序', '著名的快速排序算法里有一个经典的划分过程：我们通常采用某种方法取一个元素作为主元，通过交换，把比主元小的元素放到它的左边，比主元大的元素放到它的右边。 给定划分后的 N 个互不相同的正整数的排列，请问有多少个元素可能是划分前选取的主元？\n\n例如给定 N = 5, 排列是1、3、2、4、5。则：\n\n- 1 的左边没有元素，右边的元素都比它大，所以它可能是主元；\n- 尽管 3 的左边元素都比它小，但其右边的 2 比它小，所以它不能是主元；\n- 尽管 2 的右边元素都比它大，但其左边的 3 比它大，所以它不能是主元；\n- 类似原因，4 和 5 都可能是主元。\n\n因此，有 3 个元素可能是主元。\n\n', '[{\'in\': \'5\\n1 3 2 4 5\\n\', \'out\': \'3\\n1 4 5\\n\'}]', 1, 0, 0, ' 输入在第 1 行中给出一个正整数 N（le 10^5）； 第 2 行是空格分隔的 N 个不同的正整数，每个数不超过 10^9。\n\n', ' 在第 1 行中输出有可能是主元的元素个数；在第 2 行中按递增顺序输出这些元素，其间以 1 个空格分隔，行首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '5\n1 3 2 4 5\n', '3\n1 4 5\n');
INSERT INTO `problem` VALUES (156, '划拳', '划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人划拳的方法为：每人口中喊出一个数字，同时用手比划出一个数字。如果谁比划出的数字正好等于两人喊出的数字之和，谁就赢了，输家罚一杯酒。两人同赢或两人同输则继续下一轮，直到唯一的赢家出现。\n\n下面给出甲、乙两人的划拳记录，请你统计他们最后分别喝了多少杯酒。\n\n', '[{\'in\': \'5\\n8 10 9 12\\n5 10 5 10\\n3 8 5 12\\n12 18 1 13\\n4 16 12 15\\n\', \'out\': \'1 2\\n\'}]', 1, 0, 0, ' 输入第一行先给出一个正整数 N（le 100），随后 N 行，每行给出一轮划拳的记录，格式为：\n\n甲喊 甲划 乙喊 乙划\n\n其中喊是喊出的数字，划是划出的数字，均为不超过 100 的正整数（两只手一起划）。\n\n', ' 在一行中先后输出甲、乙两人喝酒的杯数，其间以一个空格分隔。\n\n', 8, 16, 'pat', 1, '5\n8 10 9 12\n5 10 5 10\n3 8 5 12\n12 18 1 13\n4 16 12 15\n', '1 2\n');
INSERT INTO `problem` VALUES (157, '编程团体赛', '编程团体赛的规则为：每个参赛队由若干队员组成；所有队员独立比赛；参赛队的成绩为所有队员的成绩和；成绩最高的队获胜。\n\n现给定所有队员的比赛成绩，请你编写程序找出冠军队。\n\n', '[{\'in\': \'6\\n3-10 99\\n11-5 87\\n102-1 0\\n102-3 100\\n11-9 89\\n3-2 61\\n\', \'out\': \'11 176\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 10^4），即所有参赛队员总数。随后 N 行，每行给出一位队员的成绩，格式为：队伍编号-队员编号 成绩，其中队伍编号为 1 到 1000 的正整数，队员编号为 1 到 10 的正整数，成绩为 0 到 100 的整数。\n\n', ' 在一行中输出冠军队的编号和总成绩，其间以一个空格分隔。注意：题目保证冠军队是唯一的。\n\n', 8, 16, 'pat', 1, '6\n3-10 99\n11-5 87\n102-1 0\n102-3 100\n11-9 89\n3-2 61\n', '11 176\n');
INSERT INTO `problem` VALUES (158, '数字加密', '本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K 代表 12；对偶数位，用 B 的数字减去 A 的数字，若结果为负数，则再加 10。这里令个位为第 1 位。\n\n', '[{\'in\': \'1234567 368782971\\n\', \'out\': \'3695Q8118\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 A 和 B，均为不超过 100 位的正整数，其间以空格分隔。\n\n', ' 在一行中输出加密后的结果。\n\n', 8, 16, 'pat', 1, '1234567 368782971\n', '3695Q8118\n');
INSERT INTO `problem` VALUES (159, '数列的片段和', '给定一个正数数列，我们可以从中截取任意的连续的几个数，称为片段。例如，给定数列 { 0.1, 0.2, 0.3, 0.4 }，我们有 (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4) 这 10 个片段。\n\n给定正整数数列，求出全部片段包含的所有的数之和。如本例中 10 个片段总和是 0.1 + 0.3 + 0.6 + 1.0 + 0.2 + 0.5 + 0.9 + 0.3 + 0.7 + 0.4 = 5.0。\n\n', '[{\'in\': \'4\\n0.1 0.2 0.3 0.4\\n\', \'out\': \'5.00\\n\'}]', 1, 0, 0, ' 输入第一行给出一个不超过 10^5 的正整数 N，表示数列中数的个数，第二行给出 N  个不超过 1.0 的正数，是数列中的数，其间以空格分隔。\n\n', ' 在一行中输出该序列所有片段包含的数之和，精确到小数点后 2 位。\n\n', 8, 16, 'pat', 1, '4\n0.1 0.2 0.3 0.4\n', '5.00\n');
INSERT INTO `problem` VALUES (160, '螺旋矩阵', '本题要求将给定的 N 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 m 行 n 列，满足条件：mtimes n 等于 N；mge n；且 m-n 取所有可能值中的最小值。\n\n', '[{\'in\': \'12\\n37 76 20 98 76 42 53 95 60 81 58 93\\n\', \'out\': \'98 95 93\\n42 37 81\\n53 20 76\\n58 60 76\\n\'}]', 1, 0, 0, ' 输入在第 1 行中给出一个正整数 N，第 2 行给出 N 个待填充的正整数。所有数字不超过 10^4，相邻数字以空格分隔。\n\n', ' 输出螺旋矩阵。每行 n 个数字，共 m 行。相邻数字以 1 个空格分隔，行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '12\n37 76 20 98 76 42 53 95 60 81 58 93\n', '98 95 93\n42 37 81\n53 20 76\n58 60 76\n');
INSERT INTO `problem` VALUES (161, '复数乘法', '复数可以写成 (A + Bi) 的常规形式，其中 A 是实部，B 是虚部，i 是虚数单位，满足 i^2 = -1；也可以写成极坐标下的指数形式 (Rtimes e^{(Pi)})，其中 R 是复数模，P 是辐角，i 是虚数单位，其等价于三角形式 (R(cos (P) + i sin (P))。\n\n现给定两个复数的 R 和 P，要求输出两数乘积的常规形式。\n\n', '[{\'in\': \'2.3 3.5 5.2 0.4\\n\', \'out\': \'-8.68-8.23i\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出两个复数的 R1, P1, R2, P2，数字间以空格分隔。\n\n', ' 在一行中按照 A+Bi 的格式输出两数乘积的常规形式，实部和虚部均保留 2 位小数。注意：如果 B 是负数，则应该写成 A-|B|i 的形式。\n\n', 8, 16, 'pat', 1, '2.3 3.5 5.2 0.4\n', '-8.68-8.23i\n');
INSERT INTO `problem` VALUES (162, '卖个萌', '萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：\n\n左手(左眼口右眼)右手\n\n现给出可选用的符号集合，请你按用户的要求输出表情。\n\n', '[{\'in\': \'[╮][╭][o][~\\\\][/~]  [<][>]\\n [╯][╰][^][-][=][>][<][@][⊙]\\n[Д][▽][_][ε][^]  ...\\n4\\n1 1 2 2 2\\n6 8 1 5 5\\n3 3 4 3 3\\n2 10 3 9 3\\n\', \'out\': \'╮(╯▽╰)╭\\n<(@Д=)/~\\no(^ε^)o\\nAre you kidding me? @\\\\/@\\n\'}]', 1, 0, 0, ' 输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号 内。题目保证每个集合都至少有一个符号，并不超过 10 个符号；每个符号包含 1 到 4 个非空字符。\n\n之后一行给出一个正整数 K，为用户请求的个数。随后 K 行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从 1 开始），数字间以空格分隔。\n\n', ' 对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出 Are you kidding me? @/@。\n\n', 8, 16, 'pat', 1, '[╮][╭][o][~\\][/~]  [<][>]\n [╯][╰][^][-][=][>][<][@][⊙]\n[Д][▽][_][ε][^]  ...\n4\n1 1 2 2 2\n6 8 1 5 5\n3 3 4 3 3\n2 10 3 9 3\n', '╮(╯▽╰)╭\n<(@Д=)/~\no(^ε^)o\nAre you kidding me? @\\/@\n');
INSERT INTO `problem` VALUES (163, '住房空置率', '在不打扰居民的前提下，统计住房空置率的一种方法是根据每户用电量的连续变化规律进行判断。判断方法如下：\n\n- 在观察期内，若存在超过一半的日子用电量低于某给定的阈值 e，则该住房为“可能空置”；\n\n- 若观察期超过某给定阈值 D 天，且满足上一个条件，则该住房为“空置”。\n\n现给定某居民区的住户用电量数据，请你统计“可能空置”的比率和“空置”比率，即以上两种状态的住房占居民区住房总套数的百分比。\n\n', '[{\'in\': \'5 0.5 10\\n6 0.3 0.4 0.5 0.2 0.8 0.6\\n10 0.0 0.1 0.2 0.3 0.0 0.8 0.6 0.7 0.0 0.5\\n5 0.4 0.3 0.5 0.1 0.7\\n11 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\\n11 2 2 2 1 1 0.1 1 0.1 0.1 0.1 0.1\\n\', \'out\': \'40.0% 20.0%\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数 N（le 1000），为居民区住房总套数；正实数 e，即低电量阈值；正整数 D，即观察期阈值。随后 N 行，每行按以下格式给出一套住房的用电量数据：\n\nK E1 E2 ... EK\n\n其中 K 为观察的天数，Ei 为第 i 天的用电量。\n\n', ' 在一行中输出“可能空置”的比率和“空置”比率的百分比值，其间以一个空格分隔，保留小数点后 1 位。\n\n', 8, 16, 'pat', 1, '5 0.5 10\n6 0.3 0.4 0.5 0.2 0.8 0.6\n10 0.0 0.1 0.2 0.3 0.0 0.8 0.6 0.7 0.0 0.5\n5 0.4 0.3 0.5 0.1 0.7\n11 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n11 2 2 2 1 1 0.1 1 0.1 0.1 0.1 0.1\n', '40.0% 20.0%\n');
INSERT INTO `problem` VALUES (164, '集体照', '拍集体照时队形很重要，这里对给定的 N 个人 K 排的队形设计排队规则如下：\n\n- 每排人数为 N/K（向下取整），多出来的人全部站在最后一排；\n\n- 后排所有人的个子都不比前排任何人矮；\n\n- 每排中最高者站中间（中间位置为 m/2+1，其中 m 为该排人数，除法向下取整）；\n\n- 每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；\n\n- 若多人身高相同，则按名字的字典序升序排列。这里保证无重名。\n\n现给定一组拍照人，请编写程序输出他们的队形。\n\n', '[{\'in\': \'10 3\\nTom 188\\nMike 170\\nEva 168\\nTim 160\\nJoe 190\\nAnn 168\\nBob 175\\nNick 186\\nAmy 160\\nJohn 159\\n\', \'out\': \'Bob Tom Joe Nick\\nAnn Mike Eva\\nTim Amy John\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例第 1 行给出两个正整数 N（le 10^4，总人数）和 K（le 10，总排数）。随后 N 行，每行给出一个人的名字（不包含空格、长度不超过 8 个英文字母）和身高（30, 300 区间内的整数）。\n\n', ' 输出拍照的队形。即K排人名，其间以空格分隔，行末不得有多余空格。注意：假设你面对拍照者，后排的人输出在上方，前排输出在下方。\n\n', 8, 16, 'pat', 1, '10 3\nTom 188\nMike 170\nEva 168\nTim 160\nJoe 190\nAnn 168\nBob 175\nNick 186\nAmy 160\nJohn 159\n', 'Bob Tom Joe Nick\nAnn Mike Eva\nTim Amy John\n');
INSERT INTO `problem` VALUES (165, '组合数的和', '给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。\n\n', '[{\'in\': \'3 2 8 5\\n\', \'out\': \'330\\n\'}]', 1, 0, 0, ' 输入在一行中先给出 N（1 < N < 10），随后给出 N 个不同的非 0 个位数字。数字间以空格分隔。\n\n', ' 输出所有可能组合出来的2位数字的和。\n\n', 8, 16, 'pat', 1, '3 2 8 5\n', '330\n');
INSERT INTO `problem` VALUES (166, '数零壹', '给定一串长度不超过 10^5 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 PAT (Basic)，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。\n\n', '[{\'in\': \'PAT (Basic)\\n\', \'out\': \'3 4\\n\'}]', 1, 0, 0, ' 输入在一行中给出长度不超过 10^5、以回车结束的字符串。\n\n', ' 在一行中先后输出 0 的个数和 1 的个数，其间以空格分隔。\n\n', 8, 16, 'pat', 1, 'PAT (Basic)\n', '3 4\n');
INSERT INTO `problem` VALUES (167, '选择题', '批改多选题是比较麻烦的事情，本题就请你写个程序帮助老师批改多选题，并且指出哪道题错的人最多。\n\n', '[{\'in\': \'3 4 \\n3 4 2 a c\\n2 5 1 b\\n5 3 2 b c\\n1 5 4 a b d e\\n(2 a c) (2 b d) (2 a c) (3 a b e)\\n(2 a c) (1 b) (2 a b) (4 a b d e)\\n(2 b d) (1 e) (2 b c) (4 a b c d)\\n\', \'out\': \'3\\n6\\n5\\n2 2 3 4\\n\'}]', 1, 0, 0, ' 输入在第一行给出两个正整数 N（le 1000）和 M（le 100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 (选中的选项个数 选项1 ……)，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。\n\n', ' 按照输入的顺序给出每个学生的得分，每个分数占一行。注意判题时只有选择全部正确才能得到该题的分数。最后一行输出错得最多的题目的错误次数和编号（题目按照输入的顺序从 1 开始编号）。如果有并列，则按编号递增顺序输出。数字间用空格分隔，行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 Too simple。\n\n', 8, 16, 'pat', 1, '3 4 \n3 4 2 a c\n2 5 1 b\n5 3 2 b c\n1 5 4 a b d e\n(2 a c) (2 b d) (2 a c) (3 a b e)\n(2 a c) (1 b) (2 a b) (4 a b d e)\n(2 b d) (1 e) (2 b c) (4 a b c d)\n', '3\n6\n5\n2 2 3 4\n');
INSERT INTO `problem` VALUES (168, 'C语言竞赛', 'C 语言竞赛是浙江大学计算机学院主持的一个欢乐的竞赛。既然竞赛主旨是为了好玩，颁奖规则也就制定得很滑稽：\n\n- 0、冠军将赢得一份“神秘大奖”（比如很巨大的一本学生研究论文集……）。\n- 1、排名为素数的学生将赢得最好的奖品 —— 小黄人玩偶！\n- 2、其他人将得到巧克力。\n\n给定比赛的最终排名以及一系列参赛者的 ID，你要给出这些参赛者应该获得的奖品。\n\n', '[{\'in\': \'6\\n1111\\n6666\\n8888\\n1234\\n5555\\n0001\\n6\\n8888\\n0001\\n1111\\n2222\\n8888\\n2222\\n\', \'out\': \'8888: Minion\\n0001: Chocolate\\n1111: Mystery Award\\n2222: Are you kidding?\\n8888: Checked\\n2222: Are you kidding?\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 10^4），是参赛者人数。随后 N 行给出最终排名，每行按排名顺序给出一位参赛者的 ID（4 位数字组成）。接下来给出一个正整数 K 以及 K 个需要查询的 ID。\n\n', ' 对每个要查询的 ID，在一行中输出 ID: 奖品，其中奖品或者是 Mystery Award（神秘大奖）、或者是 Minion（小黄人）、或者是 Chocolate（巧克力）。如果所查 ID 根本不在排名里，打印 Are you kidding?（耍我呢？）。如果该 ID 已经查过了（即奖品已经领过了），打印 ID: Checked（不能多吃多占）。\n\n', 8, 16, 'pat', 1, '6\n1111\n6666\n8888\n1234\n5555\n0001\n6\n8888\n0001\n1111\n2222\n8888\n2222\n', '8888: Minion\n0001: Chocolate\n1111: Mystery Award\n2222: Are you kidding?\n8888: Checked\n2222: Are you kidding?\n');
INSERT INTO `problem` VALUES (169, '爱丁顿数', '英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” E ，即满足有 E 天骑车超过 E 英里的最大整数 E。据说爱丁顿自己的 E 等于87。\n\n现给定某人 N 天的骑车距离，请你算出对应的爱丁顿数 E（le N）。\n\n', '[{\'in\': \'10\\n6 7 6 9 3 10 8 2 7 8\\n\', \'out\': \'6\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N (le 10^5)，即连续骑车的天数；第二行给出 N 个非负整数，代表每天的骑车距离。\n\n', ' 在一行中给出 N 天的爱丁顿数。\n\n', 8, 16, 'pat', 1, '10\n6 7 6 9 3 10 8 2 7 8\n', '6\n');
INSERT INTO `problem` VALUES (170, '判断题', '判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。\n\n', '[{\'in\': \'3 6\\n2 1 3 3 4 5\\n0 0 1 0 1 1\\n0 1 1 0 0 1\\n1 0 1 0 1 0\\n1 1 0 0 1 1\\n\', \'out\': \'13\\n11\\n12\\n\'}]', 1, 0, 0, ' 输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。\n\n', ' 按照输入的顺序输出每个学生的得分，每个分数占一行。\n\n', 8, 16, 'pat', 1, '3 6\n2 1 3 3 4 5\n0 0 1 0 1 1\n0 1 1 0 0 1\n1 0 1 0 1 0\n1 1 0 0 1 1\n', '13\n11\n12\n');
INSERT INTO `problem` VALUES (171, '最简分数', '一个分数一般写成两个整数相除的形式：N/M，其中 M 不为0。最简分数是指分子和分母没有公约数的分数表示形式。\n\n现给定两个不相等的正分数 N1/M1 和 N2/M2，要求你按从小到大的顺序列出它们之间分母为 K 的最简分数。\n\n', '[{\'in\': \'7/18 13/20 12\\n\', \'out\': \'5/12 7/12\\n\'}]', 1, 0, 0, ' 输入在一行中按 N/M 的格式给出两个正分数，随后是一个正整数分母 K，其间以空格分隔。题目保证给出的所有整数都不超过 1000。\n\n', ' 在一行中按 N/M 的格式列出两个给定分数之间分母为 K 的所有最简分数，按从小到大的顺序，其间以 1 个空格分隔。行首尾不得有多余空格。题目保证至少有 1 个输出。\n\n', 8, 16, 'pat', 1, '7/18 13/20 12\n', '5/12 7/12\n');
INSERT INTO `problem` VALUES (172, '计算谱半径', '在数学中，矩阵的“谱半径”是指其特征值的模集合的上确界。换言之，对于给定的 n 个复数空间的特征值 { a1+b1i, cdots , an+bni }，它们的模为实部与虚部的平方和的开方，而“谱半径”就是最大模。\n\n现在给定一些复数空间的特征值，请你计算并输出这些特征值的谱半径。\n\n', '[{\'in\': \'5\\n0 1\\n2 0\\n-1 0\\n3 3\\n0 -3\\n\', \'out\': \'4.24\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数 N（le 10 000）是输入的特征值的个数。随后 N 行，每行给出 1 个特征值的实部和虚部，其间以空格分隔。注意：题目保证实部和虚部均为绝对值不超过 1000 的整数。\n\n', ' 在一行中输出谱半径，四舍五入保留小数点后 2 位。\n\n', 8, 16, 'pat', 1, '5\n0 1\n2 0\n-1 0\n3 3\n0 -3\n', '4.24\n');
INSERT INTO `problem` VALUES (173, '朋友数', '如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。例如 123 和 51 就是朋友数，因为 1+2+3 = 5+1 = 6，而 6 就是它们的朋友证号。给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。\n\n', '[{\'in\': \'8\\n123 899 51 998 27 33 36 12\\n\', \'out\': \'4\\n3 6 9 26\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数 N。随后一行给出 N 个正整数，数字间以空格分隔。题目保证所有数字小于 10^4。\n\n', ' 首先第一行输出给定数字中不同的朋友证号的个数；随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '8\n123 899 51 998 27 33 36 12\n', '4\n3 6 9 26\n');
INSERT INTO `problem` VALUES (174, '单身狗', '“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。\n\n', '[{\'in\': \'3\\n11111 22222\\n33333 44444\\n55555 66666\\n7\\n55555 44444 10000 88888 22222 11111 23333\\n\', \'out\': \'5\\n10000 23333 44444 55555 88888\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 50 000），是已知夫妻/伴侣的对数；随后 N 行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个 ID 号，为 5 位数字（从 00000 到 99999），ID 间以空格分隔；之后给出一个正整数 M（le 10 000），为参加派对的总人数；随后一行给出这 M 位客人的 ID，以空格分隔。题目保证无人重婚或脚踩两条船。\n\n', ' 首先第一行输出落单客人的总人数；随后第二行按 ID 递增顺序列出落单的客人。ID 间用 1 个空格分隔，行的首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '3\n11111 22222\n33333 44444\n55555 66666\n7\n55555 44444 10000 88888 22222 11111 23333\n', '5\n10000 23333 44444 55555 88888\n');
INSERT INTO `problem` VALUES (175, '图像过滤', '图像过滤是把图像中不重要的像素都染成背景色，使得重要部分被凸显出来。现给定一幅黑白图像，要求你将灰度值位于某指定区间内的所有像素颜色都用一种指定的颜色替换。\n\n', '[{\'in\': \'3 5 100 150 0\\n3 189 254 101 119\\n150 233 151 99 100\\n88 123 149 0 255\\n\', \'out\': \'003 189 254 000 000\\n000 233 151 099 000\\n088 000 000 000 255\\n\'}]', 1, 0, 0, ' 输入在第一行给出一幅图像的分辨率，即两个正整数 M 和 N（0 < M, N le 500），另外是待过滤的灰度值区间端点 A 和 B（0 le A < B le 255）、以及指定的替换灰度值。随后 M 行，每行给出 N 个像素点的灰度值，其间以空格分隔。所有灰度值都在 0, 255 区间内。\n\n', ' 输出按要求过滤后的图像。即输出 M 行，每行 N 个像素灰度值，每个灰度值占 3 位（例如黑色要显示为 000），其间以一个空格分隔。行首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '3 5 100 150 0\n3 189 254 101 119\n150 233 151 99 100\n88 123 149 0 255\n', '003 189 254 000 000\n000 233 151 099 000\n088 000 000 000 255\n');
INSERT INTO `problem` VALUES (176, '微博转发抽奖', '小明 PAT 考了满分，高兴之余决定发起微博转发抽奖活动，从转发的网友中按顺序每隔 N 个人就发出一个红包。请你编写程序帮助他确定中奖名单。\n\n', '[{\'in\': \'9 3 2\\nImgonnawin!\\nPickMe\\nPickMeMeMeee\\nLookHere\\nImgonnawin!\\nTryAgainAgain\\nTryAgainAgain\\nImgonnawin!\\nTryAgainAgain\\n\', \'out\': \'PickMe\\nImgonnawin!\\nTryAgainAgain\\n\'}, {\'in\': \'2 3 5\\nImgonnawin!\\nPickMe\\n\', \'out\': \'Keep going...\\n\'}]', 1, 0, 0, ' 输入第一行给出三个正整数 M（le 1000）、N 和 S，分别是转发的总量、小明决定的中奖间隔、以及第一位中奖者的序号（编号从 1 开始）。随后 M 行，顺序给出转发微博的网友的昵称（不超过 20 个字符、不包含空格回车的非空字符串）。\n\n注意：可能有人转发多次，但不能中奖多次。所以如果处于当前中奖位置的网友已经中过奖，则跳过他顺次取下一位。\n\n', ' 按照输入的顺序输出中奖名单，每个昵称占一行。如果没有人中奖，则输出 Keep going...。\n\n', 8, 16, 'pat', 2, '9 3 2\nImgonnawin!\nPickMe\nPickMeMeMeee\nLookHere\nImgonnawin!\nTryAgainAgain\nTryAgainAgain\nImgonnawin!\nTryAgainAgain\n', 'PickMe\nImgonnawin!\nTryAgainAgain\n');
INSERT INTO `problem` VALUES (177, '结绳', '给定一段一段的绳子，你需要把它们串成一条绳。每次串连的时候，是把两段绳子对折，再如下图所示套接在一起。这样得到的绳子又被当成是另一段绳子，可以再次对折去跟另一段绳子串连。每次串连后，原来两段绳子的长度就会减半。\n\nrope.jpg(~/46293e57-aa0e-414b-b5c3-7c4b2d5201e2.jpg)\n\n给定 N 段绳子的长度，你需要找出它们能串成的绳子的最大长度。\n\n', '[{\'in\': \'8\\n10 15 12 3 4 13 1 15\\n\', \'out\': \'14\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例第 1 行给出正整数 N (2 le N le 10^4)；第 2 行给出 N 个正整数，即原始绳段的长度，数字间以空格分隔。所有整数都不超过10^4。\n\n', ' 在一行中输出能够串成的绳子的最大长度。结果向下取整，即取为不超过最大长度的最近整数。\n\n', 8, 16, 'pat', 1, '8\n10 15 12 3 4 13 1 15\n', '14\n');
INSERT INTO `problem` VALUES (178, '开学寄语', '下图是上海某校的新学期开学寄语：天将降大任于斯人也，必先删其微博，卸其 QQ，封其电脑，夺其手机，收其 ipad，断其 wifi，使其百无聊赖，然后，净面、理发、整衣，然后思过、读书、锻炼、明智、开悟、精进。而后必成大器也！\n\n\njiyu.JPG(~/3b1d9f4a-778b-4942-a9e2-836262f363aa.JPG)\n\n\n本题要求你写个程序帮助这所学校的老师检查所有学生的物品，以助其成大器。\n\n', '[{\'in\': \'4 2\\n2333 6666\\nCYLL 3 1234 2345 3456\\nU 4 9966 6666 8888 6666\\nGG 2 2333 7777\\nJJ 3 0012 6666 2333\\n\', \'out\': \'U: 6666 6666\\nGG: 2333\\nJJ: 6666 2333\\n3 5\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数 N（le 1000）和 M（le 6），分别是学生人数和需要被查缴的物品种类数。第二行给出 M 个需要被查缴的物品编号，其中编号为 4 位数字。随后 N 行，每行给出一位学生的姓名缩写（由 1-4 个大写英文字母组成）、个人物品数量 K（0 le K le 10）、以及 K 个物品的编号。\n\n', ' 顺次检查每个学生携带的物品，如果有需要被查缴的物品存在，则按以下格式输出该生的信息和其需要被查缴的物品的信息（注意行末不得有多余空格）：\n\n姓名缩写: 物品编号1 物品编号2 ……\n\n最后一行输出存在问题的学生的总人数和被查缴物品的总数。\n\n', 8, 16, 'pat', 1, '4 2\n2333 6666\nCYLL 3 1234 2345 3456\nU 4 9966 6666 8888 6666\nGG 2 2333 7777\nJJ 3 0012 6666 2333\n', 'U: 6666 6666\nGG: 2333\nJJ: 6666 2333\n3 5\n');
INSERT INTO `problem` VALUES (179, '宇宙无敌加法器', '地球人习惯使用十进制数，并且默认一个数字的每一位都是十进制的。而在 PAT 星人开挂的世界里，每个数字的每一位都是不同进制的，这种神奇的数字称为“PAT数”。每个 PAT 星人都必须熟记各位数字的进制表，例如“……0527”就表示最低位是 7 进制数、第 2 位是 2 进制数、第 3 位是 5 进制数、第 4 位是 10 进制数，等等。每一位的进制 d 或者是 0（表示十进制）、或者是 2，9 区间内的整数。理论上这个进制表应该包含无穷多位数字，但从实际应用出发，PAT 星人通常只需要记住前 20 位就够用了，以后各位默认为 10 进制。\n\n在这样的数字系统中，即使是简单的加法运算也变得不简单。例如对应进制表“0527”，该如何计算“6203 + 415”呢？我们得首先计算最低位：3 + 5 = 8；因为最低位是 7 进制的，所以我们得到 1 和 1 个进位。第 2 位是：0 + 1 + 1（进位）= 2；因为此位是 2 进制的，所以我们得到 0 和 1 个进位。第 3 位是：2 + 4 + 1（进位）= 7；因为此位是 5 进制的，所以我们得到 2 和 1 个进位。第 4 位是：6 + 1（进位）= 7；因为此位是 10 进制的，所以我们就得到 7。最后我们得到：6203 + 415 = 7201。\n\n', '[{\'in\': \'30527\\n06203\\n415\\n\', \'out\': \'7201\\n\'}]', 1, 0, 0, ' 输入首先在第一行给出一个 N 位的进制表（0 < N le 20），以回车结束。 随后两行，每行给出一个不超过 N 位的非负的 PAT 数。\n\n', ' 在一行中输出两个 PAT 数之和。\n\n', 8, 16, 'pat', 1, '30527\n06203\n415\n', '7201\n');
INSERT INTO `problem` VALUES (180, 'Wifi密码', '下面是微博上流传的一张照片：“各位亲爱的同学们，鉴于大家有时需要使用 wifi，又怕耽误亲们的学习，现将 wifi 密码设置为下列数学题答案：A-1；B-2；C-3；D-4；请同学们自己作答，每两日一换。谢谢合作！！~”—— 老师们为了促进学生学习也是拼了…… 本题就要求你写程序把一系列题目的答案按照卷子上给出的对应关系翻译成 wifi 的密码。这里简单假设每道选择题都有 4 个选项，有且只有 1 个正确答案。\n\n\nwifi.jpg(~/7e56be3f-caba-45f1-b9cb-38a96d44de76.jpg)\n\n\n', '[{\'in\': \'8\\nA-T B-F C-F D-F\\nC-T B-F A-F D-F\\nA-F D-F C-F B-T\\nB-T A-F C-F D-F\\nB-F D-T A-F C-F\\nA-T C-F B-F D-F\\nD-T B-F C-F A-F\\nC-T A-F B-F D-F\\n\', \'out\': \'13224143\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 100），随后 N 行，每行按照 编号-答案 的格式给出一道题的 4 个选项，T 表示正确选项，F 表示错误选项。选项间用空格分隔。\n\n', ' 在一行中输出 wifi 密码。\n\n', 8, 16, 'pat', 1, '8\nA-T B-F C-F D-F\nC-T B-F A-F D-F\nA-F D-F C-F B-T\nB-T A-F C-F D-F\nB-F D-T A-F C-F\nA-T C-F B-F D-F\nD-T B-F C-F A-F\nC-T A-F B-F D-F\n', '13224143\n');
INSERT INTO `problem` VALUES (181, '互评成绩计算', '在浙大的计算机专业课中，经常有互评分组报告这个环节。一个组上台介绍自己的工作，其他组在台下为其表现评分。最后这个组的互评成绩是这样计算的：所有其他组的评分中，去掉一个最高分和一个最低分，剩下的分数取平均分记为 G1；老师给这个组的评分记为 G2。该组得分为 (G1+G2)/2，最后结果四舍五入后保留整数分。本题就要求你写个程序帮助老师计算每个组的互评成绩。\n\n', '[{\'in\': \'6 50\\n42 49 49 35 38 41\\n36 51 50 28 -1 30\\n40 36 41 33 47 49\\n30 250 -25 27 45 31\\n48 0 0 50 50 1234\\n43 41 36 29 42 29\\n\', \'out\': \'42\\n33\\n41\\n31\\n37\\n39\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数 N（ 3）和 M，分别是分组数和满分，均不超过 100。随后 N 行，每行给出该组得到的 N 个分数（均保证为整型范围内的整数），其中第 1 个是老师给出的评分，后面 N-1 个是其他组给的评分。合法的输入应该是 0, M 区间内的整数，若不在合法区间内，则该分数须被忽略。题目保证老师的评分都是合法的，并且每个组至少会有 3 个来自同学的合法评分。\n\n', ' 为每个组输出其最终得分。每个得分占一行。\n\n', 8, 16, 'pat', 1, '6 50\n42 49 49 35 38 41\n36 51 50 28 -1 30\n40 36 41 33 47 49\n30 250 -25 27 45 31\n48 0 0 50 50 1234\n43 41 36 29 42 29\n', '42\n33\n41\n31\n37\n39\n');
INSERT INTO `problem` VALUES (182, '字符串压缩与解压', '文本压缩有很多种方法，这里我们只考虑最简单的一种：把由相同字符组成的一个连续的片段用这个字符和片段中含有这个字符的个数来表示。例如 ccccc 就用 5c 来表示。如果字符没有重复，就原样输出。例如 aba 压缩后仍然是 aba。\n\n解压方法就是反过来，把形如 5c 这样的表示恢复为 ccccc。\n\n本题需要你根据压缩或解压的要求，对给定字符串进行处理。这里我们简单地假设原始字符串是完全由英文字母和空格组成的非空字符串。\n\n', '[{\'in\': \'C\\nTTTTThhiiiis isssss a   tesssst CAaaa as\\n\', \'out\': \'5T2h4is i5s a3 te4st CA3a as\\n\'}, {\'in\': \'D\\n5T2h4is i5s a3 te4st CA3a as10Z\\n\', \'out\': \'TTTTThhiiiis isssss a   tesssst CAaaa asZZZZZZZZZZ\\n\'}]', 1, 0, 0, ' 输入第一行给出一个字符，如果是 C 就表示下面的字符串需要被压缩；如果是 D 就表示下面的字符串需要被解压。第二行给出需要被压缩或解压的不超过 1000 个字符的字符串，以回车结尾。题目保证字符重复个数在整型范围内，且输出文件不超过 1MB。\n\n', ' 根据要求压缩或解压字符串，并在一行中输出结果。\n\n', 8, 16, 'pat', 2, 'C\nTTTTThhiiiis isssss a   tesssst CAaaa as\n', '5T2h4is i5s a3 te4st CA3a as\n');
INSERT INTO `problem` VALUES (183, '检查密码', '本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。该网站要求用户设置的密码必须由不少于6个字符组成，并且只能有英文字母、数字和小数点 .，还必须既有字母也有数字。\n\n\n', '[{\'in\': \'5\\n123s\\nzheshi.wodepw\\n1234.5678\\nWanMei23333\\npass*word.6\\n\', \'out\': \'Your password is tai duan le.\\nYour password needs shu zi.\\nYour password needs zi mu.\\nYour password is wan mei.\\nYour password is tai luan le.\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 100），随后 N 行，每行给出一个用户设置的密码，为不超过 80 个字符的非空字符串，以回车结束。\n\n', ' 对每个用户的密码，在一行中输出系统反馈信息，分以下5种：\n\n- 如果密码合法，输出Your password is wan mei.；\n- 如果密码太短，不论合法与否，都输出Your password is tai duan le.；\n- 如果密码长度合法，但存在不合法字符，则输出Your password is tai luan le.；\n- 如果密码长度合法，但只有字母没有数字，则输出Your password needs shu zi.；\n- 如果密码长度合法，但只有数字没有字母，则输出Your password needs zi mu.。\n\n', 8, 16, 'pat', 1, '5\n123s\nzheshi.wodepw\n1234.5678\nWanMei23333\npass*word.6\n', 'Your password is tai duan le.\nYour password needs shu zi.\nYour password needs zi mu.\nYour password is wan mei.\nYour password is tai luan le.\n');
INSERT INTO `problem` VALUES (184, '射击比赛', '本题目给出的射击比赛的规则非常简单，谁打的弹洞距离靶心最近，谁就是冠军；谁差得最远，谁就是菜鸟。本题给出一系列弹洞的平面坐标(x,y)，请你编写程序找出冠军和菜鸟。我们假设靶心在原点(0,0)。\n\n', '[{\'in\': \'3\\n0001 5 7\\n1020 -1 3\\n0233 0 -1\\n\', \'out\': \'0233 0001\\n\'}]', 1, 0, 0, ' 输入在第一行中给出一个正整数 N（le 10 000）。随后 N 行，每行按下列格式给出：\n\n\nID x y\n\n\n其中 ID 是运动员的编号（由 4 位数字组成）；x 和 y 是其打出的弹洞的平面坐标(x,y)，均为整数，且 0 le |x|, |y| le 100。题目保证每个运动员的编号不重复，且每人只打 1 枪。\n\n', ' 输出冠军和菜鸟的编号，中间空 1 格。题目保证他们是唯一的。\n\n', 8, 16, 'pat', 1, '3\n0001 5 7\n1020 -1 3\n0233 0 -1\n', '0233 0001\n');
INSERT INTO `problem` VALUES (185, '是否存在相等的差', '给定 N 张卡片，正面分别写上 1、2、……、N，然后全部翻面，洗牌，在背面分别写上 1、2、……、N。将每张牌的正反两面数字相减（大减小），得到 N 个非负差值，其中是否存在相等的差？\n\n', '[{\'in\': \'8\\n3 5 8 6 2 1 4 7\\n\', \'out\': \'5 2\\n3 3\\n2 2\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（2 le N le 10 000），随后一行给出 1 到 N 的一个洗牌后的排列，第 i 个数表示正面写了 i 的那张卡片背面的数字。\n\n', ' 按照“差值 重复次数”的格式从大到小输出重复的差值及其重复的次数，每行输出一个结果。\n\n', 8, 16, 'pat', 1, '8\n3 5 8 6 2 1 4 7\n', '5 2\n3 3\n2 2\n');
INSERT INTO `problem` VALUES (186, '外观数列', '外观数列是指具有以下特点的整数序列：\n\n\nd, d1, d111, d113, d11231, d112213111, ...\n\n\n它从不等于 1 的数字 d 开始，序列的第 n+1 项是对第 n 项的描述。比如第 2 项表示第 1 项有 1 个 d，所以就是 d1；第 2 项是 1 个 d（对应 d1）和 1 个 1（对应 11），所以第 3 项就是 d111。又比如第 4 项是 d113，其描述就是 1 个 d，2 个 1，1 个 3，所以下一项就是 d11231。当然这个定义对 d = 1 也成立。本题要求你推算任意给定数字 d 的外观数列的第 N 项。\n\n', '[{\'in\': \'1 8\\n\', \'out\': \'1123123111\\n\'}]', 1, 0, 0, ' 输入第一行给出 0,9 范围内的一个整数 d、以及一个正整数 N（le 40），用空格分隔。\n\n', ' 在一行中给出数字 d 的外观数列的第 N 项。\n\n', 8, 16, 'pat', 1, '1 8\n', '1123123111\n');
INSERT INTO `problem` VALUES (187, 'PAT单位排行', '每次 PAT 考试结束后，考试中心都会发布一个考生单位排行榜。本题就请你实现这个功能。\n\n', '[{\'in\': \'10\\nA57908 85 Au\\nB57908 54 LanX\\nA37487 60 au\\nT28374 67 CMU\\nT32486 24 hypu\\nA66734 92 cmu\\nB76378 71 AU\\nA47780 45 lanx\\nA72809 100 pku\\nA03274 45 hypu\\n\', \'out\': \'5\\n1 cmu 192 2\\n1 au 192 3\\n3 pku 100 1\\n4 hypu 81 2\\n4 lanx 81 2\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 10^5），即考生人数。随后 N 行，每行按下列格式给出一个考生的信息：\n\n\n准考证号 得分 学校\n\n\n其中准考证号是由 6 个字符组成的字符串，其首字母表示考试的级别：B代表乙级，A代表甲级，T代表顶级；得分是 0, 100 区间内的整数；学校是由不超过 6 个英文字母组成的单位码（大小写无关）。注意：题目保证每个考生的准考证号是不同的。\n\n', ' 首先在一行中输出单位个数。随后按以下格式非降序输出单位的排行榜：\n\n\n排名 学校 加权总分 考生人数\n\n\n其中排名是该单位的排名（从 1 开始）；学校是全部按小写字母输出的单位码；加权总分定义为乙级总分/1.5 + 甲级总分 + 顶级总分1.5的整数部分；考生人数是该属于单位的考生的总人数。\n\n学校首先按加权总分排行。如有并列，则应对应相同的排名，并按考生人数升序输出。如果仍然并列，则按单位码的字典序输出。\n\n', 8, 16, 'pat', 1, '10\nA57908 85 Au\nB57908 54 LanX\nA37487 60 au\nT28374 67 CMU\nT32486 24 hypu\nA66734 92 cmu\nB76378 71 AU\nA47780 45 lanx\nA72809 100 pku\nA03274 45 hypu\n', '5\n1 cmu 192 2\n1 au 192 3\n3 pku 100 1\n4 hypu 81 2\n4 lanx 81 2\n');
INSERT INTO `problem` VALUES (188, '就不告诉你', '做作业的时候，邻座的小盆友问你：“五乘以七等于多少？”你应该不失礼貌地围笑着告诉他：“五十三。”本题就要求你，对任何一对给定的正整数，倒着输出它们的乘积。\n\n53.jpg(~/0c3a4497-27c3-45ea-9c8e-5a1ab2df48af.jpg)\n\n\n', '[{\'in\': \'5 7\\n\', \'out\': \'53\\n\'}]', 1, 0, 0, ' 输入在第一行给出两个不超过 1000 的正整数 A 和 B，其间以空格分隔。\n\n', ' 在一行中倒着输出 A 和 B 的乘积。\n\n', 8, 16, 'pat', 1, '5 7\n', '53\n');
INSERT INTO `problem` VALUES (189, '有多少不同的值', '当自然数 n 依次取 1、2、3、……、N 时，算式 lfloor n/2rfloor +lfloor n/3rfloor +lfloor n/5rfloor  有多少个不同的值？（注：lfloor xrfloor 为取整函数，表示不超过 x 的最大自然数，即 x 的整数部分。）\n\n', '[{\'in\': \'2017\\n\', \'out\': \'1480\\n\'}]', 1, 0, 0, ' 输入给出一个正整数 N（2 le N le 10^4）。\n\n', ' 在一行中输出题面中算式取到的不同值的个数。\n\n', 8, 16, 'pat', 1, '2017\n', '1480\n');
INSERT INTO `problem` VALUES (190, '三人行', '子曰：“三人行，必有我师焉。择其善者而从之，其不善者而改之。”\n\n本题给定甲、乙、丙三个人的能力值关系为：甲的能力值确定是 2 位正整数；把甲的能力值的 2 个数字调换位置就是乙的能力值；甲乙两人能力差是丙的能力值的 X 倍；乙的能力值是丙的 Y 倍。请你指出谁比你强应“从之”，谁比你弱应“改之”。\n\n', '[{\'in\': \'48 3 7\\n\', \'out\': \'48 Ping Cong Gai\\n\'}, {\'in\': \'48 11 6\\n\', \'out\': \'No Solution\\n\'}]', 1, 0, 0, ' 输入在一行中给出三个数，依次为：M（你自己的能力值）、X 和 Y。三个数字均为不超过 1000 的正整数。\n\n', ' 在一行中首先输出甲的能力值，随后依次输出甲、乙、丙三人与你的关系：如果其比你强，输出 Cong；平等则输出 Ping；比你弱则输出 Gai。其间以 1 个空格分隔，行首尾不得有多余空格。\n\n注意：如果解不唯一，则以甲的最大解为准进行判断；如果解不存在，则输出 No Solution。\n\n', 8, 16, 'pat', 2, '48 3 7\n', '48 Ping Cong Gai\n');
INSERT INTO `problem` VALUES (191, '狼人杀-简单版', '以下文字摘自《灵机一动·好玩的数学》：“狼人杀”游戏分为狼人、好人两大阵营。在一局“狼人杀”游戏中，1 号玩家说：“2 号是狼人”，2 号玩家说：“3 号是好人”，3 号玩家说：“4 号是狼人”，4 号玩家说：“5 号是好人”，5 号玩家说：“4 号是好人”。已知这 5 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。扮演狼人角色的是哪两号玩家？\n\n本题是这个问题的升级版：已知 N 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。要求你找出扮演狼人角色的是哪几号玩家？\n\n', '[{\'in\': \'5\\n-2\\n+3\\n-4\\n+5\\n+4\\n\', \'out\': \'1 4\\n\'}, {\'in\': \'6\\n+6\\n+3\\n+1\\n-5\\n-2\\n+4\\n\', \'out\': \'1 5\\n\'}, {\'in\': \'5\\n-2\\n-3\\n-4\\n-5\\n-1\\n\', \'out\': \'No Solution\\n\'}]', 1, 2, 0, ' 输入在第一行中给出一个正整数 N（5 le N le 100）。随后 N 行，第 i 行给出第 i 号玩家说的话（1 le i le N），即一个玩家编号，用正号表示好人，负号表示狼人。\n\n', ' 如果有解，在一行中按递增顺序输出 2 个狼人的编号，其间以空格分隔，行首尾不得有多余空格。如果解不唯一，则输出最小序列解 —— 即对于两个序列 A = { a1, ..., aM } 和 B = { b1, ..., bM }，若存在 0 le k < M 使得 ai=bi （i le k），且 ak+1<bk+1，则称序列 A 小于序列 B。若无解则输出 No Solution。\n\n', 8, 16, 'pat', 3, '5\n-2\n+3\n-4\n+5\n+4\n', '1 4\n');
INSERT INTO `problem` VALUES (192, '危险品装箱', '集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。\n\n本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。\n\n', '[{\'in\': \'6 3\\n20001 20002\\n20003 20004\\n20005 20006\\n20003 20001\\n20005 20004\\n20004 20006\\n4 00001 20004 00002 20003\\n5 98823 20002 20003 20006 10010\\n3 12345 67890 23333\\n\', \'out\': \'No\\nYes\\nYes\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数：N (le 10^4) 是成对的不相容物品的对数；M (le 100) 是集装箱货品清单的单数。\n\n随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：\n\nK G1 G2 ... GK\n\n其中 K (le 1000) 是物品件数，Gi 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。\n\n', ' 对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 Yes，否则输出 No。\n\n', 8, 16, 'pat', 1, '6 3\n20001 20002\n20003 20004\n20005 20006\n20003 20001\n20005 20004\n20004 20006\n4 00001 20004 00002 20003\n5 98823 20002 20003 20006 10010\n3 12345 67890 23333\n', 'No\nYes\nYes\n');
INSERT INTO `problem` VALUES (193, 'N-自守数', '如果某个数 K 的平方乘以 N 以后，结果的末尾几位数等于 K，那么就称这个数为“N-自守数”。例如 3times 92^2 = 25 392，而 25 392 的末尾两位正好是 92，所以 92 是一个 3-自守数。\n\n本题就请你编写程序判断一个给定的数字是否关于某个 N 是 N-自守数。\n\n', '[{\'in\': \'3\\n92 5 233\\n\', \'out\': \'3 25392\\n1 25\\nNo\\n\'}]', 1, 0, 0, ' 输入在第一行中给出正整数 M（le 20），随后一行给出 M 个待检测的、不超过 1000 的正整数。\n\n', ' 对每个需要检测的数字，如果它是 N-自守数就在一行中输出最小的 N 和 NK^2 的值，以一个空格隔开；否则输出 No。注意题目保证 N < 10。\n\n', 8, 16, 'pat', 1, '3\n92 5 233\n', '3 25392\n1 25\nNo\n');
INSERT INTO `problem` VALUES (194, '最好吃的月饼', '月饼是久负盛名的中国传统糕点之一，自唐朝以来，已经发展出几百品种。\n\nmk.jpg(~/fcb325a0-7090-4bf4-acb0-d4d7ea832f27.jpg)\n\n\n若想评比出一种“最好吃”的月饼，那势必在吃货界引发一场腥风血雨…… 在这里我们用数字说话，给出全国各地各种月饼的销量，要求你从中找出销量冠军，认定为最好吃的月饼。\n\n', '[{\'in\': \'5 3\\n1001 992 0 233 6\\n8 0 2018 0 2008\\n36 18 0 1024 4\\n\', \'out\': \'2018\\n3 5\\n\'}]', 1, 0, 0, ' 输入首先给出两个正整数 N（le 1000）和 M（le 100），分别为月饼的种类数（于是默认月饼种类从 1 到 N 编号）和参与统计的城市数量。\n\n接下来 M 行，每行给出 N 个非负整数（均不超过 1 百万），其中第 i 个整数为第 i 种月饼的销量（块）。数字间以空格分隔。\n\n', ' 在第一行中输出最大销量，第二行输出销量最大的月饼的种类编号。如果冠军不唯一，则按编号递增顺序输出并列冠军。数字间以 1 个空格分隔，行首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '5 3\n1001 992 0 233 6\n8 0 2018 0 2008\n36 18 0 1024 4\n', '2018\n3 5\n');
INSERT INTO `problem` VALUES (195, '字符串A+B', '给定两个字符串 A 和 B，本题要求你输出 A+B，即两个字符串的并集。要求先输出 A，再输出 B，但重复的字符必须被剔除。\n\n', '[{\'in\': \'This is a sample test\\nto show you_How it works\\n\', \'out\': \'This ampletowyu_Hrk\\n\'}]', 1, 0, 0, ' 输入在两行中分别给出 A 和 B，均为长度不超过 10^6的、由可见 ASCII 字符 (即码值为32~126)和空格组成的、由回车标识结束的非空字符串。\n\n', ' 在一行中输出题面要求的 A 和 B 的和。\n\n', 8, 16, 'pat', 1, 'This is a sample test\nto show you_How it works\n', 'This ampletowyu_Hrk\n');
INSERT INTO `problem` VALUES (196, '谷歌的招聘', '2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步。\n\nprime.jpg(~/57148679-d574-4f49-b048-775c6c07791c.jpg)\n\n\n自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e = 2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466391932003059921... 其中粗体标出的 10 位数就是答案。\n\n本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。\n\n', '[{\'in\': \'20 5\\n23654987725541023819\\n\', \'out\': \'49877\\n\'}, {\'in\': \'10 3\\n2468024680\\n\', \'out\': \'404\\n\'}]', 1, 0, 0, ' 输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。\n\n', ' 在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 404。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。\n\n', 8, 16, 'pat', 2, '20 5\n23654987725541023819\n', '49877\n');
INSERT INTO `problem` VALUES (197, '输出网格\n', '输出如下所示的网格\r\n+---+---+\r\n|   |   |\r\n+---+---+\r\n说明：两个“+”之间有三个“-”。\n', '[{\'in\': \'\', \'out\': \'+---+---+\\n|   |   |\\n+---+---+\\n\'}]', 1, 0, 0, '无输入\n', '输入如样例所示的网格，总共三行。\r\n\n', 1, 13, 'ymc', 1, '无\n', '+');
INSERT INTO `problem` VALUES (198, '输出 C \n', '在标准输出上输出有*号构成的字母C,如下所示：\r\n****\r\n*\r\n*\r\n****\n', '[{\'in\': \'\', \'out\': \'****\\n*\\n*\\n****\\n\'}]', 1, 0, 0, '无\n', '****\r\n*\r\n*\r\n****\n', 1, 13, 'ymc', 1, '\n', '*');
INSERT INTO `problem` VALUES (199, '平方\n', '<p>输入一个整数n，求这个数的平方。</p>', '[{\'in\': \'2\\n\', \'out\': \'4\\n\'}, {\'in\': \'-10\\n\', \'out\': \'100\\n\'}]', 1, 0, 0, '<p>输入只有一个整数n。</p>', '<p>在单独的一行中输出n的平方。</p>', 1, 13, 'ymc', 2, '2', '4');
INSERT INTO `problem` VALUES (200, 'Hello World', '<p>让计算机输出\"Hello,World.\"。请注意字母大小写和标点符号，输出不包括两边的引号，行末输出一个换行符。</p>', '[{\'in\': \'\', \'out\': \'Hello,World.\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>', '<p>输出Hello,World.</p>', 1, 13, 'ymc', 1, '本题无输入样例\r\n', 'H');
INSERT INTO `problem` VALUES (201, '计算\n', '<p>计算123&times;657-(269-257)+169的值，并输出公式后输出一个换行符。</p>\n', '[{\'in\': \'\', \'out\': \'123*657-(269-257)+169=80968\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>计算123&times;657-(269-257)+169的值，并输出公式后输出一个换行符。</p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\r\n\n', '1');
INSERT INTO `problem` VALUES (202, '交换\n', '<p>从键盘读入两个整数，交换这两个整数后输出。</p>\n', '[{\'in\': \'102 3241\\n\', \'out\': \'3241 102\\n\'}]', 1, 0, 0, '<p>为两个整数。</p>\n', '<p>输出交换后的两个整数，这两个整数之间有1个空格。行末有一个换行符。</p>\n', 1, 13, 'ymc', 1, '2 5\r\n\n', '5');
INSERT INTO `problem` VALUES (203, '计算球体积\n', '根据输入的半径值，计算球的体积。\r\n\r\nPI取3.1415927。\r\n\r\n数据类型请用double！\n', '[{\'in\': \'1.5\\n\', \'out\': \'14.137\\n\'}, {\'in\': \'2\\n\', \'out\': \'33.510\\n\'}, {\'in\': \'99\\n\', \'out\': \'4064379.007\\n\'}, {\'in\': \'123\\n\', \'out\': \'7794781.577\\n\'}]', 1, 0, 0, '输入数据为一行，包括一个实数，表示球的半径。\n', '输出为一行，包括一个实数，计算结果保留三位小数。行尾输出一个换行符。\n', 1, 13, 'ymc', 4, '1.5\r\n\n', '1');
INSERT INTO `problem` VALUES (204, '计算两点间的距离\n', '<p>输入两点坐标（x1,y1）,（x2,y2）,计算并输出两点间的距离。 注意： 计算两点间距离时平方根函数的使用： 在文件开始加入语句 　　</p>\r\n<p>#include &lt;math.h&gt;</p>\r\n<p>&nbsp;平方根函数的使用： 　　</p>\r\n<p>s=sqrt(s);</p>\n', '[{\'in\': \'0 0 0 1\\n\', \'out\': \'1.00\\n\'}, {\'in\': \'0 1 1 0\\n\', \'out\': \'1.41\\n\'}, {\'in\': \'100 99 0 0\\n\', \'out\': \'140.72\\n\'}, {\'in\': \'9999 9999 99 0\\n\', \'out\': \'14070.89\\n\'}]', 1, 0, 0, '<p>输入数据占一行，由4个实数组成，分别表示x1,y1,x2,y2,数据之间用空格隔开。</p>\n', '<p>输出为一行，一行中只有一个浮点数，这个结果保留两位小数。行尾需要输出一个换行符。</p>\n', 1, 13, 'ymc', 4, '100 99 0 0\r\n\n', '1');
INSERT INTO `problem` VALUES (205, '数字分隔\n', '输入一个5位整数，分解出它的每位数字，并将这些数字间隔3个\'-\'的形式打印出来。\n', '[{\'in\': \'12345\\n\', \'out\': \'1---2---3---4---5\\n\'}, {\'in\': \'13579\', \'out\': \'1---3---5---7---9\\n\'}]', 1, 0, 0, '输入只有一行，该行只有一个五位整数。\n', '输出只有一行，分解出它的每位数字，并将这些数字间隔3个减号（就是：\"-\"）的形式打印出来。\n', 1, 13, 'ymc', 2, '12345\n', '1');
INSERT INTO `problem` VALUES (206, 'ASCII码\n', '输出字符的ASCII码值。\r\n背景知识：\r\n目前计算机中用得最广泛的字符集及其编码，是由美国国家标准局(ANSI)制定的ASCII码（American Standard Code for Information Interchange，美国标准信息交换码），它已被国际标准化组织（ISO）定为国际标准，称为ISO 646标准。适用于所有拉丁文字字母，ASCII码有7位码和8位码两种形式。\r\n因为1位二进制数可以表示2^1=2种状态：0、1；而2位二进制数可以表示2^2=4种状态：00、01、10、11；依次类推，7位二进制数可以表示2^7=128种状态，每种状态都唯一地编为一个7位的二进制码，对应一个字符（或控制码），这些码可以排列成一个十进制序号0～127。所以，7位 ASCII码是用七位二进制数进行编码的，可以表示128个字符。\r\n第0～32号及第127号(共34个)是控制字符或通讯专用字符，如控制符：LF（换行）、CR（回车）、FF（换页）、DEL（删除）、BS（退格)、BEL（振铃）等；通讯专用字符：SOH（文头）、EOT（文尾）、ACK（确认）等；\r\n第33～126号(共94个)是字符，其中第48～57号为0～9十个阿拉伯数字；65～90号为26个大写英文字母，97～122号为26个小写英文字母，其余为一些标点符号、运算符号等。\r\n在计算机的存储单元中，一个ASCII码值占一个字节(8个二进制位)，其最高位(b7)用作奇偶校验位。所谓奇偶校验，是指在代码传送过程中用来检验是否出现错误的一种方法，一般分奇校验和偶校验两种。奇校验规定：正确的代码一个字节中1的个数必须是奇数，若非奇数，则在最高位b7添1；偶校验规定：正确的代码一个字节中1的个数必须是偶数，若非偶数，则在最高位b7添1。\n', '[{\'in\': \'a\\n\', \'out\': \'97\\n\'}, {\'in\': \'b\', \'out\': \'98\\n\'}, {\'in\': \'C\', \'out\': \'67\\n\'}]', 1, 0, 0, '输入只有一个字符。\n', '在单独的一行中输出该字符的ASCII码值。\n', 1, 13, 'ymc', 3, 'a\n', '9');
INSERT INTO `problem` VALUES (207, '四则运算', '<p>从键盘读入两个整数，计算这两个整数的和、差、积、商。<span>在屏幕上输出计算公式。每行一个公式。</span></p>\r\n<p><span><strong>在每行行末输出一个换行符。</strong></span></p>', '[{\'in\': \'1024 32\\n\', \'out\': \'1024+32=1056\\n1024-32=992\\n1024*32=32768\\n1024/32=32\\n\'}]', 1, 0, 0, '<p>输入为两个整数。</p>', '<p>输出总共有4行。<br />第1行输出这两个数的和的公式。<br />第2行输出这两个数的差的公式。<br />第3行输出这两个数的积的公式。<br />第4行输出这两个数的商的公式。<br />每行的行尾均有一个换行符。</p>', 1, 13, 'ymc', 1, '6 2\r\n\r\n', '6');
INSERT INTO `problem` VALUES (208, '混合运算\n', '<p><span>写一个程序，计算1.47*(32.54-32.1)值，并在计算机屏幕上输出。</span><br /><span><strong>要求输出结果后再输出一个换行符。</strong></span></p>\n', '[{\'in\': \'\', \'out\': \'0.6468\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>写一个程序，计算1.47*(32.54-32.1)值，并在计算机屏幕上输出。<span style=\"color: #ff0000;\"><strong>结果保留4位小数。</strong></span><br /><strong>要求输出结果后再输出一个换行符。</strong></p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\n', '0');
INSERT INTO `problem` VALUES (209, '水仙花数\n', '<p>我们知道，如果一个数是水仙花数，当且仅当它的各位数字的三次方的和与这个数相等。 如，153 = 1<sup>3</sup> + 5<sup>3</sup> + 3<sup>3</sup>，则153是水仙花数。</p>', '[{\'in\': \'370\\n\', \'out\': \'Yes\\n\'}, {\'in\': \'125\\n\', \'out\': \'No\\n\'}, {\'in\': \'153\\n\', \'out\': \'Yes\\n\'}]', 1, 0, 0, '<p>输入只有一行，是一个三位数N（100&lt;=N&lt;=999）</p>', '<p>输出只有一行，如果输入的这个数是水仙花数，则输出&ldquo;Yes&rdquo;，否则输出&ldquo;No&rdquo;.</p>', 1, 13, 'ymc', 3, '153\r\n\r\n', 'Y');
INSERT INTO `problem` VALUES (210, '大小判定\n', '给定两个整数a和b，判定两个数的大小关系。\n', '[{\'in\': \'1000 1000\\n\', \'out\': \'=\\n\'}, {\'in\': \'1123 3457\\n\', \'out\': \'<\\n\'}, {\'in\': \'-212 -10241\\n\', \'out\': \'>\\n\'}]', 1, 0, 0, '输入只有一行，这一行中有两个由空格分开的整数。\n', '如果前一个数比后一个数大，在单独的一行中输出>;如果前一个数比后一个数小，则输出<;如果相等，则输出=。\n', 1, 13, 'ymc', 3, '1 2\r\n\n', '<');
INSERT INTO `problem` VALUES (211, '整数排序\n', '输入三个整数 x, y, z, 请把这三个数由小到大输出！\n', '[{\'in\': \'9 4 1\\n\', \'out\': \'1 4 9\\n\'}, {\'in\': \'99 66 88\', \'out\': \'66 88 99\\n\'}, {\'in\': \'23 34 12\', \'out\': \'12 23 34\\n\'}]', 1, 0, 0, '输入只有一组测试数据，包含三个整数，中间用空格隔开！\n', '将这三个数从小到达输出到一行，中间用空格隔开。\n', 1, 13, 'ymc', 3, '4 7 1\r\n\n', '1');
INSERT INTO `problem` VALUES (212, '判断能否构成三角形\n', '给定三条边，请你判断一下能不能组成一个三角形。\n', '[{\'in\': \'1 2 3\\n\', \'out\': \'NO\\n\'}, {\'in\': \'2 2 2\\n\', \'out\': \'YES\\n\'}, {\'in\': \'3 5 7\\n\', \'out\': \'YES\\n\'}, {\'in\': \'2 4 6\\n\', \'out\': \'NO\\n\'}]', 1, 0, 0, '输入一个测试数据，包含三个正数A,B,C。其中A,B,C <1000;\n', '对于每个测试实例，如果三条边长A,B,C能组成三角形的话，输出YES，否则NO。 \n', 1, 13, 'ymc', 4, '1 2 3\r\n\n', 'N');
INSERT INTO `problem` VALUES (213, '闰年\n', '<div class=\"para\">闰年是指年份能整除4且不能整除100的（如2004年就是闰年,1901年不是闰年）；或者年份能整除400的是闰年(如2000年是闰年，1900年不是闰年)。</div>\r\n<div class=\"para\"><span>给定一个4位整数，表示年份，如果该年是闰年，在单独的一行中输出yes，否则在单独单独一行中输出no。</span></div>\n', '[{\'in\': \'1900\\n\', \'out\': \'no\\n\'}, {\'in\': \'1996\\n\', \'out\': \'yes\\n\'}, {\'in\': \'1600\\n\', \'out\': \'yes\\n\'}]', 1, 0, 0, '<p><span>输入只有1个整数n。</span></p>\n', '<p><span>如果该年是闰年，在</span><strong><span>单独的一行中</span></strong><span>输出yes，否则在单独的一行中输出no</span><span>。</span></p>\n', 1, 13, 'ymc', 3, '2004\r\n\n', 'y');
INSERT INTO `problem` VALUES (214, '方程求根\n', '<p>给定方程的系数a，b，c，求一元二次方程 a*x<sup>2</sup>+b*x+c=0 的根。</p>', '[{\'in\': \'2.2 8.5 3.5\\n\', \'out\': \'-0.47 -3.40\\n\'}, {\'in\': \'1 2 3\', \'out\': \'no\\n\'}, {\'in\': \'1 4 4\\n\', \'out\': \'-2.00\\n\'}]', 1, 0, 0, '<p>输入只有三个浮点数，之间用空格分开。</p>', '<p>如果方程没有实数解，则输出no, 如果方程有两个相同的实数解，则单独的一行中输出该值，结果保留2位小数。 如果有两个不同的实数解，则在单独一行中输出，中间用一个空格分开，结果保留2位小数。大的在前，小的在后。</p>', 1, 13, 'ymc', 3, '2.2 8.5 3.5\r\n\r\n', '-');
INSERT INTO `problem` VALUES (215, '简单计算\n', '定义f(A)=1,f(a)=-1,f(B)=2,f(b)=-2,...f(Z)=26,f(z)=-26;\r\n给定一个字母x和一个整数y，求表达式f(x)+y的值。\n', '[{\'in\': \'R 1\\n\', \'out\': \'19\\n\'}, {\'in\': \'g 3\\n\', \'out\': \'-4\\n\'}, {\'in\': \'p 2\\n\', \'out\': \'-14\\n\'}]', 1, 0, 0, '输入数据包括一个字母x和一个整数y，数据之间有一个空格。\n', '在单独的一行中给出f(x)+y的值。\n', 1, 13, 'ymc', 3, 'R 1\n', '1');
INSERT INTO `problem` VALUES (216, '鸡兔同笼\n', '<p>一个笼子里面关了鸡和兔子(鸡有 2 只脚,兔子有 4 只脚,没有例外)。已经知道了笼子里面脚的总数 a,问笼子里面至少有多少只动物,至多有多少只动物</p>', '[{\'in\': \'32700\\n\', \'out\': \'8175 16350\\n\'}, {\'in\': \'30\\n\', \'out\': \'8 15\\n\'}, {\'in\': \'3\\n\', \'out\': \'0 0\\n\'}]', 1, 0, 0, '<p>输入只有一组测试数据，每组测试数据占 1 行,包括一个正整数 a (a &lt; 32768)。</p>', '<p>输出是两个正整数,第一个是最少的动物数,第二个是最多的动物数,两个正整数用空格分开。如果没有满足要求的情况出现,则输出 2 个 0。<strong>注意，2个0之间也有空格。</strong></p>', 1, 13, 'ymc', 3, '20\r\n\r\n', '5');
INSERT INTO `problem` VALUES (217, '打印水仙花数', '打印所有的“水仙花数”，所谓“水仙花数”是指一个3位数，其各位数字的立方和等于该数本身，例如，153是水仙花数，因为153＝1×1×1＋5×5×5＋3×3×3。', '[{\'in\': \'\', \'out\': \'153\\n370\\n371\\n407\\n\'}]', 1, 0, 0, '无输入。', '输出所有水仙花数，每行输出一个水仙花数。', 1, 13, 'ymc', 1, '', '输');
INSERT INTO `problem` VALUES (218, '求公式的值(I)\n', '<p>给定一个正整数n，求一下公式的值 1+1/2+1/3+1/4+...+1/n。</p>', '[{\'in\': \'5\\n\', \'out\': \'2.283\\n\'}, {\'in\': \'10\\n\', \'out\': \'2.929\\n\'}]', 1, 0, 0, '<p>输入只有一个正整数n。</p>', '<p>在单独的一行中输出公式的值，结果保留3位小数。</p>', 1, 13, 'ymc', 2, '5\r\n\r\n', '2');
INSERT INTO `problem` VALUES (219, '温度转换\n', '已知道华氏温度与摄氏温度转换公式C=(5/9)(F-32)，其中C为摄氏温度，F为华氏温度。请写一个程序给出华氏温度为0，20，40，...,300时对应的摄氏温度：\r\n0    -17\r\n20    -6\r\n40    4\r\n60    15\r\n80    26\r\n100    37\r\n120    48\r\n140    60\r\n160    71\r\n180    82\r\n200    93\r\n220    104\r\n240    115\r\n260    126\r\n280    137\r\n300    148\r\n\n', '[{\'in\': \'\', \'out\': \'0    -17\\n20    -6\\n40    4\\n60    15\\n80    26\\n100    37\\n120    48\\n140    60\\n160    71\\n180    82\\n200    93\\n220    104\\n240    115\\n260    126\\n280    137\\n300    148\\n\'}]', 1, 0, 0, '无输入\n', '总共16行，每行两个整数，第一个整数是华氏温度，第二个整数是与之对应的摄氏温度。两个整数之间用4个空格隔开，第二个整数后面没有空格。\n', 1, 13, 'ymc', 1, '\n', '0');
INSERT INTO `problem` VALUES (220, '求12以内n的阶乘 \n', '<p>给定一个非负整数n(n&lt;=12)，求n的阶乘。</p>\n', '[{\'in\': \'3\\n\', \'out\': \'6\\n\'}, {\'in\': \'5\\n\', \'out\': \'120\\n\'}, {\'in\': \'6\\n\', \'out\': \'720\\n\'}, {\'in\': \'12\\n\', \'out\': \'479001600\\n\'}]', 1, 0, 0, '<p>只有一行输入，整数n（n&lt;=12）。</p>\n', '<p>在单独的一行中输出数值n!。</p>\n', 1, 13, 'ymc', 4, '3\r\n\n', '6');
INSERT INTO `problem` VALUES (221, '\n自由落体\r\n\n', '\n一个球从高为x的空中落下，每次落地后反跳回原高度的一半再落下。求它在第n次落地时总共经过的距离。\r\n\n', '[{\'in\': \'100 10\\n\', \'out\': \'299.609375\\n\'}, {\'in\': \'1000 13\\n\', \'out\': \'2999.511719\\n\'}, {\'in\': \'1024 15\\n\', \'out\': \'3071.875000\\n\'}]', 1, 0, 0, '\n测试数据只有一行，该行由两个数组成。第一个数是实数，表示球初始的高度，第二个是正整数n。\r\n\n', '\n在单独的一行中输出球第n次落地是经过的总距离，结果保留6位小数。\r\n\n', 1, 13, 'ymc', 3, '\n100 10\r\n\n', '\n');
INSERT INTO `problem` VALUES (222, '多个数的平均值\n', '确定用户输入的m个数的平均值。\n', '[{\'in\': \'4\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'4.00\\n-5.00\\n5.50\\n9.30\\n\'}]', 1, 0, 0, '先给出数据的组数T，对于每组数据，输入有两行，第一行是用户要输入的数的个数m，第二行是m个用空格隔开的int类型整数。\n', '每组输入数据输出只有一行，为用户输入的m个数的平均数，用double类型表示，保留两位小数。\n', 1, 13, 'ymc', 1, '2 \n5\n2 3 7 5 3\n2 \n-1 -9\n\n', '4');
INSERT INTO `problem` VALUES (223, '顺序输出整数的各位数字(循环)\n\n', '<p>输入n个正整数，按顺序输出各位数。</p>', '[{\'in\': \'5\\n1256\\n0\\n1545\\n123\\n123456789\\n\', \'out\': \'1 2 5 6 \\n0 \\n1 5 4 5 \\n1 2 3 \\n1 2 3 4 5 6 7 8 9 \\n\'}]', 1, 0, 0, '<p>第一行为正整数的个数n. 以下为n个正整数。</p>', '<p>对于每个整数，在单独的一行中输出每个整数的分解，每个数字后有一空格。</p>', 1, 13, 'ymc', 1, '3\r\n1256\r\n0\r\n1545\r\n\r\n\r\n', '1');
INSERT INTO `problem` VALUES (224, 'Fibonacci数列\n', '1202年，意大利数学家Fibonacci出版了他的「算盘全书」。他在书中提出了一个关于兔子繁殖的问题：\r\n如果一对兔子每月能生一对小兔（一雄一雌），而每对小兔在他出生后的第三個月裡，又能开始生一对小兔，假定在不发生死亡的情況下，由一对出生的小兔开始始，50個月后会有多少对兔子？ \r\n我们可以总结出fibonacci数列的定义如下:\r\n\r\nf(0) = 0\r\nf(1) = 1\r\nf(n) = f(n-1) + f(n-2)\r\n\r\n写一个程序输出f(n)的值（0≤n≤46)\n', '[{\'in\': \'3\\n4\\n5\\n-1\\n\', \'out\': \'2\\n3\\n5\\n\'}, {\'in\': \'46\\n45\\n44\\n30\\n-1\\n\\n\', \'out\': \'1836311903\\n1134903170\\n701408733\\n832040\\n\'}]', 1, 0, 0, '有多组测试数据，每组测试数据为单独一行，这一行中只有一个整数n(0≤n≤46)，如果输入是-1，表示输入结束。-1不用处理。\n', '对每组测试数据，在单独的一行中输出f(n)。\n', 1, 13, 'ymc', 2, '3\r\n4\r\n5\r\n-1\r\n\n', '2');
INSERT INTO `problem` VALUES (225, '设计菱形\n', '编写一个程序，打印一个菱形（如样例输出所示）。\n', '[{\'in\': \'9\\n\', \'out\': \'----*----\\n---***---\\n--*****--\\n-*******-\\n*********\\n-*******-\\n--*****--\\n---***---\\n----*----\\n\'}, {\'in\': \'3\\n\', \'out\': \'-*-\\n***\\n-*-\\n\'}]', 1, 0, 0, '输入只有一个1~19范围内的奇数n。\n', '打印一个菱形，菱形行数为n。\n', 1, 13, 'ymc', 2, '9\r\n\n', '-');
INSERT INTO `problem` VALUES (226, '加密', '<p>给定一行由文本，把这行文本加密后输出。 这里的加密算法非常简单：小写字母a,b,c,...,z转化为1,2,3,...,26后输出。大写字母A,B,C,...,Z转化为27,28,29,...,52后输出，其它所有的字符保持不变。</p>', '[{\'in\': \'4\\nHello,\\nWelcome to c!\\nThis is only a text case,\\nAnd Only A test,Please Take Easy!^_^...\\n\', \'out\': \'345121215,\\n49512315135 2015 3!\\n468919 919 15141225 1 2052420 31195,\\n27144 41141225 27 2051920,421251195 461115 3111925!^_^...\\n\'}]', 1, 0, 0, '<p>输入有若干行，第一行是一个正整数n，表示有n行文本要加密，接下来总共n行文本。</p>', '<p>把输入的文本加密后输出。</p>', 1, 13, 'ymc', 1, '2\r\nHello,\r\nWelcome to c!', '3');
INSERT INTO `problem` VALUES (227, '水仙花数', '<p>春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的： &ldquo;水仙花数&rdquo;是指一个三位数，它的各位数字的立方和等于其本身，比如：153=1^3+5^3+3^3。 现在要求输出所有在m和n范围内的水仙花数。</p>', '[{\'in\': \'2\\n100 120\\n300 380\\n\', \'out\': \'no\\n370 371\\n\'}, {\'in\': \'1\\n100 999\\n\', \'out\': \'153 370 371 407\\n\'}]', 1, 0, 0, '<p>输入数据有多组，第一行是一个正整数t，表示有t组测试数据，每组测试数据输入占一行，包括两个整数m和n（100&lt;=m&lt;=n&lt;=999）。</p>', '<p>对于每组测试数据，要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于m,并且小于等于n，如果有多个，则要求从小到大排列在一行内输出，之间用一个空格隔开; 如果给定的范围内不存在水仙花数，则输出no;每组测试数据的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n100 120\r\n300 380\r\n\r\n\r\n', 'n');
INSERT INTO `problem` VALUES (228, '素数\n', '素数是只能被1和自己整除的整数。例如2，3，5和7是素数，4，6，8，9不是素数。给定一个正整数，判定该整数是否为素数。\r\n\r\n', '[{\'in\': \'5\\n2\\n7\\n9\\n19\\n29\\n\', \'out\': \'yes\\nyes\\nno\\nyes\\nyes\\n\'}, {\'in\': \'5\\n1111\\n1234\\n9999\\n13\\n17\\n\', \'out\': \'no\\nno\\nno\\nyes\\nyes\\n\'}, {\'in\': \'3\\n2\\n7\\n9\\n\', \'out\': \'yes\\nyes\\nno\\n\'}]', 1, 0, 0, '第一行一个正整数T，表示有T组测试数据。以下有T行，每行有一个正整数a(a<10000)。\r\n\r\n', '每组测试数据输出一行，如果输入的正整数是素数，输出yes，否则输出no。\r\n\r\n', 1, 13, 'ymc', 3, '3\r\n2\r\n7\r\n9\r\n\r\n\r\n', 'y');
INSERT INTO `problem` VALUES (229, '不要62', '<p>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。 杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。 不吉利的数字为所有含有4或62的号码。例如： 62315 73418 88914 都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。 你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。</p>', '[{\'in\': \'1 100\\n0 0\\n\', \'out\': \'80\\n\'}, {\'in\': \'103 1000\\n0 0\\n\', \'out\': \'629\\n\'}]', 1, 0, 0, '<p>输入的都是整数对n、m<strong>（0&lt;n&le;m&le;1000）</strong>，如果遇到都是0的整数对，则输入结束。</p>', '<p>对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。</p>', 1, 13, 'ymc', 2, '1 100\r\n0 0\r\n', '8');
INSERT INTO `problem` VALUES (230, '同构数', '找出1至99之间的全部同构数。注：正整数n若是它平方数的尾部，则称n为同构数。例如，6是其平方数36的尾部，25是其平方数625的尾部，6与25都是同构数。', '[{\'in\': \'\', \'out\': \'1 5 6 25 76 \\n\'}]', 1, 0, 0, '无', '输出全部同构数 每个数后面输出一个空格。', 1, 13, 'ymc', 1, '', '1');
INSERT INTO `problem` VALUES (231, '直角三角形', '三条边的边长均为整数的直角三角形称为整数直角三角形。\r\n给定一个整数n，求斜边的边长不超过n的所有整数直角三角形的个数。\r\n要求：\r\n1、编写判断能否成三角形的函数。', '[{\'in\': \'10\\n5\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n\', \'out\': \'case#1\\n1\\ncase#2\\n2\\ncase#3\\n6\\ncase#4\\n11\\ncase#5\\n16\\ncase#6\\n20\\ncase#7\\n26\\ncase#8\\n33\\ncase#9\\n39\\ncase#10\\n47\\n\'}]', 1, 0, 0, '输入有多行。\r\n第一行是一个整数T，表示有T个测试数据。\r\n接下来的T行，每行有一个正整数n。\r\n\r\n', '每个测试数据的输出有两行，第一行先输出测试数据的编号，格式如case#i,其中i为测试数据编号。\r\n第二行是一个整数，表示对应的整数直角三角形的个数。\r\n\r\n', 1, 13, 'ymc', 1, '4\r\n5\r\n10\r\n20\r\n30\r\n\r\n', 'c');
INSERT INTO `problem` VALUES (232, 'n次方', '<pre><span style=\"white-space: normal;\">给定一个整数x和整数n，求x的n次方的值。</span></pre>\r\n<pre><span style=\"white-space: normal;\">要求，自己写一个函数计算次方。</span></pre>', '[{\'in\': \'3 5\\n\', \'out\': \'243\\n\'}]', 1, 0, 0, '<p>输入只有两个整数x和n。</p>', '<p>在单独的一行中输出x<sup>n</sup>的值。</p>', 1, 13, 'ymc', 1, '2 3\r\n\r\n', '8');
INSERT INTO `problem` VALUES (233, '各位数字之和', '<pre><span style=\"white-space: normal;\">给定一个整数n，求n的各位数字之和，比如123，其各位数字之和为1+2+3=6，结果为6.</span></pre>\r\n<pre><span style=\"white-space: normal;\">要求：编写一个函数计算一个整数的各位数字之和。</span></pre>', '[{\'in\': \'123457\', \'out\': \'22\\n\'}]', 1, 0, 0, '<p>输入只有一个正整数。</p>', '<p>在单独的一行中输出该整数的各位数字之和。</p>', 1, 13, 'ymc', 1, '123\r\n', '6');
INSERT INTO `problem` VALUES (234, '分拆素数和', '把一个偶数拆成两个不同素数的和，有几种拆法呢？', '[{\'in\': \'30\\n26\\n0\\n\', \'out\': \'3\\n2\\n\'}, {\'in\': \'546\\n1456\\n788\\n444\\n122\\n2\\n46\\n1234\\n0\\n\', \'out\': \'30\\n34\\n15\\n21\\n3\\n0\\n3\\n24\\n\'}]', 1, 0, 0, '输入包含一些正的偶数，其值不会超过2000，个数不会超过50，若遇0，则结束。', '对应每个偶数，输出其拆成不同素数的个数，每个结果占一行。', 1, 13, 'ymc', 2, '30\n26\n0\n', '3');
INSERT INTO `problem` VALUES (235, '亲和数', '古希腊数学家毕达哥拉斯在自然数研究中发现，220的所有真约数(即不是自身的约数)之和为：\r\n\r\n1+2+4+5+10+11+20+22+44+55+110＝284。\r\n\r\n而284的所有真约数为1、2、4、71、 142，加起来恰好为220。人们对这样的数感到很惊奇，并称之为亲和数。一般地讲，如果两个数中任何一个数都是另一个数的真约数之和，则这两个数就是亲和数。\r\n\r\n要求：\r\n1、编写一个数的所有因子和的函数。\r\n\r\n', '[{\'in\': \'2\\n220 284\\n100 200\\n\', \'out\': \'YES\\nNO\\n\'}, {\'in\': \'4\\n26 53\\n157 69\\n15 48\\n36 59\\n\', \'out\': \'NO\\nNO\\nNO\\nNO\\n\'}]', 1, 0, 0, '输入数据第一行包含一个数M，接下有M行，每行一个实例,包含两个整数A,B； 其中 0 <= A,B <= 600000 ;\r\n', '对于每个测试实例，如果A和B是亲和数的话输出YES，否则输出NO。\r\n', 1, 13, 'ymc', 2, '2\r\n220 284\r\n100 200\r\n\r\n', 'Y');
INSERT INTO `problem` VALUES (236, '打印完数 ', '一个数如果恰好等于它的因子之和，这个数就成为“完数”。例如，6的因子为1、2、3，而6＝1＋2＋3，因此6是“完数”。编程序打印出1000之内（包括1000）所有的完数，并按如下格式输出其所有因子：\r\n\r\n6 its factors are 1 2 3 \r\n要求：\r\n1、编写判断一个数是否为完数的函数。\r\n', '[{\'in\': \'\', \'out\': \'6 its factors are 1 2 3 \\n28 its factors are 1 2 4 7 14 \\n496 its factors are 1 2 4 8 16 31 62 124 248 \\n\'}]', 1, 0, 0, '无输入\r\n', '输出1000以内所有的完数及其因子，每行一个完数，每个因子后面有一个空格。\r\n', 1, 13, 'ymc', 1, '无输入\r\n', '按');
INSERT INTO `problem` VALUES (237, '自整除数 ', '<p>对一个整数n，如果其各个位数的数字相加得到的数m能整除n，则称n为自整除数。 如21，21%(2+1)==0，所以21是自整除数。 现求出从10到n(n&lt;100)之间的所有自整除数。</p>\r\n<p>要求： 编写一个求各位数的和的函数。</p>', '[{\'in\': \'47\\n\', \'out\': \'10\\n12\\n18\\n20\\n21\\n24\\n27\\n30\\n36\\n40\\n42\\n45\\n\'}, {\'in\': \'30\\n\', \'out\': \'10\\n12\\n18\\n20\\n21\\n24\\n27\\n30\\n\'}, {\'in\': \'70\\n\', \'out\': \'10\\n12\\n18\\n20\\n21\\n24\\n27\\n30\\n36\\n40\\n42\\n45\\n48\\n50\\n54\\n60\\n63\\n70\\n\'}]', 1, 0, 0, '<p>输入只有单独一行的一个整数n(<strong>10&lt;=n&lt;100</strong>)。</p>', '<p>输出有多行。 按从小到大的顺序输出所有大于等于10，小于等于n的自整除数，每行一个自整除数。</p>', 1, 13, 'ymc', 3, '47\r\n\r\n', '1');
INSERT INTO `problem` VALUES (238, '第几天？', '<p>给定一个日期，输出这个日期是该年的第几天。 要求： 1、编写计算第几天的函数。</p>', '[{\'in\': \'2\\n1985/1/20\\n2006/3/12\\n\', \'out\': \'20\\n71\\n\'}, {\'in\': \'8\\n2008/2/28\\n2008/1/1\\n2080/2/29\\n1980/2/29\\n1999/2/28\\n2000/3/1\\n2004/3/1\\n1000/3/1\\n\', \'out\': \'59\\n1\\n60\\n60\\n59\\n61\\n61\\n60\\n\'}]', 1, 0, 0, '<p>输入数据有多组，输入第一行是一个正整数n，表示有n组测试数据。每组测试数据输入占一行，数据格式为YYYY/MM/DD组成，YYYY是4位的年份，MM是2位或者1位的月份，DD是2位或者1位的日期 。可以向你确保所有的输入数据是合法的。</p>', '<p>对于每组输入数据，输出一行，表示该日期是该年的第几天。</p>', 1, 13, 'ymc', 2, '2\r\n1985/1/20\r\n2006/3/12\r\n\r\n\r\n', '2');
INSERT INTO `problem` VALUES (239, '计算函数的值', '<p>编写一个递归函数（或非递归函数），计算如下定义的函数f： （1）当x为负数时，f(x, y) = x + y； （2）当x为非负数时，f(x, y) = f(x-1, x+y) + x/y 。 其中，x（x不大于1000），y都是实数，f的值也是实数。 要求： 1、编写一个递归函数。</p>', '[{\'in\': \'3\\n0 3.14\\n1 1\\n-1 5.7857\', \'out\': \'2.14\\n2.00\\n4.79\\n\'}, {\'in\': \'3\\n100.56 3.14\\n-100.56 3.14\\n1000 998\\n\', \'out\': \'5145.71\\n-97.42\\n501503.79\\n\'}]', 1, 0, 0, '<p>输入数据有多组，输入第一行是一个正整数n，表示有n组测试数据，每组测试数据输入占一行，由两个实数（即x，y）组成。</p>', '<p>对于每组输入数据，输出一行，结果保留两位小数。</p>', 1, 13, 'ymc', 2, '3\r\n0 3.14\r\n1 1\r\n-1 5.7857', '2');
INSERT INTO `problem` VALUES (240, '约瑟夫问题', '约瑟夫问题:有n只猴子,按顺时针方向围成一圈选大王(编号从1到n)  ,从第1号开始报数, 一直数到m,数到m的猴子退出圈外, 剩下的猴子再接着从 1 开始报数。就这样,直到圈内只剩下一只猴子时,这个猴子就是猴王,编程求输入n,m后,输出最后猴王的编号。\r\n', '[{\'in\': \'6 2\\n12 4\\n8 3\\n0 0\\n\', \'out\': \'5\\n1\\n7\\n\'}, {\'in\': \'12 200\\n299 299\\n234 1\\n124 234\\n145 43\\n19 113\\n0 0\\n\', \'out\': \'2\\n146\\n234\\n50\\n126\\n2\\n\'}]', 1, 0, 0, '每行是用空格分开的两个整数,第一个是 n, 第二个是 m ( 0 < m, n < 300)。最后一行是:\r\n   0 0\r\n', '对于每行输入数据(最后一行除外),输出数据也是一行,即最后猴王的编号', 1, 13, 'ymc', 2, '6 2\r\n12 4\r\n8 3\r\n0 0\r\n', '5');
INSERT INTO `problem` VALUES (241, '谁是最大数\n', '确定用户输入的m个整数中的最大的数。\n', '[{\'in\': \'4\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'7\\n-1\\n10\\n32\\n\'}]', 1, 0, 0, '先给出数据的组数T，对于每组数据，输入有两行，第一行是用户要输入的整数个数m， 第二行为m个用空格隔开的整数。\n', '每组数据输出只有一行，为用户输入的m个数中最大的数。\n', 1, 13, 'ymc', 1, '2\n5\n2 3 7 5 3\n2\n-1 -9\n', '7');
INSERT INTO `problem` VALUES (242, '平均数和标准差', '<p>求n个数的平均数和标准差。给定n个数X1 ,X2 ,X3 ......Xn ,数据的平均数为x，标准差定义如下：</p>', '[{\'in\': \'2\\n8 1 2 3 4 5 10 11 12\\n4 10 20 30 25\\n\', \'out\': \'6.000 4.062\\n21.250 7.395\\n\'}]', 1, 0, 0, '<p>第一行一个正整数T，表示有T组测试数据。以下每行是一组数，第一个数为数据个数m(m&lt;200)，然后是m个正整数构成，</p>', '<p>对于每组数据输出一行，即平均数和标准差，两个数据均保留3位小数，并且以一个空格隔开。</p>', 1, 13, 'ymc', 1, '2\r\n5 1 1 1 1 1\r\n6 1 2 3 4 6 5\r\n\r\n', '1');
INSERT INTO `problem` VALUES (243, '二进制\n', '给定一个十进制的正整数n(0 < n < 1000)，把这个十进制数转化为二进制数。\r\n\n', '[{\'in\': \'1\\n2\\n3\\n\', \'out\': \'1\\n10\\n11\\n\'}, {\'in\': \'12\\n345\\n75\\n68\\n96\\n222\\n\', \'out\': \'1100\\n101011001\\n1001011\\n1000100\\n1100000\\n11011110\\n\'}]', 1, 0, 0, '有多组测试数据，每组测试数据输入只有一个正整数n。处理到文件结束（EOF）。\r\n\n', '对每组测试数，在单独的一行中输出对应的二进制数。\r\n\n', 1, 13, 'ymc', 2, '1\r\n2\r\n3\r\n\n', '1');
INSERT INTO `problem` VALUES (244, '数列有序!\n', '有n(n<=100)个整数，已经按照从小到大顺序排列好了，现在另外给一个整数x，请将该数插入到序列中，并使新的序列仍然有序。\n', '[{\'in\': \'3 3\\n1 2 4\\n0 0\\n\', \'out\': \'1 2 3 4\\n\'}, {\'in\': \'4 6\\n1 3 9 10\\n4 2\\n3 5 7 9\\n6 3\\n1 2 3 4 5 6\\n0 0\\n\', \'out\': \'1 3 6 9 10\\n2 3 5 7 9\\n1 2 3 3 4 5 6\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每组数据由两行组成，第一行是n和m，第二行是已经有序的n个数的数列。n和m同时为0表示输入数据结束，本行不做处理。\n', '对于每个测试实例，输出插入新的元素后的数列，每个元素之间有一个空格。\n', 1, 13, 'ymc', 2, '3 3\r\n1 2 4\r\n0 0\r\n\n', '1');
INSERT INTO `problem` VALUES (245, '行列互换\n', '将一个整数矩阵的行和列互换。\n', '[{\'in\': \'2\\n5 6\\n43 643 1 65 3 5\\n-43 4 -4 0 53 423 \\n5 64 2 -99 44 40\\n4 -32 43 542 5 4\\n42 4 2 -9 43 87\\n1 1\\n2\\n\', \'out\': \'43 -43 5 4 42 \\n643 4 64 -32 4 \\n1 -4 2 43 2 \\n65 0 -99 542 -9 \\n3 53 44 5 43 \\n5 423 40 4 87 \\n\\n2 \\n\\n\'}, {\'in\': \'1\\n2 3\\n3 3 9\\n4 5 4\\n\', \'out\': \'3 4 \\n3 5 \\n9 4 \\n\\n\'}]', 1, 0, 0, '第一行是测试数据的组数。以下每组数据的首行是矩阵的行数和列数（行和列的数目均不大于100），之后为矩阵。\n', '对输入的每组测试数据，将矩阵行列互换输出，每组后面有一个空行。矩阵中的每个数据之后有一个空格。\n', 1, 13, 'ymc', 2, '2\n3 2\n11 22\n33 44\n55 66\n3 3\n11 12 13\n21 22 23\n31 32 33\n\n', '1');
INSERT INTO `problem` VALUES (246, '作业七 循环移动', '<p>给定一组整数，要求利用数组把这组数保存起来，再利用指针实现对数组中的数循环移动。假定共有n个整数，则要使前面各数顺序向后移m个位置，并使最后m各数变为最前面的m各数。</p>', '[{\'in\': \'11 4\\n15 3 76 67 84 87 13 67 45 34 45\\n\', \'out\': \'67 45 34 45 15 3 76 67 84 87 13\\n\'}, {\'in\': \'20 8\\n20 30 40 50 60 1 2 3 4 5 100 110 120 1000 1500 1600 10000 12345 7 8\\n\', \'out\': \'120 1000 1500 1600 10000 12345 7 8 20 30 40 50 60 1 2 3 4 5 100 110\\n\'}]', 1, 0, 0, '<p>输入有两行：第一行包含一个正整数n和一个正整数m，第二行包含n个正整数。每两个正整数中间用一个空格分开。</p>', '<p>输出有一行：经过循环移动后数组中整数的顺序依次输出，每两个整数之间用空格分隔。</p>', 1, 13, 'ymc', 2, '11 4\r\n15 3 76 67 84 87 13 67 45 34 45\r\n\r\n', '6');
INSERT INTO `problem` VALUES (247, '字符串比较\n', '<p>编一程序，将两个字符串s1和s2比较，若s1&gt;s2，输出一个正数；若s1=s2，输出0；若<strong>s1&lt;s2</strong>，输出一个负数。 两个字符串用gets函数读入。两个字符串的长度不超过1000。 输出的正数或负数应是相比较的两个字符串相应字符的ASCII码的差值。如果两个字符串中有多个相应的字符不等，则取第一次相应不等的字符串的差值。 例如，&ldquo;A&rdquo;与&ldquo;C&rdquo;相比，由于&ldquo;A&rdquo;&lt;&ldquo;C&rdquo;，应输出负数，同时由于&lsquo;A&rsquo;与&lsquo;C&rsquo;的ASCII码差值为2，因此应输出&ldquo;-2&rdquo;。 同理：&ldquo;And&rdquo;和&ldquo;Aid&rdquo;比较，根据第2个字符比较结果，&ldquo;n&rdquo;比&ldquo;i&rdquo;大5，因此应输出&ldquo;5&rdquo;。</p>\n', '[{\'in\': \'3\\nA\\nC\\nAnd\\nAid\\nThe Internet developers wanted to make a networking protocol that had serious longevity\\nThe Internet developers So they had to define a large enough IP address space to last well\\n\', \'out\': \'-2\\n5\\n36\\n\'}]', 1, 0, 0, '<p>输入数据第一行包含一个数n，表示有n组测试数据。 其中每组数据包括两行： 第一行是字符串s1，第二行是字符串s2。</p>\n', '<p>对于每组测试数据，输出s1与s2比较的结果。</p>\n', 1, 13, 'ymc', 1, '2\r\nA\r\nC\r\nAnd\r\nAid\n', '-');
INSERT INTO `problem` VALUES (248, '进制转换\n', '<p>输入一个十进制数N，将它转换成R进制数输出。</p>', '[{\'in\': \'7 2\\n23 12\\n-4 3\\n1000 24\\n10000 30\\n0 12\\n\', \'out\': \'111\\n1B\\n-11\\n1HG\\nB3A\\n0\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例，每个测试实例包含两个整数N和R（2&lt;=R&lt;=36).</p>', '<p>为每个测试实例输出转换后的数，每个输出占一行。如果R大于10，则对应的数字规则参考16进制（比如，10用A表示,16用G表示等等）。</p>', 1, 13, 'ymc', 1, '7 2\r\n23 12\r\n-4 3\r\n\r\n', '1');
INSERT INTO `problem` VALUES (249, '距离', '<p>给定平面上两个点的坐标，求这两个点之间的距离。前两个数是第一个点的坐标，后两个数是第二个点的坐标。</p>', '[{\'in\': \'0 0 8 6\\n\', \'out\': \'10.00\\n\'}]', 1, 0, 0, '<p>输入为4个实数，分别表示第一个点的坐标，第二个点的坐标。</p>', '<p>输出两个点的距离，结果保留2位小数。</p>', 1, 13, 'ymc', 1, '0 0 3 4\r\n', '5');
INSERT INTO `problem` VALUES (250, '文件合并', '<p>有两个磁盘文件&ldquo;in1.txt&rdquo;和&ldquo;in2.txt&rdquo;，各存放一行字母（有大写字母  也有  小写字母），今要求把这两个文件中的信息合并（按ASCII顺序码排列），输出到一个新文件&ldquo;out.txt&rdquo;中去。</p>', '[{\'in\': \'I LOVE CHINA\\nI LOVE BEIJING\\n\', \'out\': \'    ABCEEEGHIIIIIJLLNNOOVV\\n\'}, {\'in\': \'I LOVE CHINA and this is a test\\nI LOVE BEIJING and only Test\\n\', \'out\': \'            ABCEEEGHIIIIIJLLNNOOTVVaaaddeehiilnnnosssstttty\\n\'}]', 1, 0, 0, '<p>在程序所在目录下有两个文件in1.txt和in2.txt(如果没有请自己创建)，in1.txt中有一行文本，in2.txt中也有一行文本。</p>', '<p>合并in1.txt和in2.txt中的文本（按ASCII码顺序排列）保存到out.txt中。</p>', 1, 13, 'ymc', 2, 'I LOVE CHINA\r\nI LOVE BEIJING\r\n', ' ');
INSERT INTO `problem` VALUES (251, '小写转大写', '从键盘输入一个字符串，将其中的小写字母全部转换成大写字母，然后输出到一个磁盘文件“out.txt”中保存。输入的字符串以“！”结束。', '[{\'in\': \'hello world!\\n\', \'out\': \'HELLO WORLD!\\n\'}, {\'in\': \'this is test and only a tets,HAHA,!\\n\', \'out\': \'THIS IS TEST AND ONLY A TETS,HAHA,!\\n\'}]', 1, 0, 0, '输入只有一行，该行的字符数目不超过100。', '把小写字母转换为大写后输出到文件“out.txt”。', 1, 13, 'ymc', 2, 'hello world!\r\n', 'H');
INSERT INTO `problem` VALUES (252, '位操作(Ⅲ)', '<p>给定一个整数x，可以得到x的二进制表示，在x的二进制表示中，最右边的位记为第0位，然后往左依次是第1位，第2位，....。</p>\r\n<p>请设计一个函数getbits(x, p, n)，它返回整数x的二进制表示中从右边数第p位开始再向右数n位的字段。n与p都是合理的正值。</p>\r\n<p>例如，getbits(114, 5, 2)返回1。</p>\r\n<p>因为18的二进制表示如下</p>\r\n<p>二进制：0 1 1 1 0 0 1 0</p>\r\n<p>位编号：7 6 5 4 3 2 1 0</p>\r\n<p>则右边起第5位开始往右2位分别为第5位和第4位，对应的二进制为11（对应十进制是3）。</p>', '[{\'in\': \'18\\n5 2\\n24\\n4 3\\n1000\\n10 5\\n2000\\n20 10\\n65535\\n10 5\\n\', \'out\': \'1\\n6\\n15\\n0\\n31\\n\'}]', 1, 0, 0, '<p>输入数据有多组。</p>\r\n<p>每组第一行，是一个整数x（0&lt;=x&lt;=65535）；</p>\r\n<p>第二行是两个整数p,n，它们以空格隔开，表示从右边数第p位开始向右数n位。</p>', '<p>对于每组输入数据，输出一行。</p>', 1, 13, 'ymc', 1, '114\r\n5 2\r\n18\r\n5 2\r\n24\r\n4 3\r\n', '3');
INSERT INTO `problem` VALUES (253, '位操作(Ⅱ)', '<p>给出两个不大于65535的非负整数，判断其中一个的16位二进制表示形式，是否能由另一个的16位二进制表示形式经过循环左移若干位而得到。 循环左移和普通左移的区别在于：最左边的那一位经过循环左移一位后就会被移到最右边去。比如： 1011 0000 0000 0001 经过循环左移一位后，变成 0110 0000 0000 0011, 若是循环左移2位，则变成 1100 0000 0000 0110</p>', '[{\'in\': \'7\\n2 4\\n9 18\\n45057 49158\\n7 12\\n4000 4500\\n1024 1\\n2048 2\\n\', \'out\': \'YES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\n\'}]', 1, 0, 0, '<p>第一行是个整数n（0 &lt; n &lt; 300000），表示后面还有n行数据。后面是n行，每行有两个不大于65535的非负整数。</p>', '<p>对于每一行的两个整数，输出一行，内容为YES或NO。</p>', 1, 13, 'ymc', 1, '4\r\n2 4\r\n9 18\r\n45057 49158\r\n7 12\r\n', 'Y');
INSERT INTO `problem` VALUES (254, '输出图形\n', '<p>让计算机显示如下图形</p>\r\n<pre>*\r\n**\r\n***\r\n****\r\n</pre>\r\n<p>注意，<span style=\"color: #ff0000;\">每一行的最后都有一个换行符</span>。&nbsp;</p>\n', '[{\'in\': \'\', \'out\': \'*\\n**\\n***\\n****\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>输出总共有4行，每行后面没有多余的空格，都有一个换行符。</p>\r\n<pre>*\r\n**\r\n***\r\n****\r\n</pre>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\n', '*');
INSERT INTO `problem` VALUES (255, '输出图形 III\n', '<p>让计算机显示如下图形</p>\r\n<pre>       *\r\n      *\r\n     *\r\n*   *\r\n * *\r\n  *\r\n</pre>\r\n<p><span style=\"color: #ff0000;\"><strong>注意每行的最后都有一个换行符。</strong></span></p>\r\n<p><span style=\"color: #000000;\"><strong>第4行先是1个*，接着三个空格，然后是一个*，最后一个换行符。</strong></span></p>\n', '[{\'in\': \'\', \'out\': \'       *\\n      *\\n     *\\n*   *\\n * *\\n  *\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>让计算机显示如下图形</p>\r\n<pre>       *\r\n      *\r\n     *\r\n*   *\r\n * *\r\n  *\r\n</pre>\r\n<p><span style=\"color: #ff0000;\"><strong>注意每行的最后都有一个换行符。</strong></span></p>\r\n<p><strong>第4行先是1个*，接着三个空格，然后是一个*，最后一个换行符。</strong></p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\r\n\n', ' ');
INSERT INTO `problem` VALUES (256, 'A+B\n', '<p>从键盘读入两个整数，计算这两个整数的和。<span style=\"color: #ff0000;\">在屏幕上输出计算公式。</span></p>\r\n<p><span style=\"color: #ff0000;\"><strong>在行末输出一个换行符。</strong></span></p>\n', '[{\'in\': \'9998 99991\', \'out\': \'9998+99991=109989\\n\'}]', 1, 0, 0, '<p>输入为两个整数。</p>\n', '<p><span>输出这两个数的和的计算公式。</span><strong>在行末输出一个换行符。</strong></p>\n', 1, 13, 'ymc', 1, '1 1\r\n\n', '1');
INSERT INTO `problem` VALUES (257, 'Hello,World II\n', '<p>让计算机<span style=\"color: #ff0000;\"><strong>在单独的一行中</strong></span>输出\"Hello,World.\"。请注意字母大小写和标点符号，输出不包括两边的引号。</p>\r\n<p><strong><span style=\"color: #ff0000;\">在单独的一行中输出输出\"Hello,World.\"即在输出\"Hello,World.\"之后再输出一个换行符。</span></strong></p>\n', '[{\'in\': \'\', \'out\': \'Hello,World.\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>在<span style=\"color: #ff0000;\"><strong>单独的一行中</strong></span>输出Hello,World.</p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\n', 'H');
INSERT INTO `problem` VALUES (258, '简单的四则运算\n', '<p>给定两个整数，输出这两个数的和、乘积、差和商。</p>', '[{\'in\': \'24 3\\n\', \'out\': \'27 72 21 8\\n\'}, {\'in\': \'1 1\\n\', \'out\': \'2 1 0 1\\n\'}]', 1, 0, 0, '<p>输入只有一行，该行包含两个用空格隔开的整数。</p>', '<p>输出为一行，这行有四个整数，分别为两个整数的和、乘积、差和商，数与数之间用一个空格隔开。</p>', 1, 13, 'ymc', 2, '24 3\r\n', '2');
INSERT INTO `problem` VALUES (259, '平均分\n', '已知学生的三门课成绩，求他三门课的平均分\n', '[{\'in\': \'60 65 70\\n\', \'out\': \'65.0\\n\'}, {\'in\': \'80 81 83\\n\', \'out\': \'81.3\\n\'}, {\'in\': \'90 91 76\\n\', \'out\': \'85.7\\n\'}]', 1, 0, 0, '输入只有一行，该行中有3个由空格分隔的整数，分别表示学生的三门课成绩。\n', '在单独的一行中输出该生的平均分，结果保留一位小数。\n', 1, 13, 'ymc', 3, '60 65 70\r\n\n', '6');
INSERT INTO `problem` VALUES (260, '圆的直径、周长和面积\n', '<p>要求读入一个圆的半径，并打印圆的直径、周长和面积。PI的取常量3.1415926。</p>', '[{\'in\': \'1\\n\', \'out\': \'2.00 6.28 3.14\\n\'}, {\'in\': \'5.4\\n\', \'out\': \'10.80 33.93 91.61\\n\'}, {\'in\': \'100.2\\n\', \'out\': \'200.40 629.58 31541.72\\n\'}]', 1, 0, 0, '<p>输入只有一行，一个double类型的数。</p>', '<p>输出只有一行，分别为圆的直径、周长和面积，分别用空格隔开，要求精确到小数点后两位。</p>', 1, 13, 'ymc', 3, '1.0\r\n\r\n', '2');
INSERT INTO `problem` VALUES (261, '温度转换\n', '<p>求华氏温度f对应的摄氏温度c，计算公式如下： c=5/9*(f-32)</p>\n', '[{\'in\': \'150\\n\', \'out\': \'65.6\\n\'}, {\'in\': \'148\\n\', \'out\': \'64.4\\n\'}, {\'in\': \'159\\n\', \'out\': \'70.6\\n\'}]', 1, 0, 0, '<p>输入只有一个表示华氏温度的整数f。</p>\n', '<p>在一行中输入对应的摄氏温度，结果保留一位小数。 注意输出用printf(\"%.1lf\\n\",..)的格式输出。</p>\n', 1, 13, 'ymc', 3, '150\r\n\n', '6');
INSERT INTO `problem` VALUES (262, '求梯形的面积\n', '<p>给定梯形的上底、下底和高，求梯形的面积。</p>', '[{\'in\': \'1 2 3\\n\', \'out\': \'4.50\\n\'}, {\'in\': \'2 4 8\\n\', \'out\': \'24.00\\n\'}, {\'in\': \'4 6 2\\n\', \'out\': \'10.00\\n\'}, {\'in\': \'3 4 5\\n\', \'out\': \'17.50\\n\'}]', 1, 0, 0, '<p>输入为一行，该行有三个整数，分别表示梯形的上底、下底和高，三个数据之间用空格隔开。</p>', '<p>在单独的一行中输出梯形的面积，结果保留2位小数。</p>', 1, 13, 'ymc', 4, '1 2 3\r\n\r\n', '4');
INSERT INTO `problem` VALUES (263, '字符交换\n', '<p>从键盘读入两个字符，交换这两个字符后输出。字符之间由一个空格分开，行末有一个换行符。</p>\n', '[{\'in\': \'z t\\n\', \'out\': \'t z\\n\'}]', 1, 0, 0, '<p>输入只有两个字符，由空格分开。</p>\n', '<p>交换输入字符后输出，字符之间有一个空格分开。行末有一个换行符。</p>\n', 1, 13, 'ymc', 1, 'a b\r\n\n', 'b');
INSERT INTO `problem` VALUES (264, 'A-B\n', '<p>给定两个浮点数，求两个浮点数的差。所有浮点数用double类型</p>\n', '[{\'in\': \'2.3 1.1\\n\', \'out\': \'1.20\\n\'}, {\'in\': \'100.99 99.09\\n\', \'out\': \'1.90\\n\'}]', 1, 0, 0, '<p>输入只有一行，只有两个浮点数a和b，中间有空格分开。</p>\n', '<p>在单独的一行中输出a-b,结果保留两位小数。</p>\n', 1, 13, 'ymc', 2, '2.3 1.1\r\n\r\n\n', '1');
INSERT INTO `problem` VALUES (265, '正方形\n', '给定一个字符，请输出一个由该字符构成的边长为4的正方形。\r\n\n', '[{\'in\': \'*\\n\', \'out\': \'****\\n*  *\\n*  *\\n****\\n\'}, {\'in\': \'$\\n\', \'out\': \'$$$$\\n$  $\\n$  $\\n$$$$\\n\'}]', 1, 0, 0, '输入只有一行，该行只有一个字符。\r\n\n', '输出一个边长为4的正方形，正方形的四条边均由输入的字符构成，正方形的内部由空格构成。\r\n\n', 1, 13, 'ymc', 2, '*\r\n\n', '*');
INSERT INTO `problem` VALUES (266, '判断闰年\n', '<p>判断某年是否是闰年。公历纪年法中，能被 4 整除不能被 100 整除，或者能被 400 整除的年份是闰年。如 1900 年是平年，2000 年是闰年。</p>', '[{\'in\': \'2000\\n\', \'out\': \'Y\\n\'}, {\'in\': \'1000\\n\', \'out\': \'N\\n\'}, {\'in\': \'2009\\n\', \'out\': \'N\\n\'}, {\'in\': \'400\\n\', \'out\': \'Y\\n\'}]', 1, 0, 0, '<p>一行,仅含一个整数 a(0 &lt; a &lt; 3000)。</p>', '<p>一行,如果公元 a 年是闰年输出 Y,否则输出 N。最后加一个换行符号。</p>', 1, 13, 'ymc', 4, '2006\r\n\r\n', 'N');
INSERT INTO `problem` VALUES (267, '一步一个脚印:正负数\n', '<p>对输入的一个整数n，如果n是正数，则输出1，如果n是0，则输出0，如果n是负数，则输出-1。</p>', '[{\'in\': \'5\\n\', \'out\': \'1\\n\'}, {\'in\': \'0\\n\', \'out\': \'0\\n\'}, {\'in\': \'-100\\n\', \'out\': \'-1\\n\'}]', 1, 0, 0, '<p>输入只有一个整数n，<strong>-1000&lt;n&lt;1000. </strong></p>', '<p>根据n的值在单独的一行输出0，1或者-1。</p>', 1, 13, 'ymc', 3, '-10\r\n\r\n', '-');
INSERT INTO `problem` VALUES (268, '分段函数', '<p>输入实数x，求下列分段函数f(x)的值</p>', '[{\'in\': \'-1.2\\n\', \'out\': \'6.452\\n\'}, {\'in\': \'3\\n\', \'out\': \'0.538\\n\'}, {\'in\': \'8.3\\n\', \'out\': \'0.123\\n\'}, {\'in\': \'11\\n\', \'out\': \'0.000\\n\'}]', 1, 0, 0, '<p>输入只有一个浮点数x。</p>', '<p>在单独一行中输出f(x)的值，<strong>结果保留3位小数.<span style=\"color: #ff0000;\">特别注意，输出0是同样要保留3位小数，即输出0.000</span></strong></p>', 1, 13, 'ymc', 4, '-1.2\r\n\r\n', '6');
INSERT INTO `problem` VALUES (269, '成绩转换\n', '<p>输入一个百分制的成绩t，将其转换成对应的等级，具体转换规则如下： 90~100为A; 80~89为B; 70~79为C; 60~69为D; 0~59为E;</p>\n', '[{\'in\': \'56\\n\', \'out\': \'E\\n\'}, {\'in\': \'100\\n\', \'out\': \'A\\n\'}, {\'in\': \'102\\n\', \'out\': \'Score is error!\\n\'}, {\'in\': \'-1\', \'out\': \'Score is error!\\n\'}]', 1, 0, 0, '<p>输入一个整数。</p>\n', '<p>如果输入数据不在0~100范围内，请输出一行：&ldquo;Score is error!&rdquo;。</p>\n', 1, 13, 'ymc', 4, '56\r\n\n', 'E');
INSERT INTO `problem` VALUES (270, '数的奇偶性\n', '输入一个整数。确定它是奇数还是偶数。\n', '[{\'in\': \'14\\n\', \'out\': \'0\\n\'}, {\'in\': \'3\\n\\n\', \'out\': \'1\\n\'}, {\'in\': \'2\\n\', \'out\': \'0\\n\'}]', 1, 0, 0, '输入为一行，该行包括一个int类型整数。\n', '如果输入是奇数，则输出 1，否则输出0。\n', 1, 13, 'ymc', 3, '14\n', '0');
INSERT INTO `problem` VALUES (271, '一步一个脚印:正负数\n\n', '<p>输入一个字符ch，如果ch是英文字符，则输出1，如果ch是数字字符，则输出0，否则输出-1。</p>', '[{\'in\': \'f\', \'out\': \'1\\n\'}, {\'in\': \'2\\n\', \'out\': \'0\\n\'}, {\'in\': \'%\', \'out\': \'-1\\n\'}]', 1, 0, 0, '<p>输入只有一个字符。</p>', '<p>根据输入字符的性质在单独的一行输出0，1或者-1。</p>', 1, 13, 'ymc', 3, 'F', '1');
INSERT INTO `problem` VALUES (272, '三个数的基本运算\n', '从键盘输入3个整数，并打印他们的和、平均值、乘积、最小值和最大值。\n', '[{\'in\': \'13 27 14\\n\', \'out\': \'54 18 4914 13 27\\n\'}, {\'in\': \'99 98 90\\n\', \'out\': \'287 95 873180 90 99\\n\'}]', 1, 0, 0, '输入只有一行，该行包含用空格隔开的3个整数。\n', '在单独的一行中分别输出这三个数的和、平均值（取其整数部分）、乘积、最小值和最大值，用空格隔开。\n', 1, 13, 'ymc', 2, '13 27 14\n', '5');
INSERT INTO `problem` VALUES (273, '寻找最小的数\n', '给定三个实数，输出三个数中最小的数。\n', '[{\'in\': \'3 1 2.0\', \'out\': \'1.00\\n\'}, {\'in\': \'3 5 4\\n\', \'out\': \'3.00\\n\'}, {\'in\': \'3 2 1.1\\n\', \'out\': \'1.10\\n\'}]', 1, 0, 0, '输入只有一行，该行有三个实数，数据之间由一个空格隔开。\n', '在单独的一行中输出三个数中最小的数，结果保留两位小数。\n', 1, 13, 'ymc', 3, '3 1 2.0\r\n\n', '1');
INSERT INTO `problem` VALUES (274, '数字回文\n', '\"回文\"是一种特殊的数或者文字短语。它们无论是顺读还是倒读，结果都一样。例如：12321，55555，45554。读入一个5位整数，判断它是否是回文数。\n', '[{\'in\': \'12321\\n\', \'out\': \'Yes.\\n\'}, {\'in\': \'19591\\n\', \'out\': \'Yes.\\n\'}, {\'in\': \'15541\\n\', \'out\': \'No.\\n\'}]', 1, 0, 0, '输入是一个五位整数。\n', '如果输入的数是回文数，输出\"Yes.\"，否则输出\"No.\"。\n', 1, 13, 'ymc', 3, '12321\n', 'Y');
INSERT INTO `problem` VALUES (275, 'A+B', '<p>给定一个两位整数的计算公式，请输出计算结果。运算符包括+ &nbsp;- &nbsp;* &nbsp;/</p>', '[{\'in\': \'12+23\', \'out\': \'35\\n\'}, {\'in\': \'13/4\', \'out\': \'3\\n\'}, {\'in\': \'5*7\', \'out\': \'35\\n\'}, {\'in\': \'12-3\', \'out\': \'9\\n\'}]', 1, 0, 0, '<p>输入只有一行，先是一个整数，然后是一个运算符，再是一个整数。</p>', '<p>在单独的一行中输出计算结果，结果是一个整数。</p>', 1, 13, 'ymc', 4, '1+2', '3');
INSERT INTO `problem` VALUES (276, '求PI的值\n', '利用 PI/2=(2/1) * (2/3) * (4/3) * (4/5) * (6/5) * (6/7) * ... 前200项之积，编程计算法PI的值。\n', '[{\'in\': \'\', \'out\': \'3.134\\n\'}]', 1, 0, 0, '本题没有输入。\n', '在单独的一行中输出PI的值，保留3位小数。\n', 1, 13, 'ymc', 1, '\n', '在');
INSERT INTO `problem` VALUES (277, '求幂\n', '输入任意实数x和正整数n，计算x的n次幂。\n', '[{\'in\': \'2 3\\n\', \'out\': \'8.000\\n\'}, {\'in\': \'3.4 8\\n\', \'out\': \'17857.939\\n\'}]', 1, 0, 0, '输入只有一行，该行中包含x与n，中间用空格分开。\n', '在单独一行中输出x^n的值。结果保留3位小数。\n', 1, 13, 'ymc', 2, '2 3\r\n\n', '8');
INSERT INTO `problem` VALUES (278, '阶乘输出\n', '<p>请输出如下所示的阶乘公式 3!+4!+5!+6!+7! 这个公式表示从3到7的阶乘之和。现在给定两个整数a和b(0<strong>&lt;</strong>a<strong>&lt;</strong>b)，请输出a到b的阶乘之和。</p>', '[{\'in\': \'3 7\\n\', \'out\': \'3!+4!+5!+6!+7!\\n\'}, {\'in\': \'2 8\\n\', \'out\': \'2!+3!+4!+5!+6!+7!+8!\\n\'}]', 1, 0, 0, '<p>输入为一行，由两个整数a和b构成，之间由一个空格分开。已经知道<strong>0&lt;a&lt;b&lt;20。</strong></p>', '<p>输出a到b的阶乘之和，公式中间无任何空格。公式最后加一个换行符。</p>', 1, 13, 'ymc', 2, '3 7\r\n\r\n', '3');
INSERT INTO `problem` VALUES (279, '数值统计\n', '统计给定的n个数中，负数、零和正数的个数。\n', '[{\'in\': \'6 0 1 2 3 -1 0\\n5 1 2 3 4 0.5\\n0 \\n\', \'out\': \'1 2 3\\n0 0 5\\n\'}, {\'in\': \'5 7 -4 -8 9 0\\n6 8 3 -3 0 9 0\\n6 0 0 0 0 0 0\\n1 8\\n2 8 0\\n0\\n\', \'out\': \'2 1 2\\n1 2 3\\n0 6 0\\n0 0 1\\n0 1 1\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的第一个数是整数n（n<100），表示需要统计的数值的个数，然后是n个实数；如果n=0，则表示输入结束，该行不做处理。\n', '对于每组输入数据，输出一行a,b和c，分别表示给定的数据中负数、零和正数的个数。\n', 1, 13, 'ymc', 2, '6 0 1 2 3 -1 0\r\n5 1 2 3 4 0.5\r\n0 \r\n\n', '1');
INSERT INTO `problem` VALUES (280, '求a+aa+aaa+…+aa…a 之和(循环)\n', '求Sn=a+aa+aaa+…+aa…a 之和，其中a是一个数字，n表示a的位数，例如：\r\n2+22+222+2222+22222（此时n=5）。\n', '[{\'in\': \'2\\n2 5\\n8 5\\n\', \'out\': \'a+aa+aaa+...=24690\\na+aa+aaa+...=98760\\n\'}]', 1, 0, 0, '第一行是一个正整数m，表示测试数据的个数。下面是 m对测试数据（第一个数据是a的值，第二个数据是n的值，其中0<=n<=9，数据之间用一个空格隔开），每行一对测试数据，共m行）。\n', '对每个测试数据，输出一行。每一行形式如下\r\na+aa+aaa+...=24690\r\n注意，a+aa+aaa+...中的a无需换成a的值。后面的省略号直接输出。\n', 1, 13, 'ymc', 1, '1\r\n2 5\n', 'a');
INSERT INTO `problem` VALUES (281, '最大公约数与最小公倍数\n', '<p>分别求两个整数的最大公约数和最小公倍数。 </p>', '[{\'in\': \'1\\n24 72\\n\', \'out\': \'24 72\\n\'}, {\'in\': \'2\\n24 72\\n138 240\\n\', \'out\': \'24 72\\n6 5520\\n\'}, {\'in\': \'3\\n24 72\\n138 240\\n1020 1111\\n\\n\', \'out\': \'24 72\\n6 5520\\n1 1133220\\n\'}]', 1, 0, 0, '<p>第一行是一个正整数n，表示测试数据的组数。下面是 n 对测试数据，每组测试数据用一个空格隔开。</p>', '<p>对于每对整数，输出其最大公约数和最小公倍数。</p>', 1, 13, 'ymc', 3, '1\r\n24 72\r\n\r\n', '2');
INSERT INTO `problem` VALUES (282, '猴子吃桃', '<p>猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个。第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第 n 天早上想再吃时，就只剩下一个桃子了。求第一天共摘多少个桃子。</p>', '[{\'in\': \'2\\n10\\n15\', \'out\': \'1534\\n49150\\n\'}]', 1, 0, 0, '<p>有多组测试数据，输入第一行是一个正整数n，表示有n组测试数据，每组测试数据输入占一行，改行只有一个整数n，表示猴子总在第n 天时只剩下一个桃子。(0&lt;n&lt;20)</p>', '<p>对每组测试数据在单独的一行中输出猴子第一天总共摘了多少个桃子。</p>', 1, 13, 'ymc', 1, '2\r\n5\r\n10\r\n', '4');
INSERT INTO `problem` VALUES (283, '母牛的故事', '<p>有一头母牛，它每年年初生一头小母牛。每头小母牛从第四个年头开始，每年年初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？</p>', '[{\'in\': \'2\\n4\\n5\\n0\\n\', \'out\': \'2\\n4\\n6\\n\'}, {\'in\': \'21\\n24\\n0\\n\', \'out\': \'2745\\n8641\\n\'}]', 1, 0, 0, '<p>输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(<strong>0&lt;n&lt;25</strong>)，n的含义如题目中描述。 n=0表示输入数据的结束，不做处理。</p>', '<p>对于每个测试实例，输出在第n年的时候母牛的数量。 每个输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n4\r\n5\r\n0\r\n', '2');
INSERT INTO `problem` VALUES (284, '不要62', '<p>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。 杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。 不吉利的数字为所有含有4或62的号码。例如： 62315 73418 88914 都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。 你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。</p>\r\n要求：\r\n1、编写一个判断一个数是否为吉利数字的函数。\r\n', '[{\'in\': \'1 100\\n0 0\\n\', \'out\': \'80\\n\'}, {\'in\': \'103 1000\\n0 0\\n\', \'out\': \'629\\n\'}]', 1, 0, 0, '<p>输入的都是整数对m、n（<strong>0&lt;m&le;n&le;1000</strong>），如果遇到都是0的整数对，则输入结束。</p>\r\n', '<p>对于每个整数对，输出吉利数字的总数，该数值占一行位置。</p>\r\n', 1, 13, 'ymc', 2, '1 100\r\n0 0\r\n\r\n\r\n', '8');
INSERT INTO `problem` VALUES (285, '同构数', '<p>找出1至99之间的全部同构数。<br />注：正整数n若是它平方数的尾部，则称n为同构数。例如，6是其平方数36的尾部，25是其平方数625的尾部，6与25都是同构数。<br /><span style=\"font-size: 10px;\">要求编写一个函数，判断正整数是否为同构的函数。</span></p>', '[{\'in\': \'\', \'out\': \'1 5 6 25 76 \\n\'}]', 1, 0, 0, '<p>无</p>', '<p>输出全部同构数 每个数后面输出一个空格。</p>', 1, 13, 'ymc', 1, '', '1');
INSERT INTO `problem` VALUES (286, ' 销售员 ', '现在的销售员的收入（工资）一般包括两部分，第一部分是基本工资，第二部分是销售提成。某销售员的基本工资是1000人民币，当月销售业绩x与销售员的提成比率如下图。\r\n要求：写一个函数计算销售员的销售提成。\r\n\r\n\r\n', '[{\'in\': \'10\\n100\\n10000\\n10001\\n50000\\n50001\\n200000\\n200001\\n300000\\n500050\\n999999\\n\\n\', \'out\': \'1005.000\\n1500.000\\n1750.075\\n4750.000\\n5250.085\\n18000.000\\n21000.100\\n31000.000\\n51005.000\\n100999.900\\n\'}]', 1, 0, 0, '输入第一行是一个整数n，表示有n个测试数据。接下来有n行，每行一个正实数，表示销售员某个月的销售业绩。\r\n\r\n', '对于每个测试数据，在单独的一行中输出销售员当月的收入，结果保留3位小数。\r\n\r\n', 1, 13, 'ymc', 1, '2\r\n10000\r\n50000\r\n\r\n', '1');
INSERT INTO `problem` VALUES (287, '最大公约数与最小公倍数', '<p>分别求两个整数的最大公约数和最小公倍数。</p>\r\n<p>要求： 1、编写计算最大公约数的函数</p>', '[{\'in\': \'1\\n24 72\\n\', \'out\': \'24 72\\n\'}, {\'in\': \'2\\n24 72\\n138 240\\n\', \'out\': \'24 72\\n6 5520\\n\'}, {\'in\': \'3\\n24 72\\n138 240\\n1020 1111\\n\\n\', \'out\': \'24 72\\n6 5520\\n1 1133220\\n\'}]', 1, 0, 0, '<p>第一行是一个正整数n，表示测试数据的组数。下面是 n 对测试数据，每组测试数据用一个空格隔开。</p>', '<p>对于每对整数，输出其最大公约数和最小公倍数。</p>', 1, 13, 'ymc', 3, '1\r\n24 72\r\n\r\n', '2');
INSERT INTO `problem` VALUES (288, '编程题一(10春)(函数)', '<p>按下面要求编写程序<br /> 1） 定义函数 total(n)计算1+2+3+....+n，函数返回类型是int。 <br />2） 定义函数main(),输入正整数n，计算并输出下列算式的值。<br />要求调用函数 total(n) 计算1+2+3+....+n。</p>', '[{\'in\': \'15\\n\', \'out\': \'1.875\\n\'}]', 1, 0, 0, '<p>输入只有一个整数n(1&lt;=n&lt;=20)</p>', '<p>在单独的一行中输出公式s的值，保留3位小数。</p>', 1, 13, 'ymc', 1, '5\r\n\r\n', '1');
INSERT INTO `problem` VALUES (289, '与7无关的数 ', '一个正整数，如果它能被7整除，或者它的十进制表示法中某位数上的数字为7，则称其为与7相关的数。\r\n现求所有小于等于n(n<100)的与7无关的正整数的平方和。\r\n要求： 编写二个函数\r\n（1）一是判断正整数能否被7整除的函数；\r\n（2）二是判断正整数的某位的数字是否为7的函数。', '[{\'in\': \'21\\n\', \'out\': \'2336\\n\'}, {\'in\': \'99\\n\', \'out\': \'204547\\n\'}, {\'in\': \'50\\n\', \'out\': \'31469\\n\'}]', 1, 0, 0, '<p>输入为一行,正整数n,(n&lt;100)</p>', '<p>输出小于等于n的与7无关的正整数的平方和</p>', 1, 13, 'ymc', 3, '21\r\n\r\n', '2');
INSERT INTO `problem` VALUES (290, '因子数', '<p>给定一个整数x，定义g(x)是x的因子个数。现在给你一个整数区间[a,b]，请你求出该区间的x使g(x)最大。</p>', '[{\'in\': \'6\\n1 1\\n2 3\\n1 10\\n47 359\\n10 5000\\n123 800\\n\', \'out\': \'1\\n2\\n6\\n240\\n2520\\n720\\n\'}]', 1, 0, 0, '<p>第一行是一个整数n，接下来总共n行。</p>\r\n<p>每行两个正整数a和b，&nbsp;<strong>1&lt;=a&lt;=b&lt;=5000</strong>，表示闭区间[a,b]。</p>', '<p>对每组测试数据，在单独的一行中输出一个整数，即对应的区间因子最多的数，如果满足条件有多个，则输出其中最小的数。</p>', 1, 13, 'ymc', 1, '3\r\n2 3\r\n1 10\r\n47 359\r\n', '2');
INSERT INTO `problem` VALUES (291, '插入数组元素（数组）', '<p>有n(n&lt;=100)个整数，已经按照从小到大顺序排列好了，现在另外给一个整数x，请将该数插入到序列中，并使新的序列仍然有序。</p>', '[{\'in\': \'4 6\\n1 3 9 10\\n4 2\\n3 5 7 9\\n6 3\\n1 2 3 4 5 6\\n6 20\\n1 2 3 4 5 6\\n0 0\\n\', \'out\': \'1 3 6 9 10 \\n2 3 5 7 9 \\n1 2 3 3 4 5 6 \\n1 2 3 4 5 6 20 \\n\'}]', 1, 1, 1, '<p>输入数据包含多个测试实例，每组数据由两行组成，第一行是n和m，第二行是已经有序的n个数的数列。n和m同时为0表示输入数据结束，本行不做处理。</p>', '<p>对于每个测试实例，输出插入新的元素后的数列，每个元素后有一个空格。</p>', 1, 13, 'ymc', 1, '3 3\r\n1 2 4\r\n0 0\r\n', '1');
INSERT INTO `problem` VALUES (292, '数组元素的删除(数组)', '<p>给定一个整数序列a1,a2,...,an，删除序列中所有值为m的元素。</p>\r\n<p>要求：</p>\r\n<p>1、用数组。</p>\r\n<p>2、将值为m的数组元素从数组中删除，而不是简单的不输出m。</p>', '[{\'in\': \'7\\n1 2 3 4 5 3 6\\n3\\n\', \'out\': \'1 2 4 5 6 \\n\'}, {\'in\': \'20\\n1 2 3 4 5 3 6 8 9 10 1 2 3 4 5 3 3 3 9 10\\n3\\n\', \'out\': \'1 2 4 5 6 8 9 10 1 2 4 5 9 10 \\n\'}]', 1, 0, 0, '<p>输入有3行，</p>\r\n<p>第一行是一个整数n，表示序列长度为n(0&lt;n&lt;100)。</p>\r\n<p>第二行有n个整数，中间用空格分开。</p>\r\n<p>第三行是一个整数m。</p>', '<p>在单独一行中输出删除元素后序列。每个整数后面跟一个空格。</p>', 1, 13, 'ymc', 2, '7\r\n1 2 3 4 5 3 6\r\n3\r\n', '1');
INSERT INTO `problem` VALUES (293, '数组的平均数和标准差（数组）', '<p>求n个数的平均数和标准差，如果有n个数据X1 ,X2 ,X3 ......Xn ,数据的平均数为X，标准差&sigma;如下。</p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"/images/media/uploads/images/0379.png\" alt=\"\" /></p>', '[{\'in\': \'5\\n6 1 1 1 1 1 1\\n5 1 2 3 4 6\\n5 5 6 7 8 9\\n5 100 200 300 400 500\\n5 999 700 666 502 350\\n\', \'out\': \'1.000 0.000\\n3.200 1.720\\n7.000 1.414\\n300.000 141.421\\n643.400 217.368\\n\'}]', 1, 0, 0, '<p>第一行一个正整数T，表示有T组测试数据。以下每行是一组数，第一个数为数组元素的个数m，然后是由空格分开的m个整数构成，每个整数不大于1000。</p>', '<p>对于每组数据输出一行，即平均数和标准差，两个数据均保留3位小数，并且以一个空格隔开。</p>', 1, 13, 'ymc', 1, '2\r\n6 1 1 1 1 1 1\r\n5 1 2 3 4 6\r\n\r\n', '1');
INSERT INTO `problem` VALUES (294, '一维数组排序', '有n(n<=100)个整数，将其从小到大排列并输出。\r\n排序的方法有很多，要求掌握的方法有：\r\n1、选择法排序\r\n2、冒泡法排序\r\n3、插入法排序\r\n具体算法请上网找资料\r\n', '[{\'in\': \'10\\n12 5 89 6 3 56 45 25 1 78\\n\\n\', \'out\': \'1 3 5 6 12 25 45 56 78 89 \\n\'}]', 1, 0, 0, '输入数据包含一个测试实例，每组数据由两行组成，第一行是数组元素的个数n，第二行是n个整数。\r\n', '对于每个测试实例，从小到大输出，每个元素后有一个空格。\r\n', 1, 13, 'ymc', 1, '5\r\n12 5 89 6 3\r\n\r\n', '3');
INSERT INTO `problem` VALUES (295, '一维数组元素查找', '<p>有n(n&lt;=100)个整数，已经从小到大排列，输入一数，查找是否在数组中存在，如果存在，则输出其位置，否则输出-1.</p>\r\n<p>查找的方法有：</p>\r\n<p>1、逐个查找</p>\r\n<p>2、折半查找</p>\r\n<p>具体算法请上网找资料</p>', '[{\'in\': \'10\\n1 3 5 6 12 25 45 56 78 89 \\n45\\n\', \'out\': \'6\\n\'}, {\'in\': \'10\\n1 3 5 6 12 25 45 56 78 89 \\n0\\n\', \'out\': \'-1\\n\'}]', 1, 0, 0, '<p>输入数据包含一个测试实例，每组数据由三行组成，第一行是数组元素的个数n，第二行是n个已经排序的整数，第三行是待查找的数。</p>', '<p>如果数组中存在，则输出其位置，否则，输出-1.</p>', 1, 13, 'ymc', 2, '5\r\n3 5 6 12 89\r\n6\r\n\r\n\r\n', '2');
INSERT INTO `problem` VALUES (296, '密码\n\n', '网上流传一句话:\"常在网上飘啊，哪能不挨刀啊～\"。其实要想能安安心心地上网其实也不难，学点安全知识就可以。\r\n\r\n首先，我们就要设置一个安全的密码。那什么样的密码才叫安全的呢？一般来说一个比较安全的密码至少应该满足下面两个条件：\r\n\r\n(1).密码长度大于等于8，且不要超过16。\r\n(2).密码中的字符应该来自下面“字符类别”中四组中的至少三组。\r\n\r\n这四个字符类别分别为：\r\n1.大写字母：A,B,C...Z;\r\n2.小写字母：a,b,c...z;\r\n3.数字：0,1,2...9;\r\n4.特殊符号：~,!,@,#,$,%,^;\r\n\r\n给你一个密码，你的任务就是判断它是不是一个安全的密码。\r\n\n', '[{\'in\': \'15\\na1b2c3d4\\nLinle@ACM\\n^~^@^@!%\\nABCDEFDSDD\\nabdkjkjkjl\\nSKJFK4654\\nkdjfkl21ddf\\n#@$#21212&*&\\nADFDK##$%121\\n@#121ghhgSDF\\nfj145$#$#GFG\\n12@#$kjhkjnh\\n1212@#$ADFDD\\n121212545635\\n@#$@#%$^%^@#\\n\', \'out\': \'NO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\'}]', 1, 0, 0, '输入数据第一行包含一个数M，接下有M行，每行一个密码（长度最大可能为50），密码仅包括上面的四类字符。\r\n\n', '对于每个测试实例，判断这个密码是不是一个安全的密码，是的话输出YES，否则输出NO。\r\n\n', 1, 13, 'ymc', 1, '3\r\na1b2c3d4\r\nLinle@ACM\r\n^~^@^@!%\r\n\r\n\n', 'N');
INSERT INTO `problem` VALUES (297, '输出出现过的大写英文字母(数组)', '输入一行字符(不超过100个字符)，按次序输出出现过的大写字母。', '[{\'in\': \'FONTNAME and FILENAME\\n\', \'out\': \'F O N T A M E I L \\n\'}]', 1, 0, 0, '输入一行字符串(不超过100字符)。', '将结果输出到一行中，每个字母后面带一个空格。', 1, 13, 'ymc', 1, 'FONTNAME and FILENAME\r\n', 'F');
INSERT INTO `problem` VALUES (298, '魔方阵（数组）', '<p>所谓魔方阵是指这样的方阵，它的每一行、每一列和对角线之和均相等。要求输出1,...,n^2的自然数构成的魔方阵。 \r\n8 1 6 \r\n3 5 7 \r\n4 9 2 \r\n\r\n\r\nn阶魔方阵的构造方法为: \r\n1） 首先把1放在顶行的正中间，然后把后继数按顺序放置在右上方位置； \r\n2） 当到达顶行时，下一个数放到底行，好像它在顶行的上面；例如上图中的数字2 \r\n3） 当到达最右列时，下一个数放在最左端列，好像它仅靠在右端列的右方；例如上图中的数字3. \r\n4） 当到达的位置已经填好数时，或到达右上角的位置时，下一个数就放在刚填写的位置的正下方。例如上图中的数字4和7。</p>', '[{\'in\': \'3\\n\', \'out\': \'8 1 6 \\n3 5 7 \\n4 9 2 \\n\'}, {\'in\': \'7\\n\', \'out\': \'30 39 48 1 10 19 28 \\n38 47 7 9 18 27 29 \\n46 6 8 17 26 35 37 \\n5 14 16 25 34 36 45 \\n13 15 24 33 42 44 4 \\n21 23 32 41 43 3 12 \\n22 31 40 49 2 11 20 \\n\'}]', 1, 0, 0, '<p>输入正整数n,表示魔方阵的行数。（请注意：n是一个不大于30的奇整数）</p>', '<p>n阶的魔方阵占n行，每行n个数字，每个数字后有空格</p>', 1, 13, 'ymc', 2, '3\r\n', '8');
INSERT INTO `problem` VALUES (299, '鞍点（数组）', '找一个二维数组中的鞍点，即该位置上的元素在该行上最大，在该列上最小。鞍点最多一个，也可能不存在。', '[{\'in\': \'2 3\\n3 6 9\\n4 5 6\\n\', \'out\': \'1 2 6 \\n\'}]', 1, 0, 0, '第一行是二维数组的行数和列数（行和列的数目均不大于100），之后为二维数组。', '如果存在鞍点，输出鞍点所在的行、列及其值,每个数后一个空格；如果不存在，输出\"N\"', 1, 13, 'ymc', 1, '3 3\r\n11 22 33\r\n99 33 55\r\n44 55 66\r\n', '0');
INSERT INTO `problem` VALUES (300, '找位置', '编写函数strrindex(s, t)，它返回字符串t在s中最右边出现的位置。如果s中不包含t，则返回-1。\r\n设计一个合适的主程序测试你编写的函数。字符串的长度不超过1000。', '[{\'in\': \'The Internet developers wanted to make a networking protocol that had serious longevity, so they had to define a large enough IP address space to last well beyond the foreseeable future.\\nthe\\n\', \'out\': \'163\\n\'}]', 1, 0, 0, '输入数据有两行，第一行是字符串s，第二行是字符串t。', '如果字符串s中包含字符串t，则输出t在s中最右边出现的位置，否则输出-1。', 1, 13, 'ymc', 1, 'I am a student.\r\nam', '2');
INSERT INTO `problem` VALUES (301, '位操作(Ⅰ)', '<p>对一个非负整数a（<strong>0&lt;a&lt;=65535</strong>），取其从右端开始的第4~7位（最右端是第0位）。</p>', '[{\'in\': \'4\\n80\\n1000\\n1234\\n65535\\n\', \'out\': \'0\\n5\\n14\\n13\\n15\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个整数组成。</p>', '<p>对于每组输入数据，输出一行。</p>', 1, 13, 'ymc', 1, '4\r\n80\r\n1234\r\n', '0');
INSERT INTO `problem` VALUES (302, '求PI的值', '利用 PI/2=(2/1) * (2/3) * (4/3) * (4/5) * (6/5) * (6/7) * ... 前200项之积，编程计算法PI的值。', '[{\'in\': \'\', \'out\': \'3.134\\n\'}]', 1, 0, 0, '本题没有输入。', '在单独的一行中输出PI的值，保留3位小数。', 1, 13, 'ymc', 1, '', '在');
INSERT INTO `problem` VALUES (303, '判断正整数的位数', '<p>给一个数n（<strong>0&lt;n&lt;=32767</strong>），逆序打印出各位数字，并求它是几位数。</p>', '[{\'in\': \'12345\\n34\\n789\\n9\\n7890\\n32767\\n\', \'out\': \'54321 5\\n43 2\\n987 3\\n9 1\\n0987 4\\n76723 5\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个整数组成。</p>', '<p>对于每组输入数据，输出一行，该行有两个数，一个数是n的各位数字的逆序，一个数是n的位数，它们以一个空格隔开。</p>', 1, 13, 'ymc', 1, '12345\r\n34\r\n100\r\n789\r\n', '5');
INSERT INTO `problem` VALUES (304, '整数的个数 ', '<p>给定k（<strong>1&lt;k&lt;100</strong>）个正整数，其中每个数都是大于等于1，小于等于10的数。写程序计算给定的k个正整数中，1，5和10出现的次数。</p>', '[{\'in\': \'5\\n1 5 8 10 5 \\n\', \'out\': \'1\\n2\\n1\\n\'}, {\'in\': \'30\\n1 5 8 10 5 1 5 8 10 5 1 5 8 10 5 1 5 8 10 5 1 5 8 10 5 1 5 8 10 5\\n\', \'out\': \'6\\n12\\n6\\n\'}]', 1, 0, 0, '<p>输入有两行：第一行包含一个正整数k，第二行包含k个正整数，每两个正整数用一个空格分开。</p>', '<p>输出有三行，第一行为1出现的次数，第二行为5出现的次数，第三行为10出现的次数。</p>', 1, 13, 'ymc', 2, '5\r\n1 5 8 10 5 \r\n', '1');
INSERT INTO `problem` VALUES (305, ' A+B(I)', '你的任务是计算a + b。\r\n太容易？当然！这是针对初学者特地设计的题目。\r\n你会发现和这道题有相同标题的一些题，是的，所有这些题目都是为了进行输入输出练习这个目标而设计的。\r\n', '[{\'in\': \'1 5\\n10 20\\n1000 2000\\n568 7000\\n\', \'out\': \'6\\n30\\n3000\\n7568\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，它有两个整数a、b，这两个整数用空格隔开。\r\n', '对于每组输入数据a和b，输出一行，即a+b的值。\r\n', 1, 13, 'ymc', 1, '1 5\r\n10 20', '6');
INSERT INTO `problem` VALUES (306, 'A+B(II)', '你的任务是计算a+b。\r\n', '[{\'in\': \'4\\n1 5\\n10 20\\n1000 2000\\n568 7000\\n\', \'out\': \'6\\n30\\n3000\\n7568\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数t，表示测试实例的组数。然后是t行，每行有两个整数a、b，这两个整数用空格隔开。\r\n\r\n', '对于每组输入数据a和b，输出一行，即a+b的值。\r\n', 1, 13, 'ymc', 1, '2\r\n1 5\r\n10 20', '6');
INSERT INTO `problem` VALUES (307, '前m大的数', '<p>给定一个包含N(<strong>1&lt;N&lt;=20</strong>)个正整数的序列，每个数不超过100，对它们两两相加得到的N*(N-1)/2个和，求出其中前M大的数(M&lt;=20)并按从大到小的顺序排列。</p>', '[{\'in\': \'4 4\\n1 2 3 4\\n4 5\\n5 3 6 4\\n10 5\\n1 2 3 4 5 6 7 8 9 10\\n\', \'out\': \'7 6 5 5 \\n11 10 9 9 8 \\n19 18 17 17 16 \\n\'}]', 1, 0, 0, '<p>输入可能包含多组数据，其中每组数据包括两行： 第一行两个数N和M， 第二行N个数，表示该序列。</p>', '<p>对于输入的每组数据，输出前M大的数（每个数后面有一个空格）。输出应当按照从大到小的顺序排列。</p>', 1, 13, 'ymc', 1, '4 4\r\n1 2 3 4\r\n4 5\r\n5 3 6 4\r\n', '7');
INSERT INTO `problem` VALUES (308, '一步一个脚印：正负数II', '<p>首先给定一个正整数n，说明有n个整数需要处理。 对每一个输入的一个整数m，如果m是正数，则输出1，如果m是0，则输出0，如果m是负数，则输出-1。</p>', '[{\'in\': \'3\\n5\\n-10\\n0\\n\', \'out\': \'1\\n-1\\n0\\n\'}]', 1, 0, 0, '<p>第一行输入一个正整数n，然后是n行，每行一个整数m。-1000&lt;m&lt;1000</p>', '<p>输出总共n行，每行根据m的值输出1，0或者-1。</p>', 1, 13, 'ymc', 1, '3\r\n2\r\n0\r\n-20\r\n', '1');
INSERT INTO `problem` VALUES (309, '一步一个脚印:正负数', '对输入的一个整数n，如果n是正数，则输出1，如果n是0，则输出0，如果n是负数，则输出-1。', '[{\'in\': \'5\\n\', \'out\': \'1\\n\'}, {\'in\': \'0\\n\', \'out\': \'0\\n\'}, {\'in\': \'-100\\n\', \'out\': \'-1\\n\'}]', 1, 0, 0, '输入只有一个整数n，-1000<n<1000.', '根据n的值在单独的一行输出0，1或者-1。', 1, 13, 'ymc', 3, '-10\n', '-');
INSERT INTO `problem` VALUES (310, '密码', '网上流传一句话:\"常在网上飘啊，哪能不挨刀啊～\"。其实要想能安安心心地上网其实也不难，学点安全知识就可以。\r\n\r\n首先，我们就要设置一个安全的密码。那什么样的密码才叫安全的呢？一般来说一个比较安全的密码至少应该满足下面两个条件：\r\n\r\n(1).密码长度大于等于8，且不要超过16。\r\n(2).密码中的字符应该来自下面“字符类别”中四组中的至少三组。\r\n\r\n这四个字符类别分别为：\r\n1.大写字母：A,B,C...Z;\r\n2.小写字母：a,b,c...z;\r\n3.数字：0,1,2...9;\r\n4.特殊符号：~,!,@,#,$,%,^;\r\n\r\n给你一个密码，你的任务就是判断它是不是一个安全的密码。', '[{\'in\': \'15\\na1b2c3d4\\nLinle@ACM\\n^~^@^@!%\\nABCDEFDSDD\\nabdkjkjkjl\\nSKJFK4654\\nkdjfkl21ddf\\n#@$#21212&*&\\nADFDK##$%121\\n@#121ghhgSDF\\nfj145$#$#GFG\\n12@#$kjhkjnh\\n1212@#$ADFDD\\n121212545635\\n@#$@#%$^%^@#\\n\', \'out\': \'NO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\'}]', 1, 0, 0, '输入数据第一行包含一个数M，接下有M行，每行一个密码（长度最大可能为50），密码仅包括上面的四类字符。', '对于每个测试实例，判断这个密码是不是一个安全的密码，是的话输出YES，否则输出NO。', 1, 13, 'ymc', 1, '3\r\na1b2c3d4\r\nLinle@ACM\r\n^~^@^@!%\r\n', 'N');
INSERT INTO `problem` VALUES (311, '二进制', '给定一个十进制的正整数n(0 < n < 1000)，把这个十进制数转化为二进制数。\r\n', '[{\'in\': \'1\\n2\\n3\\n\', \'out\': \'1\\n10\\n11\\n\'}, {\'in\': \'12\\n345\\n75\\n68\\n96\\n222\\n\', \'out\': \'1100\\n101011001\\n1001011\\n1000100\\n1100000\\n11011110\\n\'}]', 1, 0, 0, '有多组测试数据，每组测试数据输入只有一个正整数n。处理到文件结束（EOF）。\r\n', '对每组测试数，在单独的一行中输出对应的二进制数。\r\n', 1, 13, 'ymc', 2, '1\r\n2\r\n3\r\n', '1');
INSERT INTO `problem` VALUES (312, 'A|B?', '正整数A是否能被正整数B整除，不知道为什么小鱼会研究这个问题，来帮帮他吧。', '[{\'in\': \'2\\n4 2\\n5 3\\n\', \'out\': \'YES\\nNO\\n\'}, {\'in\': \'5\\n236 897\\n265 888\\n85 5\\n98 2\\n68 17\\n\', \'out\': \'NO\\nNO\\nYES\\nYES\\nYES\\n\'}]', 1, 0, 0, '输入数据的第一行是一个数据T，表示有T组数据。\n每组数据有两个正整数A和B(A,B<10^9)。', '对于每组输入数据，输出\"YES\"表示可以被整除，\"NO\"表示不能被整除。', 1, 13, 'ymc', 2, '2\n4 2\n5 3\n', 'Y');
INSERT INTO `problem` VALUES (313, '手机短号', '大家都知道，手机号是一个11位长的数字串，同时，作为学生，还可以申请加入校园网，如果加入成功，你将另外拥有一个短号。假设所有的短号都是 6+手机号的后5位，比如号码为13512345678的手机，对应的短号就是645678。\n现在，如果给你一个11位长的手机号码，你能找出对应的短号吗？', '[{\'in\': \'2\\n13512345678\\n13787654321\\n\', \'out\': \'645678\\n654321\\n\'}, {\'in\': \'5\\n15067589544\\n15489647548\\n15486358854\\n13864885467\\n15068779445\\n\', \'out\': \'689544\\n647548\\n658854\\n685467\\n679445\\n\'}]', 1, 0, 0, '输入数据的第一行是一个N(N <= 200)，表示有N个数据，接下来的N行每一行为一个11位的手机号码。', '输出应包括N行，每行包括一个对应的短号，输出应与输入的顺序一致。', 1, 13, 'ymc', 2, '2\n13512345678\n13787654321\n', '6');
INSERT INTO `problem` VALUES (314, '次大值和次小值', '求输入的一组整数中的次大数和次小数的差。', '[{\'in\': \'1\\n5 -1 -2 -3 -4 -5\\n\', \'out\': \'2\\n\'}, {\'in\': \'3\\n4 43 54324 -454 0\\n6 3423 34 825 -63 436 243\\n8 423 956 -5464 -353 746 -3453 -16 0\\n\', \'out\': \'43\\n\\n791\\n\\n4199\\n\'}]', 1, 0, 0, '第一行是测试数据的组数。以下每行是一组测试数据，每组由多个整数组成，第一个数表示该组一共有几个整数（大于3，小于等于100），整数之间由空格分开。', '对输入的每组测试数据，将结果输出，每组之间空行，最后一组没有空行。', 1, 13, 'ymc', 2, '2\n4 12 34 56 78\n5 1234 34 13 663 5000\n', '2');
INSERT INTO `problem` VALUES (315, '行列互换', '将一个整数矩阵的行和列互换。', '[{\'in\': \'2\\n5 6\\n43 643 1 65 3 5\\n-43 4 -4 0 53 423 \\n5 64 2 -99 44 40\\n4 -32 43 542 5 4\\n42 4 2 -9 43 87\\n1 1\\n2\\n\', \'out\': \'43 -43 5 4 42 \\n643 4 64 -32 4 \\n1 -4 2 43 2 \\n65 0 -99 542 -9 \\n3 53 44 5 43 \\n5 423 40 4 87 \\n\\n2 \\n\\n\'}, {\'in\': \'1\\n2 3\\n3 3 9\\n4 5 4\\n\', \'out\': \'3 4 \\n3 5 \\n9 4 \\n\\n\'}]', 1, 0, 0, '第一行是测试数据的组数。以下每组数据的首行是矩阵的行数和列数（行和列的数目均不大于100），之后为矩阵。', '对输入的每组测试数据，将矩阵行列互换输出，每组后面有一个空行。矩阵中的每个数据之后有一个空格。', 1, 13, 'ymc', 2, '2\n3 2\n11 22\n33 44\n55 66\n3 3\n11 12 13\n21 22 23\n31 32 33\n', '1');
INSERT INTO `problem` VALUES (316, 'e的x次幂', '<p>对于<strong>0&lt;x&lt;1</strong>，利用公式e<sup>x</sup>=1 + x + x<sup>2</sup>/2! + &hellip; + x<sup>i</sup>/i! + &hellip; ，求e<sup>x</sup> 的近似值，结果精确到10<sup>-8</sup>。</p>', '[{\'in\': \'0.3\\n0.4\\n0.5\', \'out\': \'1.34985881\\n1.49182470\\n1.64872127\\n\'}, {\'in\': \'0.1\\n0.2\\n0.3\\n0.4\\n0.8\\n\', \'out\': \'1.10517092\\n1.22140276\\n1.34985881\\n1.49182470\\n2.22554093\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个实数组成。</p>', '<p>对于每组输入数据，输出一行。</p>', 1, 13, 'ymc', 2, '0.3\r\n0.4\r\n0.5', '1');
INSERT INTO `problem` VALUES (317, '计算函数的值', '编写一个递归函数（或非递归函数），计算如下定义的函数f：\n（1）当x为负数时，f(x, y) = x + y；\n（2）当x为非负数时，f(x, y) = f(x-1, x+y) + x/y 。\n其中，x（x不大于1000），y都是实数，f的值也是实数。\n', '[{\'in\': \'0 3.14\\n1 1\\n-1 5.7857\', \'out\': \'2.14\\n2.00\\n4.79\\n\'}, {\'in\': \'100.56 3.14\\n-100.56 3.14\\n1000 998\\n\', \'out\': \'5145.71\\n-97.42\\n501503.79\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，由两个实数（即x，y）组成。', '对于每组输入数据，输出一行，结果保留两位小数。', 1, 13, 'ymc', 2, '0 3.14\n1 1\n-1 5.7857\n', '2');
INSERT INTO `problem` VALUES (318, '一步一个脚印：a+b', '给定两个整数a,b。求a+b。本题有多组测试数据。\n', '[{\'in\': \'5\\n1 1\\n1 2\\n3 4\\n10 20\\n13 100\\n\\n\', \'out\': \'2\\n3\\n7\\n30\\n113\\n\'}]', 1, 0, 0, '首先给定一个整数n,后面跟n行，每一行都包含两个整数a,b，这两个整数由空格分开。', '每组测试数据输出一样，这一行包括一个整数，其值为a+b。', 1, 13, 'ymc', 1, '2\n1 1\n1 2\n', '2');
INSERT INTO `problem` VALUES (319, 'A+B(III)', '你的任务是计算a+b。\r\n', '[{\'in\': \'1 5\\n10 20\\n1000 2000\\n568 7000\\n0 0\\n\', \'out\': \'6\\n30\\n3000\\n7568\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，它有两个整数a、b，这两个整数用空格隔开。\r\n如果a=0并且b=0，则表示输入结束，该行不做处理。\r\n', '对于每组输入数据a和b，输出一行，即a+b的值。\r\n', 1, 13, 'ymc', 1, '1 5\r\n10 20\r\n0 0', '6');
INSERT INTO `problem` VALUES (320, 'A+B(IV)', '你的任务求计算一些整数的和。\r\n', '[{\'in\': \'4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\\n0\', \'out\': \'10\\n15\\n55\\n3690\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行。\r\n每组测试数据的第一个数n，表示在同一行里接着下来有n个整数。\r\n如果n=0，则表示输入结束，该行不做处理。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n', 1, 13, 'ymc', 1, '4 1 2 3 4\r\n5 1 2 3 4 5\r\n0', '1');
INSERT INTO `problem` VALUES (321, 'A+B(V)', '你的任务是求一些整数的和。\r\n', '[{\'in\': \'4\\n4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\', \'out\': \'10\\n15\\n55\\n3690\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数t，表示测试实例的组数。\r\n然后是t行，每组测试实例的第一个数 n，表示在同一行里接着下来有 n 个整数。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n', 1, 13, 'ymc', 1, '2\r\n4 1 2 3 4\r\n5 1 2 3 4 5', '1');
INSERT INTO `problem` VALUES (322, '三个数的一些基本运算', '要求从键盘输入3个整数，并打印他们的和、平均值、乘积、最小值和最大值。', '[{\'in\': \'4\\n13 27 14\\n12 13 14\\n-12 13 14\\n99 98 90\\n\', \'out\': \'54 18 4914 13 27\\n39 13 2184 12 14\\n15 5 -2184 -12 14\\n287 95 873180 90 99\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括用空格隔开的3个int类型整数。', '输出n行，每行分别为相应输入行三个数的和、平均值（取其整数部分）、乘积、最小值和最大值，用空格隔开。', 1, 13, 'ymc', 1, '1\n13 27 14\n', '5');
INSERT INTO `problem` VALUES (323, '数的奇偶性', '输入一个整数。确定他是奇数还是偶数。', '[{\'in\': \'6\\n14\\n13\\n1\\n-201\\n200\\n12346\\n\', \'out\': \'0\\n1\\n1\\n1\\n0\\n0\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括 一个int类型整数。', '输出有 n 行，每行是整数0或1，对应相应输入行的结果。如果对应输入行是奇数，则输出 1，否则，输出 0。', 1, 13, 'ymc', 1, '2\r\n14\r\n13\r\n', '0');
INSERT INTO `problem` VALUES (324, '判断倍数关系', '读入两个整数，并打印出第一个数是否是第二个数的倍数。注意：0是任何数的倍数。', '[{\'in\': \'6\\n12 6\\n3 2\\n1 0\\n0 0\\n100 -50\\n0 1\\n\', \'out\': \'1\\n0\\n0\\n1\\n1\\n1\\n\'}]', 1, 0, 0, '输入第一行有一个整数 n，表示下面有 n 组数据。下面的 n 行，每行包括用空格隔开的两个整数 a 和 b （-100 ≤ a ≤ 100，-100 ≤ b ≤ 100）。', '输出有 n 行，每行是整数0或1，对应相应输入行的结果。如果对应输入行第一个数是第二个数的倍数，则输出 1，否则，输出 0。', 1, 13, 'ymc', 1, '2\r\n12 6\r\n3 2\r\n', '1');
INSERT INTO `problem` VALUES (325, '数字分隔', '<p>要求输入一个5位整数，然后分解出它的每位数字，并将这些数字间隔3个&ldquo;-&rdquo;的形式打印出来。</p>', '[{\'in\': \'12345\\n54321\\n56789\\n13579\\n97531\\n24680\\n0\\n\', \'out\': \'1---2---3---4---5\\n5---4---3---2---1\\n5---6---7---8---9\\n1---3---5---7---9\\n9---7---5---3---1\\n2---4---6---8---0\\n\'}]', 1, 0, 0, '<p>多组测试数据，每组一行（即一个五位整数），数据以0结尾。</p>', '<p>每组数据输出一行，分解出它的每位数字，并将这些数字间隔3个减号（就是：&ldquo;-&rdquo;）的形式打印出来。</p>', 1, 13, 'ymc', 1, '12345\r\n54321\r\n0\r\n', '1');
INSERT INTO `problem` VALUES (326, '二进制转换为十进制', '输入一个二进制数（仅由0和1构成的整数），打印出该数对应的十进制数。输入的二进制数最大不超过30位。\r\n注意：输入的二进制数最大长度可能有30位，用整数保存会溢出。', '[{\'in\': \'6\\n11\\n110\\n1101110\\n11111111\\n100000000\\n10000001111111011\\n\', \'out\': \'3\\n6\\n110\\n255\\n256\\n66555\\n\'}]', 1, 0, 0, '第一行是测试数据的组数n，下面的n行是每一行是一个二进制数。', '输出为n行，分别为对应输入的十进制数。', 1, 13, 'ymc', 1, '2\r\n11\r\n110\r\n', '3');
INSERT INTO `problem` VALUES (327, '谁是最小数', '确定用户输入的m个数中的最小的数。', '[{\'in\': \'4\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'2\\n-9\\n1\\n-10\\n\'}]', 1, 0, 0, '先给出数据的组数，对于每组数据，输入有两行，第一行为用户要输入的整数个数m，第二行为m个用空格隔开的整数。', '每组数据输出只有一行，为用户输入的m个数中最小的数', 1, 13, 'ymc', 1, '2 \n5 \n2 3 7 5 3 \n2 \n-1 -9\n', '2');
INSERT INTO `problem` VALUES (328, '构成三角形的条件', '读入3个非零的double数后，判别这三个值是否可以表示一个三角形的三条边。', '[{\'in\': \'5\\n1 1 1\\n5 6 -1\\n1 2 3\\n4 5 6\\n7 8 9\\n\', \'out\': \'1\\n0\\n0\\n1\\n1\\n\'}]', 1, 0, 0, '第一行是测试数据组数n。下面有n行，每行分别是用空格隔开的3个double，代表三角形的三条边。', '输出为n行，对应第n行输入的结果。判断输入的三个值是否可以表示一个三角形的三条边，如果能则输出1，如果不能输出0 。', 1, 13, 'ymc', 1, '2\n1 1 1\n5 6 -1\n', '1');
INSERT INTO `problem` VALUES (329, '多个整数的和', '确定用户输入的m个数的和。', '[{\'in\': \'5\\n5\\n1 2 3 4 5\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'15\\n20\\n-10\\n55\\n93\\n\'}]', 1, 0, 0, '先给出数据的组数T，对于每组数据，输入有两行，第一行为用户要输入的数个数m(m<1000)，第二行为m个用空格隔开的int类型整数。', '每组数据输出只有一行，为用户输入的m个数的和。', 1, 13, 'ymc', 1, '2\n5\n1 2 3 4 5\n2\n-1 -9\n', '1');
INSERT INTO `problem` VALUES (330, '给定一个正整数m，打印它的阶乘。', '第一行是测试数据组数n，下面n行每一行是一个正整数。', '[{\'in\': \'6\\n4\\n5\\n7\\n8\\n9\\n10\\n\', \'out\': \'24\\n120\\n5040\\n40320\\n362880\\n3628800\\n\'}]', 1, 0, 0, '输出有n行，分别为对应输入数的阶乘。', '输出有n行，分别为对应输入数的阶乘。', 1, 13, 'ymc', 1, '2\n4\n5\n', '2');
INSERT INTO `problem` VALUES (331, '两个数的最大值', '编写一个程序。要求用户输入两个整数，获取用户输入的数，然后打印出较大的数。如果这两个数相等，则打印信息“These numbers are equal.” 。', '[{\'in\': \'5\\n14 14\\n13 12\\n100 101\\n-9 -9\\n100 100\\n\', \'out\': \'These numbers are equal.\\n13\\n101\\nThese numbers are equal.\\nThese numbers are equal.\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行有两个用空格隔开的int类型整数。', '输出有n行，每行输出对应的结果。', 1, 13, 'ymc', 1, '2\r\n14 14\r\n13 12\r\n', 'T');
INSERT INTO `problem` VALUES (332, '大象喝水 ', '一只大象口渴了，要喝20升水才能解渴，但现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才会解渴。(设PI=3.14159) ', '[{\'in\': \'1\\n23 11\\n\', \'out\': \'3\\n\'}, {\'in\': \'4\\n230 11\\n23 110\\n1 1\\n2 5\\n\', \'out\': \'1\\n1\\n6367\\n128\\n\'}]', 1, 0, 0, '本题有多组测试数据，每组数据一行。\r\n第一行是一个整数n，表示后面有n组测试数据。\r\n后面的n行每行两个整数h和r：分别表示小圆桶的深h，和底面半径r，单位都是厘米。', '每组测试数据输出一行， 每行中一个整数，表示大象需要喝多少桶水。', 1, 13, 'ymc', 2, '1\r\n23 11\r\n', '3');
INSERT INTO `problem` VALUES (333, 'A+B(VI)', '你的任务是求一些整数的和。\r\n', '[{\'in\': \'4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\', \'out\': \'10\\n15\\n55\\n3690\\n\'}]', 1, 0, 0, '输入数据有多组，每组测试实例的第一个数 n，表示在同一行里接着下来有 n 个整数。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n', 1, 13, 'ymc', 1, '4 1 2 3 4\r\n5 1 2 3 4 5', '1');
INSERT INTO `problem` VALUES (334, 'A+B(VII)', '<p>你的任务是计算a+b。</p>', '[{\'in\': \'1 5\\n10 20\\n1000 2000\\n568 7000\', \'out\': \'6\\n\\n30\\n\\n3000\\n\\n7568\\n\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，它有两个整数a、b，这两个整数用空格隔开。</p>', '<p>对于每组输入数据a和b，输出一行，即a+b的值，每个a+b的值后面有一个空行。</p>', 1, 13, 'ymc', 1, '1 5\r\n10 20', '6');
INSERT INTO `problem` VALUES (335, 'A+B(VIII)', '你的任务求一些整数的和。\r\n', '[{\'in\': \'4\\n4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\', \'out\': \'10\\n\\n15\\n\\n55\\n\\n3690\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数t，表示测试实例的组数。\r\n然后是t行，每组测试实例的第一个数 n，表示在同一行里接着下来有 n 个整数。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n每行输出数据之间有一个空行。\r\n', 1, 13, 'ymc', 1, '3\r\n4 1 2 3 4\r\n5 1 2 3 4 5\r\n3 1 2 3', '1');
INSERT INTO `problem` VALUES (336, '整数的立方和 ', '<p>给定一个正整数k（<strong>1&lt;k&lt;10</strong>），求1到k的立方和m。即m=1+2*2*2+&hellip;+k*k*k。</p>', '[{\'in\': \'5\\n\', \'out\': \'225\\n\'}, {\'in\': \'9\\n\', \'out\': \'2025\\n\'}, {\'in\': \'7\\n\', \'out\': \'784\\n\'}]', 1, 0, 0, '<p>输入只有一行，该行包含一个正整数k。</p>', '<p>输出只有一行，该行包含1到k的立方和。</p>', 1, 13, 'ymc', 3, '5\r\n', '2');
INSERT INTO `problem` VALUES (337, '求分数序列和 ', '有一个分数序列 2/1,3/2,5/3,8/5,13/8,21/13,.... 求这个分数序列的前n项之和。', '[{\'in\': \'30\\n\', \'out\': \'48.8406\\n\'}]', 1, 0, 0, '输入有一行：正整数n。', '输出有一行：分数序列的和（浮点数，精确到小数点后4位）。\r\n\r\n可以printf(\"%.4lf\\n\", a)输出浮点数并精确到小数点后4位。', 1, 13, 'ymc', 1, '5\r\n', '8');
INSERT INTO `problem` VALUES (338, '打印完数 ', '一个数如果恰好等于它的因子之和，这个数就成为“完数”。例如，6的因子为1、2、3，而6＝1＋2＋3，因此6是“完数”。编程序打印出1000之内（包括1000）所有的完数，并按如下格式输出其所有因子：\n\n6 its factors are 1 2 3 ', '[{\'in\': \'\', \'out\': \'6 its factors are 1 2 3 \\n28 its factors are 1 2 4 7 14 \\n496 its factors are 1 2 4 8 16 31 62 124 248 \\n\'}]', 1, 0, 0, '无输入', '输出1000以内所有的完数及其因子，每行一个完数，每个因子后面有一个空格。', 1, 13, 'ymc', 1, '无输入', '按');
INSERT INTO `problem` VALUES (339, 'A-B', '<p>给定两个浮点数，求两个浮点数的差。所有浮点数用double类型</p>', '[{\'in\': \'2.3 1.1\\n\', \'out\': \'1.20\\n\'}, {\'in\': \'100.99 99.09\\n\', \'out\': \'1.90\\n\'}]', 1, 0, 0, '<p>输入只有一行，只有两个浮点数a和b，中间有空格分开。</p>', '<p>在单独的一行中输出a-b,结果保留两位小数。</p>', 1, 13, 'ymc', 2, '2.3 1.1\r\n\r\n', '1');
INSERT INTO `problem` VALUES (340, '晶晶赴约会 ', '晶晶的朋友贝贝约晶晶下周一起去看展览，但晶晶每周的1、3、5有课必须上课，请帮晶晶判断她能否接受贝贝的邀请，如果能输出YES；如果不能则输出NO。', '[{\'in\': \'2\\n\', \'out\': \'YES\\n\'}, {\'in\': \'1\\n\', \'out\': \'NO\\n\'}, {\'in\': \'3\', \'out\': \'NO\\n\'}, {\'in\': \'4\\n\', \'out\': \'YES\\n\'}, {\'in\': \'5\\n\', \'out\': \'NO\\n\'}, {\'in\': \'6\\n\', \'out\': \'YES\\n\'}, {\'in\': \'7\\n\', \'out\': \'YES\\n\'}]', 1, 0, 0, '输入有一行，就是贝贝邀请晶晶去看展览的日期，用数字1到7表示从星期一到星期日。', '输出有一行，如果晶晶可以接受贝贝的邀请，输出YES；否则，输出NO。注意YES和NO都是大写字母！', 1, 13, 'ymc', 7, '2', 'Y');
INSERT INTO `problem` VALUES (341, '简单的四则运算', '编写一个程序，要求用户输入两个整数，输出这两个数的和、乘积、差和商。', '[{\'in\': \'5\\n24 3\\n1 1\\n100 101\\n10 -9\\n100 1014\\n\', \'out\': \'27 72 21 8\\n2 1 0 1\\n201 10100 -1 0\\n1 -90 19 -1\\n1114 101400 -914 0\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括用空格隔开的两个int类型整数。', '输出n行，每行四个整数，分别为相应两个输入数的和、乘积、差和商，用空格隔开。', 1, 13, 'ymc', 1, '2\n24 3\n1 1\n', '2');
INSERT INTO `problem` VALUES (342, '水仙花数', '春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的：\r\n“水仙花数”是指一个三位数，它的各位数字的立方和等于其本身，比如：153=1^3+5^3+3^3。\r\n现在要求输出所有在m和n范围内的水仙花数。', '[{\'in\': \'100 120\\n300 380\\n\', \'out\': \'no\\n370 371\\n\'}, {\'in\': \'100 999\\n\', \'out\': \'153 370 371 407\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，包括两个整数m和n（100<=m<=n<=999）。', '对于每个测试实例，要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于m,并且小于等于n，如果有多个，则要求从小到大排列在一行内输出，之间用一个空格隔开;\r\n如果给定的范围内不存在水仙花数，则输出no;\r\n每个测试实例的输出占一行。', 1, 13, 'ymc', 2, '100 120\r\n300 380\r\n', 'n');
INSERT INTO `problem` VALUES (343, '素数判定', '<p>对于表达式n^2+n+41，当n在[x,y]范围内时(-39&lt;=x&lt;=y&lt;=50)，判定该表达式的值是否 都为 素数。 说明：n为整数。</p>', '[{\'in\': \'0 1\\n0 0\\n\', \'out\': \'OK\\n\'}, {\'in\': \'30 40\\n30 35\\n35 37\\n37 39\\n39 40\\n40 42\\n40 41\\n41 50\\n41 42\\n42 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n\', \'out\': \'Sorry\\nOK\\nOK\\nOK\\nSorry\\nSorry\\nSorry\\nSorry\\nSorry\\nOK\\nOK\\nSorry\\nSorry\\nOK\\nOK\\nOK\\nSorry\\nSorry\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由两个整数x，y组成，当x=0,y=0时，该行不做处理。</p>', '<p>对于每个给定范围内的取值，如果表达式的值都为素数，则输出\"OK\",否则请输出&ldquo;Sorry&rdquo;,每组输出占一行。</p>', 1, 13, 'ymc', 2, '0 1\r\n0 0\r\n30 40', 'O');
INSERT INTO `problem` VALUES (344, '数列有序!', '有n(n<=100)个整数，已经按照从小到大顺序排列好了，现在另外给一个整数x，请将该数插入到序列中，并使新的序列仍然有序。', '[{\'in\': \'3 3\\n1 2 4\\n0 0\\n\', \'out\': \'1 2 3 4\\n\'}, {\'in\': \'4 6\\n1 3 9 10\\n4 2\\n3 5 7 9\\n6 3\\n1 2 3 4 5 6\\n0 0\\n\', \'out\': \'1 3 6 9 10\\n2 3 5 7 9\\n1 2 3 3 4 5 6\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每组数据由两行组成，第一行是n和m，第二行是已经有序的n个数的数列。n和m同时为0表示输入数据结束，本行不做处理。', '对于每个测试实例，输出插入新的元素后的数列，每个元素之间有一个空格。', 1, 13, 'ymc', 2, '3 3\r\n1 2 4\r\n0 0\r\n', '1');
INSERT INTO `problem` VALUES (345, '绝对值排序', '输入n(n<=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。', '[{\'in\': \'3 3 -4 2\\n4 0 1 2 -3\\n0\\n\', \'out\': \'-4 3 2\\n-3 2 1 0\\n\'}, {\'in\': \'5 -4 3 6 -7 2\\n4 -7 2 3 -4\\n4 -4 -2 -5 -8\\n0\\n\', \'out\': \'-7 6 -4 3 2\\n-7 -4 3 2\\n-8 -5 -4 -2\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n=0表示输入数据的结束，不做处理。 ', '对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。', 1, 13, 'ymc', 2, '3 3 -4 2\r\n4 0 1 2 -3\r\n0\r\n', '-');
INSERT INTO `problem` VALUES (346, '数据的交换输出', '输入n(n<100)个数，找出其中最小的数，将它与最前面的数交换后输出这些数。', '[{\'in\': \'4 2 1 3 4\\n5 5 4 3 2 1\\n0\\n\', \'out\': \'1 2 3 4\\n1 4 3 2 5\\n\'}, {\'in\': \'4 1 3 2 4\\n5 6 9 4 7 8\\n3 7 8 6\\n0\\n\', \'out\': \'1 3 2 4\\n4 9 6 7 8\\n6 8 7\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的开始是一个整数n，表示这个测试实例的数值的个数，跟着就是n个整数。n=0表示输入的结束，不做处理。', '对于每组输入数据，输出交换后的数列，每组输出占一行。每两个数之间一个空格。', 1, 13, 'ymc', 2, '4 2 1 3 4\r\n5 5 4 3 2 1\r\n0\r\n', '1');
INSERT INTO `problem` VALUES (347, '学生信息输入', '学生信息由学号，姓名，性别，语文成绩，数学成绩，英语成绩，平均分和总分构成。\r\n学号、姓名长度不超过20。\r\n现在给定一个学生学号、姓名、性别和三门课成绩，请输出该生的信息。\r\n设计一个结构体表示学生信息。\r\n分别设计两个函数，来处理学生信息的输入与输出。然后在主函数中调用。', '[{\'in\': \'09001 zhangsan M 78 72 67.1\\n\', \'out\': \'09001 zhangsan M 78.00 72.00 67.10 72.37 217.10\\n\'}, {\'in\': \'09002 zhanghong F 78 82 87.1\\n\', \'out\': \'09002 zhanghong F 78.00 82.00 87.10 82.37 247.10\\n\'}]', 1, 0, 0, '输入只有一行，表示学生信息，格式如下\r\n学号 姓名 性别 语文成绩 数学成绩 英语成绩\r\n中间用空格分开，三门课的成绩是浮点数。', '在一行中输出学生信息，格式如下\r\n学号 姓名 性别 语文成绩 数学成绩 英语成绩 平均成绩 总成绩\r\n中间用空格分开，所有成绩保留2位小数。', 1, 13, 'ymc', 2, '09001 zhangsan M 78 72 67.1\r\n', '0');
INSERT INTO `problem` VALUES (348, '数的计数', '要求找出具有下列性质的数的个数 (包含输入的自然数 n)：\r\n先输入一个自然数 n(n<=300),然后对此自然数按照如下方法进行处理 :\r\n①. 不作任何处理 ;\r\n②. 在它的左边加上一个自然数 ,但该自然数不能超过原数的一半 ;\r\n③. 加上数后 ,继续按此规则进行处理 ,直到不能再加自然数为止 .\r\n例如 :  n = 6\r\n满足条件的数为\r\n6\r\n16\r\n26\r\n126\r\n36\r\n136\r\n则个数为 6 ', '[{\'in\': \'11\\n1\\n2\\n6\\n10\\n20\\n30\\n50\\n100\\n200\\n250\\n300\\n\', \'out\': \'1\\n2\\n6\\n14\\n60\\n166\\n786\\n9828\\n205658\\n613646\\n1564308\\n\'}]', 1, 0, 0, '第一行为1个正整数t，表示有t组数据，以下t行每行有1个正整数n。', '对于每个n，输出1个整数，即具有上述性质的数的个数。', 1, 13, 'ymc', 1, '2\r\n6\r\n10\r\n', '6');
INSERT INTO `problem` VALUES (349, '三位数分解', '给定一个正的三位整数，请求出该整数的百位，十位和各位。之间用一个空格分开。', '[{\'in\': \'5\\n100\\n120\\n135\\n456\\n789\\n\', \'out\': \'1 0 0\\n1 2 0\\n1 3 5\\n4 5 6\\n7 8 9\\n\'}]', 1, 0, 0, '本题有多组测试数据。\r\n先给定一个整数n，表示后面有n行，接下来n行每行一个3位的整数。', '输出有多行，每组测试数据一行。\r\n每行输出对应的三位数的百位，十位和各位，用一个空格分开，注意，个位数字后面没有空格。', 1, 13, 'ymc', 1, '2\r\n100\r\n120\r\n', '1');
INSERT INTO `problem` VALUES (350, '求幂', '输入任意实数x和正整数n，计算x的n次幂。', '[{\'in\': \'2 3\\n\', \'out\': \'8.000\\n\'}, {\'in\': \'3.4 8\\n\', \'out\': \'17857.939\\n\'}]', 1, 0, 0, '输入只有一行，该行中包含x与n，中间用空格分开。', '在单独一行中输出x^n的值。结果保留3位小数。', 1, 13, 'ymc', 2, '2 3\r\n', '8');
INSERT INTO `problem` VALUES (351, '实验七 最小值', '<p>输入n个数(n小于100)，输出这n个数中的最小值及其下标。 要求定义和调用函数，寻找n个数中的最小值及其下标，在函数中使用指针、数组。</p>', '[{\'in\': \'5\\n3 2 1 4 5\\n\', \'out\': \'1 2\\n\'}, {\'in\': \'10\\n9 8 7 6 5 4 3 2 1 8\\n\', \'out\': \'1 8\\n\'}]', 1, 0, 0, '<p>输入有两行，第一行是一个整数n，表示有多少个整数。第二行有n个整数，中间用空格分开。</p>', '<p>在单独的一行中输出两个数min和k，min表示最小值，k表示其在数组中的下标。中间用一个空格分开。</p>', 1, 13, 'ymc', 2, '5\r\n3 2 1 4 5\r\n', '1');
INSERT INTO `problem` VALUES (352, '正方形', '给定一个字符，请输出一个由该字符构成的边长为4的正方形。\r\n', '[{\'in\': \'*\\n\', \'out\': \'****\\n*  *\\n*  *\\n****\\n\'}, {\'in\': \'$\\n\', \'out\': \'$$$$\\n$  $\\n$  $\\n$$$$\\n\'}]', 1, 0, 0, '输入只有一行，该行只有一个字符。\r\n', '输出一个边长为4的正方形，正方形的四条边均由输入的字符构成，正方形的内部由空格构成。\r\n', 1, 13, 'ymc', 2, '*\r\n', '*');
INSERT INTO `problem` VALUES (353, '奇偶和', '给定n个正整数，求这些整数中奇数的和与偶数的和。\r\n', '[{\'in\': \'5\\n4\\n1 2 3 4\\n6\\n1 6 3 4 7 9\\n10\\n1 2 3 4 5 6 7 8 9 10\\n20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n40\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\', \'out\': \'4 6\\n20 10\\n25 30\\n100 110\\n200 220\\n\'}]', 1, 0, 0, '有多组测试数据。\r\n第一行是一个整数T，表示有T组测试数据。\r\n每个测试数据有有2行。\r\n第一行是一个正整数n。\r\n第二行有n个由空格分开的正整数。\r\n', '输出有T行，每行两个整数，整数之间由一个空格分开。这两个整数分表表示对应测试数据块的奇数和与偶数和。\r\n', 1, 13, 'ymc', 1, '2\r\n4\r\n1 2 3 4\r\n6\r\n1 6 3 4 7 9\r\n', '4');
INSERT INTO `problem` VALUES (354, '加密', '给定一行由文本，把这行文本加密后输出。\r\n这里的加密算法非常简单：小写字母a,b,c,...,z转化为1,2,3,...,26后输出。大写字母A,B,C,...,Z转化为27,28,29,...,52后输出，其它所有的字符保持不变。\r\n', '[{\'in\': \'Hello,\\nWelcome to c!\\nThis is only a text case,\\nAnd Only A test,Please Take Easy!^_^...\\n\', \'out\': \'345121215,\\n49512315135 2015 3!\\n468919 919 15141225 1 2052420 31195,\\n27144 41141225 27 2051920,421251195 461115 3111925!^_^...\\n\'}]', 1, 0, 0, '输入有若干行，处理到文件结尾。\r\n', '把输入的文本加密后输出。\r\n', 1, 13, 'ymc', 1, 'Hello,\r\nWelcome to c!\r\n', '3');
INSERT INTO `problem` VALUES (355, '\n直角三角形\r\n', '\n本题要求用函数完成！！\r\n三条边的边长均为整数的直角三角形称为整数直角三角形。\r\n给定一个整数n，求斜边的边长不超过n的所有整数直角三角形的个数。\r\n', '[{\'in\': \'10\\n5\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n\', \'out\': \'case#1\\n1\\ncase#2\\n2\\ncase#3\\n6\\ncase#4\\n11\\ncase#5\\n16\\ncase#6\\n20\\ncase#7\\n26\\ncase#8\\n33\\ncase#9\\n39\\ncase#10\\n47\\n\'}]', 1, 0, 0, '\n输入有多行。\r\n第一行是一个整数T，表示有T个测试数据。\r\n接下来的T行，每行有一个正整数n。\r\n', '\n每个测试数据的输出有两行，第一行先输出测试数据的编号，格式如case#i,其中i为测试数据编号。\r\n第二行是一个整数，表示对应的整数直角三角形的个数。\r\n', 1, 13, 'ymc', 1, '\n4\r\n5\r\n10\r\n20\r\n30\r\n', '\n');
INSERT INTO `problem` VALUES (356, '\n自由落体\r\n', '\n一个球从高为x的空中落下，每次落地后反跳回原高度的一半再落下。求它在第n次落地时总共经过的距离。\r\n', '[{\'in\': \'100 10\\n\', \'out\': \'299.609375\\n\'}, {\'in\': \'1000 13\\n\', \'out\': \'2999.511719\\n\'}, {\'in\': \'1024 15\\n\', \'out\': \'3071.875000\\n\'}]', 1, 0, 0, '\n测试数据只有一行，该行由两个数组成。第一个数是实数，表示球初始的高度，第二个是正整数n。\r\n', '\n在单独的一行中输出球第n次落地是经过的总距离，结果保留6位小数。\r\n', 1, 13, 'ymc', 3, '\n100 10\r\n', '\n');
INSERT INTO `problem` VALUES (357, '求平面上两点间的距离', '<p>给定两个点，求这两个点之间的距离。 坐标采用double类型。</p>', '[{\'in\': \'10.2 50.3 11 13.9\\n\', \'out\': \'36.41\\n\'}, {\'in\': \'14.7 17.1 17.0 27.2\\n\', \'out\': \'10.36\\n\'}]', 1, 0, 0, '<p>输入一行，代表两个点，每个点由两个浮点数x和y组成。</p>', '<p>输出一行，它是两点之间的距离。 结果保留两位小数。</p>', 1, 13, 'ymc', 2, '34.0 23.0 28.1 21.6\r\n', '6');
INSERT INTO `problem` VALUES (358, '过河卒', '<p>如图，A 点有一个过河卒，需要走到目标 B 点。卒行走规则：可以向下、或者向右。同时在棋盘上的任一点有一个对方的马（如图中的C点），该马所在的点和所有跳跃一步可达的点称为对方马的控制点。例如图中 C 点上的马可以控制 9 个点（图中的P1，P2 &hellip; P8 和 C）。卒不能通过对方马的控制点。</p>\r\n<p><img src=\"/images/media/uploads/images/2015_4_22_17_50_51.PNG\" alt=\"\" width=\"300\" height=\"170\" /></p>\r\n<p>棋盘用坐标表示，A 点（0，0）、B 点（n,m）(n,m 为不超过20的整数，并由键盘输入)，同样马的位置坐标是需要给出的（约定: C<span>&ne;</span>A，同时C<span>&ne;</span>B）。现在要求你计算出卒从 A 点能够到达 B 点的路径的条数。</p>', '[{\'in\': \'8 6 0 4\\n\', \'out\': \'1617\\n\'}, {\'in\': \'10 10 4 4\\n\', \'out\': \'6802\\n\'}, {\'in\': \'20 20 4 0\\n\', \'out\': \'56477364570\\n\'}, {\'in\': \'19 19 1 0\\n\', \'out\': \'2203961430\\n\'}, {\'in\': \'14 16 7 5\\n\', \'out\': \'39217645\\n\'}]', 1, 0, 0, '<p>输入只有一行，该行有四个整数，一次表示B点的坐标(n,m)以及对方马的位置(X,Y)。</p>', '<p>在单独的一行中输出一个整数，即卒从A点走到B点的方法数。</p>', 1, 13, 'ymc', 5, '6 6 3 2\r\n', '1');
INSERT INTO `problem` VALUES (359, '三次方求和', '<p>小鱼儿要过8岁生日啦！今年，她特别想要一份与众不同的礼物，那就是一条能在阳光下发出五光十色耀眼光芒的水晶项链。她把这个想法告诉了妈妈。妈妈对小鱼儿神秘的一笑，透露道：&ldquo;邻居张阿姨家有个后花园。她的花园里有很多漂亮的水晶珠。可是张阿姨从来不会轻易让人进入她的后花园，你必须回答出她提出的问题，才可以进去采集水晶珠&hellip;&hellip;&rdquo;还没等妈妈说完，小鱼儿已经迫不及待的飞奔而去。她来到张阿姨家，说明了来意，张阿姨乐呵呵的说：&ldquo;小鱼儿，如果你能回答出我的问题，我可以让你进入我的水晶花园。我的问题很简单，给你一个三位数，你要对这个三位数的各位数字的3次方求和，然后再对求出的和中各位数字的3次方求和，如此一直继续下去，判断最后能否得到一个不再变化的固定值。如能得到一个固定值，就告诉我这个固定值；如果不能，则告诉我提示信息&ldquo;error&rdquo;。注意了，在求解过程中，若某一次求和得到的值超过3位数，则取该数的低三位继续往下运算&hellip;&hellip;</p>\r\n<p>例如：对于三位数111，则第一次计算应该是1&times;1&times;1 + 1&times;1&times;1 + 1&times;1&times;1=3。第二次应是0&times;0&times;0 + 0&times;0&times;0 + 3&times;3&times;3=27。第三次应是0&times;0&times;0 + 2&times;2&times;2 + 7&times;7&times;7=351。第四次应是3&times;3&times;3 + 5&times;5&times;5 + 1&times;1&times;1=153。第五次应是1&times;1&times;1 + 5&times;5&times;5 + 3&times;3&times;3=153，与第四次结果重合，不再计算，输出固定值153。&ldquo;请你写一个程序帮助小鱼儿进入张阿姨的水晶花园吧。</p>', '[{\'in\': \'562\', \'out\': \'error\\n\'}, {\'in\': \'549\\n\', \'out\': \'371\\n\'}, {\'in\': \'720\\n\', \'out\': \'153\\n\'}, {\'in\': \'112\\n\', \'out\': \'1\\n\'}, {\'in\': \'109\\n\', \'out\': \'370\\n\'}]', 1, 0, 0, '<p><span style=\"font-size: 10px;\">输入只有一个正整数n</span><strong style=\"font-size: 10px;\">（100&lt;=n&lt;=999)</strong><span style=\"font-size: 10px;\">。</span></p>', '<p>如果能得到一个固定值，则在单独的一行中输出这个固定值，否则请在单独的一行中输出\"error\"<strong>(输出不包括两边的引号）</strong>。</p>', 1, 13, 'ymc', 5, '111\r\n', '1');
INSERT INTO `problem` VALUES (360, '字符串合并', '<p>给定两个仅有英文字母构成的字符串s和t，把这两个字符串合并后排序。排序规则如下</p>\r\n<p>1）不区分大小写按26个字母的字典顺序排序，即a和A在最前，其次是b和B，...，最后是z和Z</p>\r\n<p>2）小写字母在大写字母的前面。</p>\r\n<p>例如HELLO和hello合并并排序后的字符串为</p>\r\n<p>eEhHllLLoO</p>', '[{\'in\': \'HELLOworldTEST\\nhelloWORLDtest\\n\', \'out\': \'dDeeEEhHlllLLLooOOrRsSttTTwW\\n\'}, {\'in\': \'thisISTESTANDONLYATEstoKWORld\\nTHISiStestandonlyateSTOkworldwradWZZZZzzzzaaaAAAAaaa\\n\', \'out\': \'aaaaaaaaaAAAAAAddddDeeEEhHiiIIkKlllLnnNNoooOOOrrRsssSSSSStttttTTTTTwwWWyYzzzzZZZZ\\n\'}]', 1, 0, 0, '<p>输入为两行，每行都是有大小写英文字母构成的字符串。每个字符创的长度不超过100。</p>', '<p>在单独的一行中输出合并排序后的字符串。</p>', 1, 13, 'ymc', 2, 'HELLO\r\nhello\r\n', 'e');
INSERT INTO `problem` VALUES (361, '扑克牌翻转', '<p>有n张朴克牌，使它们全部正面朝上。</p>\r\n<p>从第2张牌开始，把凡是2的倍数位置上的牌翻成正面朝下；</p>\r\n<p>接着从第3张牌开始，把凡是3的倍数位置上的牌正面朝上的翻成正面朝下，正面朝下的翻成正面朝上；</p>\r\n<p>接着从第4张牌开始，把凡是4的倍数位置上的牌按此规律翻转；</p>\r\n<p>依此类推，直到第n张为止（同样也要翻转）。</p>\r\n<p>统计最后有几张牌正面朝上，并打印出它们的位置。</p>', '[{\'in\': \'52\', \'out\': \'7\\n1 4 9 16 25 36 49 \\n\'}, {\'in\': \'950\', \'out\': \'30\\n1 4 9 16 25 36 49 64 81 100 121 144 169 196 225 256 289 324 361 400 441 484 529 576 625 676 729 784 841 900 \\n\'}]', 1, 0, 0, '<p>输入只有一个正整数n(n&lt;1000)</p>', '<p>第一行输出总共有多少张牌是朝上的。</p>\r\n<p>第二行按从小到大的顺序输出朝上的牌的位置，每个数后面有一个空格。</p>', 1, 13, 'ymc', 2, '10\r\n', '3');
INSERT INTO `problem` VALUES (362, '阿牛的EOF牛肉串', '<p>今年的ACM暑期集训队一共有18人，分为6支队伍。其中有一个叫做EOF的队伍，由04级的阿牛、XC以及05级的COY组成。在共同的集训生活中，大家建立了深厚的友谊，阿牛准备做点什么来纪念这段激情燃烧的岁月，想了一想，阿牛从家里拿来了一块上等的牛肉干，准备在上面刻下一个长度为n的只由\"E\" \"O\" \"F\"三种字符组成的字符串（可以只有其中一种或两种字符，但绝对不能有其他字符）,阿牛同时禁止在串中出现O相邻的情况，他认为，\"OO\"看起来就像发怒的眼睛，效果不好。 你，NEW ACMer,EOF的崇拜者，能帮阿牛算一下一共有多少种满足要求的不同的字符串吗？</p>', '[{\'in\': \'1\\n2\\n\', \'out\': \'3\\n8\\n\'}, {\'in\': \'8\\n10\\n18\\n\', \'out\': \'3344\\n24960\\n77473792\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例,每个测试实例占一行,由一个整数n组成，</p>\r\n<p>(0&lt;n&lt;40)。</p>', '<p>对于每个测试实例，请输出全部的满足要求的涂法，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '1\r\n2\r\n', '3');
INSERT INTO `problem` VALUES (363, '简易版之最短距离', '寒假的时候，ACBOY要去拜访很多朋友，恰巧他所有朋友的家都处在坐标平面的X轴上。ACBOY可以任意选择一个朋友的家开始访问，但是每次访问后他都必须回到出发点，然后才能去访问下一个朋友。\n比如有4个朋友，对应的X轴坐标分别为1， 2， 3， 4。当ACBOY选择坐标为2的点做为出发点时，则他最终需要的时间为 |1-2|+|2-2|+|3-2|+|4-2| = 4。\n现在给出Ｎ个朋友的坐标，那么ACBOY应该怎么走才会花费时间最少呢？', '[{\'in\': \'2\\n2 \\n2 4 \\n3 \\n2 4 6\\n\', \'out\': \'2\\n4\\n\'}, {\'in\': \'2\\n3\\n3 6 9\\n3\\n5 6 18\\n\', \'out\': \'6\\n13\\n\'}]', 1, 0, 0, '输入首先是一个正整数M，表示M个测试实例。每个实例的输入有2行，首先是一个正整数N（N <= 500)，表示有N个朋友，下一行是N个正整数，表示具体的坐标(所有数据均<=10000).', '对于每一个测试实例，请输出访问完所有朋友所花的最少时间，每个实例的输出占一行。', 1, 13, 'ymc', 2, '2\n2 \n2 4 \n3 \n2 4 6\n', '2');
INSERT INTO `problem` VALUES (364, '数塔', '在讲述DP算法的时候，一个经典的例子就是数塔问题，它是这样描述的：\r\n\r\n有如下所示的数塔，要求从顶层走到底层，若每一步只能走到相邻的结点，则经过的结点的数字之和最大是多少？\r\n已经告诉你了，这是个DP的题目，你能AC吗?\r\n\r\n\r\n注意：从顶层垂直向下走，或者向右下方走。', '[{\'in\': \'2\\n5\\n7\\n3 8\\n8 1 0 \\n2 7 4 4\\n4 5 2 6 5\\n2\\n1\\n1 2\\n\\n\', \'out\': \'30\\n3\\n\'}, {\'in\': \'3\\n5\\n1\\n6 5\\n78 58 96\\n4 5 8 7\\n51 97 24 67 45\\n6\\n4\\n6 4\\n9 87 7\\n75 96 43 12\\n1 5 63 14 52\\n9 87 54 56 12 12\\n3\\n45\\n89 75\\n12 35 45\\n169\\n\', \'out\': \'187\\n312\\n169\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数C,表示测试实例的个数，每个测试实例的第一行是一个整数N(1 <= N <= 100)，表示数塔的高度，接下来用N行数字表示数塔，其中第i行有个i个整数，且所有的整数均在区间[0,99]内。', '对于每个测试实例，输出可能得到的最大和，每个实例的输出占一行。', 1, 13, 'ymc', 2, '1\r\n5\r\n7\r\n3 8\r\n8 1 0 \r\n2 7 4 4\r\n4 5 2 6 5\r\n', '3');
INSERT INTO `problem` VALUES (365, '剪花布条', '一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？\n', '[{\'in\': \'abcde a3\\naaaaaa  aa\\n#\\n\', \'out\': \'0\\n3\\n\'}, {\'in\': \'agshd ag\\nagshdihagjsdjk ag\\naaaaaaa aaa\\n#\\n\', \'out\': \'1\\n2\\n2\\n\'}]', 1, 0, 0, '输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。', '输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。', 1, 13, 'ymc', 2, 'abcde a3\naaaaaa  aa\n#\n', '0');
INSERT INTO `problem` VALUES (366, '算菜价', '妈妈每天都要出去买菜，但是回来后，兜里的钱也懒得数一数，到底花了多少钱真是一笔糊涂帐。现在好了，作为好儿子（女儿）的你可以给她用程序算一下了，呵呵。\n', '[{\'in\': \'青菜 1  2\\n罗卜 2  1.5\\n鸡腿 2  4.2\\n\', \'out\': \'13.4\\n\'}, {\'in\': \'百次 2 12.3\\n汇集 3 12.3\\n李涛 3 39.2\\n河彬 4 45.3\\n新红 5 23.2\\n五大 6 1.0\\n\', \'out\': \'482.3\\n\'}, {\'in\': \'哈哈 2 34.2\\n问问 4 20.3\\n秘密 5 11.1\\n孝泼 6 34.3\\n财老板 5 12.4\\n教主 6 12.3\\n\', \'out\': \'546.7\\n\'}]', 1, 0, 0, '输入含有一些数据组，每组数据包括菜种（字串），数量（计量单位不论，一律为double型数）和单价（double型数，表示人民币元数），因此，每组数据的菜价就是数量乘上单价啊。菜种、数量和单价之间都有空格隔开的。\n', '支付菜价的时候，由于最小支付单位是角，所以总是在支付的时候采用四舍五入的方法把分头去掉。最后，请输出一个精度为角的菜价总量。所有组的菜和在一起付钱。', 1, 13, 'ymc', 3, '青菜 1  2\n罗卜 2  1.5\n鸡腿 2  4.2\n', '1');
INSERT INTO `problem` VALUES (367, '产生冠军', '有一群人，打乒乓球比赛，两两捉对撕杀，每两个人之间最多打一场比赛。\n球赛的规则如下：\n如果A打败了B，B又打败了C，而A与C之间没有进行过比赛，那么就认定，A一定能打败C。\n如果A打败了B，B又打败了C，而且，C又打败了A，那么A、B、C三者都不可能成为冠军。\n根据这个规则，无需循环较量，或许就能确定冠军。你的任务就是面对一群比赛选手，在经过了若干场撕杀之后，确定是否已经实际上产生了冠军。\n', '[{\'in\': \'3\\nAlice Bob\\nSmith John\\nAlice Smith\\n5\\na c\\nc d\\nd e\\nb e\\na d\\n0\\n\', \'out\': \'Yes\\nNo\\n\'}, {\'in\': \'5\\na b\\nc d\\nd a\\nb d\\nb c\\n5\\nyanghebing wumingquan\\nlouxinghong litao\\nlouxinghong wumingquan\\nlitao yanghebing\\nlouxinghong yanghebing\\n0\\n\', \'out\': \'No\\nYes\\n\'}]', 1, 0, 0, '输入含有一些选手群，每群选手都以一个整数n(n<1000)开头，后跟n对选手的比赛结果，比赛结果以一对选手名字（中间隔一空格）表示，前者战胜后者。如果n为0，则表示输入结束。', '对于每个选手群，若你判断出产生了冠军，则在一行中输出“Yes”，否则在一行中输出“No”。', 1, 13, 'ymc', 2, '3\nAlice Bob\nSmith John\nAlice Smith\n5\na c\nc d\nd e\nb e\na d\n0\n', 'Y');
INSERT INTO `problem` VALUES (368, '汉诺塔IV', '还记得汉诺塔III吗？他的规则是这样的：不允许直接从最左(右)边移到最右(左)边(每次移动一定是移到中间杆或从中间移出)，也不允许大盘放到小盘的上面。xhd在想如果我们允许最大的盘子放到最上面会怎么样呢？（只允许最大的放在最上面）当然最后需要的结果是盘子从小到大排在最右边。', '[{\'in\': \'2\\n1\\n10\\n\', \'out\': \'2\\n19684\\n\'}, {\'in\': \'5\\n20\\n18\\n16\\n14\\n7\\n\', \'out\': \'1162261468\\n129140164\\n14348908\\n1594324\\n730\\n\'}]', 1, 0, 0, '输入数据的第一行是一个数据T，表示有T组数据。\n每组数据有一个正整数n(1 <= n <= 20)，表示有n个盘子。', '对于每组输入数据，最少需要的摆放次数。', 1, 13, 'ymc', 2, '2\n1\n10\n', '2');
INSERT INTO `problem` VALUES (369, '夹角有多大', '时间过的好快，一个学期就这么的过去了，xhd在傻傻的看着表，出于对数据的渴望，突然他想知道这个表的时针和分针的夹角是多少。现在xhd知道的只有时间，请你帮他算出这个夹角。\n\n注：夹角的范围[0，180]，时针和分针的转动是连续而不是离散的。', '[{\'in\': \'2\\n8 3 17\\n5 13 30\\n\', \'out\': \'138\\n75\\n\'}, {\'in\': \'3\\n4 48 59\\n11 59 3\\n3 45 55\\n\', \'out\': \'149\\n5\\n162\\n\'}]', 1, 0, 0, '输入数据的第一行是一个数据T，表示有T组数据。\n每组数据有三个整数h(0 <= h < 24)，m(0 <= m < 60)，s(0 <= s < 60)分别表示时、分、秒。', '对于每组输入数据，输出夹角的大小的整数部分。', 1, 13, 'ymc', 2, '2\n8 3 17\n5 13 30\n', '1');
INSERT INTO `problem` VALUES (370, '神、上帝以及老天爷', '<p>ACM contest的颁奖晚会隆重开始了！ 为了活跃气氛，组织者举行了一个别开生面、奖品丰厚的抽奖活动，这个活动的具体要求是这样的： 首先，所有参加晚会的人员都将一张写有自己名字的字条放入抽奖箱中； 然后，待所有字条加入完毕，每人从箱中取一个字条； 最后，如果取得的字条上写的就是自己的名字，那么&ldquo;恭喜你，中奖了！&rdquo; 大家可以想象一下当时的气氛之热烈，毕竟中奖者的奖品是大家梦寐以求的Twins签名照呀！不过，正如所有试图设计的喜剧往往以悲剧结尾，这次抽奖活动最后竟然没有一个人中奖！ 我的神、上帝以及老天爷呀，怎么会这样呢？ 不过，先不要激动，现在问题来了，你能计算一下发生这种情况的概率吗？ 不会算？难道你也想以悲剧结尾？！</p>', '[{\'in\': \'1\\n2\\n\', \'out\': \'50.00%\\n\'}, {\'in\': \'3\\n4\\n6\\n8\\n\', \'out\': \'37.50%\\n36.81%\\n36.79%\\n\'}, {\'in\': \'3\\n4\\n6\\n8\\n\', \'out\': \'37.50%\\n36.81%\\n36.79%\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数C,表示测试实例的个数，然后是C 行数据，每行包含一个整数n</p>\r\n<p>(1&lt;n&lt;=20),表示参加抽奖的人数。</p>', '<p>对于每个测试实例，请输出发生这种情况的百分比，每个实例的输出占一行, 结果保留两位小数(四舍五入)，具体格式请参照sample output。</p>', 1, 13, 'ymc', 3, '1\r\n2\r\n', '5');
INSERT INTO `problem` VALUES (371, '考新郎', '<p>国庆期间,省城HZ刚刚举行了一场盛大的集体婚礼,为了使婚礼进行的丰富一些,司仪临时想出了有一个有意思的节目,叫做\"考新郎\",具体的操作如图: 首先,给每位新娘打扮得几乎一模一样,并盖上大大的红盖头随机坐成一排; 然后,让各位新郎寻找自己的新娘.每人只准找一个,并且不允许多人找一个. 最后,揭开盖头,如果找错了对象就要当众跪搓衣板... 看来做新郎也不是容易的事情... 假设一共有N对新婚夫妇,其中有M个新郎找错了新娘,求发生这种情况一共有多少种可能.</p>', '[{\'in\': \'2\\n2 2\\n3 2\\n\', \'out\': \'1\\n3\\n\'}, {\'in\': \'2\\n6 4\\n10 8\\n\', \'out\': \'135\\n667485\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数C, 表示测试实例的个数，然后是C行数据，每行包含两个整数N和M。 N、M大于1而且小于等20， 并且N大于等于M。（1&lt;M&lt;=N&lt;=20）</p>', '<p>对于每个测试实例，请输出一共有多少种发生这种情况的可能，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n2 2\r\n3 2\r\n', '1');
INSERT INTO `problem` VALUES (372, '折线分割平面', '<p>我们看到过很多直线分割平面的题目，今天的这个题目稍微有些变化，我们要求的是n条折线分割平面的最大数目。比如，一条折线可以将平面分成两部分，两条折线最多可以将平面分成7部分，具体如下所示。</p>', '[{\'in\': \'2\\n1\\n2\\n\', \'out\': \'2\\n7\\n\'}, {\'in\': \'3\\n6\\n7\\n19\\n\', \'out\': \'67\\n92\\n704\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数C,表示测试实例的个数，然后是C 行数据，每行包含一个整数n</p>\r\n<p>(0&lt;n&lt;=100),表示折线的数量。</p>', '<p>对于每个测试实例，请输出平面的最大分割数，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n1\r\n2\r\n', '2');
INSERT INTO `problem` VALUES (373, 'A + B Again', 'There must be many A + B problems in our OJ , now a new one is coming.\r\nGive you two hexadecimal integers , your task is to calculate the sum of them,and print it in hexadecimal too.\r\nEasy ? AC it !', '[{\'in\': \'+A -A\\n+1A 12\\n1A -9\\n-1A -12\\n1A -AA\\n\', \'out\': \'0\\n2C\\n11\\n-2C\\n-90\\n\'}, {\'in\': \'-21 -B\\n+C +B\\n-C 8\\n+A -A\\n\', \'out\': \'-2C\\n17\\n-4\\n0\\n\'}]', 1, 0, 0, 'The input contains several test cases, please process to the end of the file.\r\nEach case consists of two hexadecimal integers A and B in a line seperated by a blank.\r\nThe length of A and B is less than 15.', 'For each test case,print the sum of A and B in hexadecimal in one line.', 1, 13, 'ymc', 2, '+A -A\r\n+1A 12\r\n1A -9\r\n-1A -12\r\n1A -AA\r\n', '0');
INSERT INTO `problem` VALUES (374, '汉诺塔III', '约19世纪末，在欧州的商店中出售一种智力玩具，在一块铜板上有三根杆，最左边的杆上自上而下、由小到大顺序串着由64个圆盘构成的塔。目的是将最左边杆上的盘全部移到右边的杆上，条件是一次只能移动一个盘，且不允许大盘放在小盘的上面。\r\n现在我们改变游戏的玩法，不允许直接从最左(右)边移到最右(左)边(每次移动一定是移到中间杆或从中间移出)，也不允许大盘放到下盘的上面。\r\nDaisy已经做过原来的汉诺塔问题和汉诺塔II，但碰到这个问题时，她想了很久都不能解决，现在请你帮助她。现在有N个圆盘，她至少多少次移动才能把这些圆盘从最左边移到最右边？\r\n', '[{\'in\': \'1\\n3\\n12\\n\', \'out\': \'2\\n26\\n531440\\n\'}, {\'in\': \'19\\n18\\n17\\n16\\n15\\n14\\n13\\n7\\n\', \'out\': \'1162261466\\n387420488\\n129140162\\n43046720\\n14348906\\n4782968\\n1594322\\n2186\\n\'}]', 1, 0, 0, '包含多组数据，每次输入一个N值(1<=N=19)。', '对于每组数据，输出移动最小的次数。', 1, 13, 'ymc', 2, '1\r\n3\r\n12\r\n', '2');
INSERT INTO `problem` VALUES (375, '小兔的棋盘', '小兔的叔叔从外面旅游回来给她带来了一个礼物，小兔高兴地跑回自己的房间，拆开一看是一个棋盘，小兔有所失望。不过没过几天发现了棋盘的好玩之处。从起点(0，0)走到终点(n,n)的最短路径数是C(2n,n),现在小兔又想如果不穿越对角线(但可接触对角线上的格点)，这样的路径数有多少?小兔想了很长时间都没想出来，现在想请你帮助小兔解决这个问题，对于你来说应该不难吧!\r\n ', '[{\'in\': \'1\\n3\\n12\\n-1\\n\', \'out\': \'2\\n10\\n416024\\n\'}, {\'in\': \'18\\n17\\n16\\n15\\n8\\n6\\n-1\\n\', \'out\': \'955277400\\n259289580\\n70715340\\n19389690\\n2860\\n264\\n\'}]', 1, 0, 0, '每次输入一个数n(1<=n<=18)，当n等于－1时结束输入。', '每个测试数据输出一行，每行只有一个整数，该整数为小兔从从起点(0，0)走到终点(n,n)不穿越对角线(但可接触对角线上的格点)的最短路径数。', 1, 13, 'ymc', 2, '1\r\n3\r\n12\r\n-1\r\n', '2');
INSERT INTO `problem` VALUES (376, 'Coin Change', 'Suppose there are 5 types of coins: 50-cent, 25-cent, 10-cent, 5-cent, and 1-cent. We want to make changes with these coins for a given amount of money.\n\nFor example, if we have 11 cents, then we can make changes with one 10-cent coin and one 1-cent coin, or two 5-cent coins and one 1-cent coin, or one 5-cent coin and six 1-cent coins, or eleven 1-cent coins. So there are four ways of making changes for 11 cents with the above coins. Note that we count that there is one way of making change for zero cent.\n\nWrite a program to find the total number of different ways of making changes for any amount of money in cents. Your program should be able to handle up to 100 cents.', '[{\'in\': \'11\\n26\\n\', \'out\': \'4\\n13\\n\'}, {\'in\': \'250\\n192\\n92\\n\', \'out\': \'3830\\n1766\\n218\\n\'}]', 1, 0, 0, 'The input file contains any number of lines, each one consisting of a number ( ≤250 ) for the amount of money in cents.', 'For each input line, output a line containing the number of different ways of making changes with the above 5 types of coins.', 1, 13, 'ymc', 2, '11\n26\n', '4');
INSERT INTO `problem` VALUES (377, '无限的路', '甜甜从小就喜欢画图画，最近他买了一支智能画笔，由于刚刚接触，所以甜甜只会用它来画直线，于是他就在平面直角坐标系中画出如下的图形。甜甜的好朋友蜜蜜发现上面的图还是有点规则的，于是他问甜甜：在你画的图中，我给你两个点，请你算一算连接两点的折线长度（即沿折线走的路线长度）吧。\n', '[{\'in\': \'5\\n0 0 0 1\\n0 0 1 0\\n2 3 3 1\\n99 99 9 9\\n5 5 5 5\\n\', \'out\': \'1.000\\n2.414\\n10.646\\n54985.047\\n0.000\\n\'}, {\'in\': \'5\\n3 4 1 2\\n3 99 99 3 \\n5 8 97 45\\n12 54 67 34\\n34 13 78 94\\n\', \'out\': \'56.717\\n135.765\\n28316.514\\n8319.186\\n38688.163\\n\'}]', 1, 0, 0, '第一个数是正整数N（≤100）。代表数据的组数。\n每组数据由四个非负整数组成x1，y1，x2，y2；所有的数都不会大于100。', '对于每组数据，输出两点(x1,y1),(x2,y2)之间的折线距离。注意输出结果精确到小数点后3位。', 1, 13, 'ymc', 2, '5\n0 0 0 1\n0 0 1 0\n2 3 3 1\n99 99 9 9\n5 5 5 5\n', '1');
INSERT INTO `problem` VALUES (378, '整除的尾数', '<p>一个整数，只知道前几位，不知道末二位，被另一个整数除尽了，那么该数的末二位该是什么呢？</p>', '[{\'in\': \'200 40\\n1992 95\\n0 0\\n\', \'out\': \'00 40 80\\n15\\n\'}, {\'in\': \'562 35\\n761 12\\n76 12\\n456 56\\n7864 11\\n45 98\\n7854 14\\n0 0\\n\', \'out\': \'10 45 80\\n04 16 28 40 52 64 76 88\\n08 20 32 44 56 68 80 92\\n40 96\\n01 12 23 34 45 56 67 78 89\\n08\\n00 14 28 42 56 70 84 98\\n\'}]', 1, 0, 0, '<p>输入数据有若干组，每组数据包含二个整数a，b（<strong>0&lt;a&lt;10000, 10&lt;b&lt;100</strong>），若遇到0 0则处理结束。</p>', '<p>对应每组数据，将满足条件的所有尾数在一行内输出，格式见样本输出。同组数据的输出，其每个尾数之间空一格，行末没有空格。</p>', 1, 13, 'ymc', 2, '200 40\r\n1992 95\r\n0 0\r\n', '0');
INSERT INTO `problem` VALUES (379, '零幺串', '我们称用1和0组成的串为“零幺串”，称只用1组成的串为“幺串”，称只用0组成的串为“零串”。试写一个函数（过程），使得它对任给零幺串S，计算n1和n0的值（其中n1表示S中最长幺串的长度，n0表示S中最长零串的长度）。', '[{\'in\': \'00010111001110001111\\n00011110010\\n00011\\n\', \'out\': \'4    3\\n4    3\\n2    3\\n\'}, {\'in\': \'00010111001110001111\\n00011110010\\n00011\\n01\\n1111111111111111100011110000000001\\n\', \'out\': \'4    3\\n4    3\\n2    3\\n1    1\\n17    9\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，由0和1构成的零幺串。', '对于每组输入数据，输出一行（n1和n0的值，它们用4个空格隔开）。', 1, 13, 'ymc', 2, '00010111001110001111\r\n00011110010\r\n00011\r\n', '4');
INSERT INTO `problem` VALUES (380, '设计菱形', '编写一个程序，打印一个菱形（如样例输出所示）。', '[{\'in\': \'9\\n\', \'out\': \'----*----\\n---***---\\n--*****--\\n-*******-\\n*********\\n-*******-\\n--*****--\\n---***---\\n----*----\\n\'}, {\'in\': \'3\\n\', \'out\': \'-*-\\n***\\n-*-\\n\'}]', 1, 0, 0, '输入只有一个1~19范围内的奇数n。', '打印一个菱形，菱形行数为n。', 1, 13, 'ymc', 2, '9\r\n', '-');
INSERT INTO `problem` VALUES (381, '阶乘之和', '<p>有些数能表示为若干个数的阶乘之和。例如，数字9，9=1!+2!+3!。</p>\r\n<p>给定一个数n（<strong>n&lt;=1,000,000</strong>），判断它是否能表示成若干个数的阶乘之和。</p>\r\n<p>注意，这些数不一定是连续的，也不一定从1开始。</p>', '[{\'in\': \'0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n24\\n120\\n720\\n5040\\n40320\\n362880\\n999990\\n999999\\n1000000\\n-1\', \'out\': \'NO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个整数组成，直到输入-1结束。</p>', '<p>对于每组输入数据，输出一行。如果能表示成阶乘之和，输出&ldquo;YES&rdquo;，否则输出&ldquo;NO&rdquo;。</p>', 1, 13, 'ymc', 1, '0\r\n1\r\n2\r\n9\r\n10\r\n12\r\n24\r\n5040\r\n-1\r\n', 'N');
INSERT INTO `problem` VALUES (382, '集合定义', '集合S的定义如下: \r\n(1) 1在S内; \r\n(2) 如果x在集合S内，则2x+1与3x+1也在S内; \r\n(3) 只有满足条件(1)(2)的元素在S内. \r\n\r\n把S中的元素按递增顺序排列，请输出S中的第N个元素。\r\n', '[{\'in\': \'1\\n2\\n3\\n4\\n5\\n6\\n100\\n254\\n1000\\n10000\\n100000\\n\', \'out\': \'1\\n3\\n4\\n7\\n9\\n10\\n418\\n1461\\n8487\\n157653\\n2911581\\n\'}]', 1, 0, 0, '本题有多组测试数据。每组测试数据一行，每行一个正整数N (1 <= N <= 100000)。', '对每组测试数据，在单独的一行中输出S的第N个元素。\r\n', 1, 13, 'ymc', 1, '1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n100\r\n254\r\n', '1');
INSERT INTO `problem` VALUES (383, '五角星数', '如果一个5位数，其各位数字的5次方之和等于本身，则这个数就称为五角星数。\r\n例如54748=5^5+4^5+7^5+4^5+8^5。请输出所有的五角星数。', '[{\'in\': \'\', \'out\': \'54748\\n92727\\n93084\\n\'}]', 1, 0, 0, '无输入', '按从小到大的顺数输出所有的五角星数。每行一个数。', 1, 13, 'ymc', 1, '无输入', '5');
INSERT INTO `problem` VALUES (384, '自然数的和之和', '计算S = 1+(1+2)+(1+2+3)+…+(1+2+…+N)。已知N，要求写程序求出S。', '[{\'in\': \'10\\n1\\n10\\n50\\n99\\n100\\n190\\n199\\n130\\n140\\n200\\n\', \'out\': \'1\\n220\\n22100\\n166650\\n171700\\n1161280\\n1333300\\n374660\\n467180\\n1353400\\n\'}]', 1, 0, 0, '第一行有1个整数T，表示有T组测试数据。第二行～第T+1行，每行有1个整数N， 1<=N<=200。', '对于每组输入数据，输出一行，包含一个整数，即此时S的值。\r\n', 1, 13, 'ymc', 1, '2\r\n1\r\n200\r\n', '1');
INSERT INTO `problem` VALUES (385, '买苹果', '<p>每个苹果0.8元，第一天买2个苹果；从第二天开始，每天买前一天的2倍，直到某天购买的苹果个数达到不超过n的最大值。编写程序求平均每天花多少钱？</p>', '[{\'in\': \'100\\n1000\\n10000\\n999\\n1024\\n1023\\n2\\n3\\n5\\n9\\n128\\n30\\n\', \'out\': \'16.8\\n90.8\\n1008.1\\n90.8\\n163.7\\n90.8\\n1.6\\n1.6\\n2.4\\n3.7\\n29.0\\n6.0\\n\'}]', 1, 0, 0, '<p>本题有多组测试数据 每组测试输入占一行，该行只有单独的一个整数n。其中2&lt;=n&lt;=10000 处理到输入结束。</p>', '<p>对每组测试数据，在单独的一行中出问题的解，结果保留一位小数。</p>', 1, 13, 'ymc', 1, '100\r\n', '1');
INSERT INTO `problem` VALUES (386, '黑色星期五', '13号又是星期五是一个不寻常的日子吗？13号在星期五比在其他日子少吗？\r\n为了回答这个问题，要请你来写一个程序来计算在n年里13号落在星期一、星期二、......、星期日的次数。\r\n这个测试从1900年1月1日到1900+n-1年12月31日。n是一个非负数且不大于400。\r\n\r\n这里有一些你要知道的:\r\n1900年1月1日是星期一，4、6、11和9月有30天，其他月份除了2月都有31天。闰年2月有29天，平年2月有28天。\r\n年份可以被4整除的为闰年(1992=4*498 所以 1992年是闰年,但是1990年不是闰年)以上规则不适合于世纪年.可以被400整除的世纪年为闰年,否则为平年。\r\n所以,1700,1800,1900 和2100年是平年,而2000年是闰年.', '[{\'in\': \'1\\n2\\n5\\n13\\n45\\n100\\n256\\n400\\n\', \'out\': \'2 1 1 3 1 2 2\\n4 3 2 4 4 3 4\\n9 9 7 9 9 8 9\\n23 21 22 22 24 21 23\\n78 76 78 76 78 77 77\\n173 170 172 171 172 170 172\\n440 439 438 438 439 439 439\\n684 687 685 685 687 684 688\\n\'}]', 1, 0, 0, '输入有多组测试数据，每组测试数据只包含一个整数n. ', '七个在一行且相分开的整数,它们代表13日是星期六,星期日,星期一...星期五的次数. ', 1, 13, 'ymc', 1, '20\r\n', '3');
INSERT INTO `problem` VALUES (387, '棋盘上的距离', '国际象棋的棋盘是黑白相间的 8 * 8 的方格,棋子放在格子中间。  王、后、车、象的走子规则如下:\r\n     * 王:横、直、斜都可以走,但每步限走一格。\r\n     * 后:横、直、斜都可以走,每步格数不受限制。\r\n     * 车:横、竖均可以走,不能斜走,格数不限。\r\n     * 象:只能斜走,格数不限。\r\n写一个程序,给定起始位置和目标位置,计算王、后、车、象从起始位置走到目标位置所需的最少步数。\r\n', '[{\'in\': \'5\\na1 c3\\nf5 f8\\na1 h5\\na2 d7\\nb4 a8\\n\', \'out\': \'2 1 2 1\\n3 1 1 Inf\\n7 2 2 Inf\\n5 2 2 2\\n4 2 2 Inf\\n\'}]', 1, 0, 0, '  第一行是测试数据的组数 t(0 <= t <= 20)。以下每行是一组测试数据,每组包括棋盘上的两个位置,第一个是起始位置,第二个是目标位置。位置用\"字母-数字\"的形式表示,字母从\"a\"到\"h\",数字从\"1\"到\"8\"。\r\n', '     对输入的每组测试数据,输出王、后、车、象所需的最少步数。如果无法到达,就输出\r\n\"Inf\".\r\n', 1, 13, 'ymc', 1, '2\r\na1 c3\r\nf5 f8\r\n', '2');
INSERT INTO `problem` VALUES (388, '填词', 'Alex 喜欢填词游戏。填词游戏是一个非常简单的游戏。填词游戏包括一个 N * M 大小的矩形方格盘和 P 个单词。然后需要在每个方格中填上一个字母使得每个单词都能在方格盘上被找到。每个单词都能被找到要满足下面的条件:\r\n    * 一个长为 k 的单词一定要占据 k 个方格。\r\n    * 每个方格都不能同时属于超过一个的单词。\r\n    * 单词在方格盘中出现的方向只能是竖直的或者水平的(可以由竖直转向水平,反之亦然)。\r\n   你的任务是首先在方格盘上找到所有的单词，当然在棋盘上可能有些方格没有被单词占据。然后把这些没有用的方格找出来，把这些方格上的字母按照字典序组成一个“神秘单词”。\r\n   如果你还不了解规则,我们可以用一个例子来说明,比如在下图中寻找单词 BEG 和 GEE。\r\n', '[{\'in\': \'3 3 2\\nEBG\\nGEE\\nEGE\\nBEG\\nGEE\\n\', \'out\': \'EEG\\n\'}, {\'in\': \'5 5 4\\nABCDE\\nFGHIJ\\nKLMNO\\nPQRST\\nUVWXY\\nABCDE\\nFKP\\nUVW\\nOTY\\n\', \'out\': \'GHIJLMNQRSX\\n\'}]', 1, 0, 0, '输入的第一行包括三个整数 N、M和 P (2 <= M, N <= 10, 0 <= P <=100)。接下来的 N 行，每行包括 M 个字符，来表示方格盘。接下来 P 行给出需要在方格盘中找到的单词。\r\n  输入保证填词游戏至少有一组答案。 输入中给出的字母都是大写字母。\r\n', '输出“神秘单词”,注意“神秘单词”中的字母要按照字典序给出。', 1, 13, 'ymc', 2, '3 3 2\r\nEBG\r\nGEE\r\nEGE\r\nBEG\r\nGEE\r\n', 'E');
INSERT INTO `problem` VALUES (389, '装箱问题', '一个工厂制造的产品形状都是长方体,它们的高度都是 h,长和宽都相等,一共有六个   他们的长宽分别为 1*1, 2*2, 3*3, 4*4, 5*5, 6*6. 这些产品通常使用一个 6*6*h 的长方体型号包裹包装然后邮寄给客户。因为邮费很贵, 所以工厂要想方设法的减小每个订单运送时的包裹数量。他们很需要有一个好的程序帮他们解决这个问题从而节省费用。现在这个程序由你来设计。\r\n', '[{\'in\': \'0 0 4 0 0 1\\n7 5 1 0 0 0\\n0 0 0 0 0 0\\n\', \'out\': \'2\\n1\\n\'}, {\'in\': \'34 35 36 37 38 39\\n192 182 14 172 133 1234\\n1132 232 23423 1231 3453 78234\\n0 0 0 0 0 0\\n\', \'out\': \'123\\n1543\\n88774\\n\'}]', 1, 0, 0, '输入文件包括几行,每一行代表一个订单。每个订单里的一行包括六个整数,中间用空格隔开,分别为 1*1 至 6*6 这六种产品的数量。输入文件将以 6 个 0 组成的一行结尾。\r\n', '除了输入的最后一行 6 个 0 以外,输入文件里每一行对应着输出文件的一行,每一行输出一个整数代表对应的订单所需的最小包裹数。\r\n\r\n', 1, 13, 'ymc', 2, '0 0 4 0 0 1\r\n7 5 1 0 0 0\r\n0 0 0 0 0 0\r\n', '2');
INSERT INTO `problem` VALUES (390, '确定进制', ' 6*9 = 42 对于十进制来说是错误的, 但是对于 13 进制来说是正确的。\r\n 6(13) * 9(13) = 即,42(13), 而 42(13) = 4 * 13^1 + 2 * 13^0 = 54(10)。 \r\n\r\n你的任务是写一段程序读入三个整数 p、q和 r,然后确定一个进制 B(2<=B<=16) 使得 p * q = r. \r\n如果 B 有很多选择, 输出最小的一个。\r\n\r\n例如: p = 11, q = 11, r = 121. \r\n则有 11(3) * 11(3) = 121(3) \r\n因为 11(3) = 1 * 31 + 1 * 30 =4(10) \r\n     和 \r\n121(3) = 1 * 32 + 2 * 31 + 1 * 30 = 16(10)。 对于进制 10,有 11(10) * 11(10) =121(10)。\r\n这种情况下,应该输出 3。如果没有合适的进制,则输出 0。\r\n', '[{\'in\': \'3\\n6 9 42\\n11 11 121\\n2 2 2\\n\', \'out\': \'13\\n3\\n0\\n\'}, {\'in\': \'3      \\n123 121 14883\\n321 211 67731\\n1211 3211 3888521\\n\', \'out\': \'9\\n8\\n9\\n\'}]', 1, 0, 0, '输入有 T 组测试样例。 T 在第一行给出。\r\n包含三个整数 p、q、r。每一组测试样例占一行, p、q、r 的所有位都是数字,\r\n并且 1 <= p、q、r <= 1,000,000。\r\n', '对于每个测试样例输出一行。该行包含一个整数:即使得 p * q = r 成立的最小的 B。如果没有合适的 B,则输出 0。\r\n', 1, 13, 'ymc', 2, '3\r\n6 9 42\r\n11 11 121\r\n2 2 2\r\n', '1');
INSERT INTO `problem` VALUES (391, '最小公倍数', '<p>求n个数的最小公倍数。</p>', '[{\'in\': \'2 4 6\\n3 2 5 7\\n\', \'out\': \'12\\n70\\n\'}, {\'in\': \'5 2 5 8 9 23\\n\', \'out\': \'8280\\n\'}]', 1, 0, 0, '<p>输入包含多个测试实例，每个测试实例的开始是一个正整数n，然后是n个正整数。</p>', '<p>为每组测试数据输出它们的最小公倍数，每个测试实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2 4 6\r\n3 2 5 7\r\n', '1');
INSERT INTO `problem` VALUES (392, '人见人爱A-B', '<p>今天我们这个A-B求的是两个集合的差，就是做集合的减法运算。（当然，大家都知道集合的定义，就是同一个集合中不会有两个相同的元素，这里还是提醒大家一下） 呵呵，很简单吧？</p>', '[{\'in\': \'3 3 1 2 3 1 4 7\\n3 7 2 5 8 2 3 4 5 6 7 8\\n0 0\\n\', \'out\': \'2 3 \\nNULL\\n\'}, {\'in\': \'2 2 3 4 3 8\\n3 4 7 9 3 7 8 1 2\\n2 3 7 8 2 3 4\\n0 0\\n\', \'out\': \'4 \\n3 9 \\n7 8 \\n\'}]', 1, 0, 0, '<p>每组输入数据占1行,每行数据的开始是2个整数n(<strong>0&lt;n&lt;=100</strong>)和m(<strong>0&lt;m&lt;=100)</strong>,分别表示集合A和集合B的元素个数，然后紧跟着n+m个元素，前面n个元素属于集合A，其余的属于集合B. 每个元素为不超出int范围的整数,元素之间有一个空格隔开. 如果n=0并且m=0表示输入的结束，不做处理。</p>', '<p>针对每组数据输出一行数据,表示A-B的结果,如果结果为空集合，则输出&ldquo;NULL&rdquo;,否则从小到大输出结果,为了简化问题，每个元素后面跟一个空格.</p>', 1, 13, 'ymc', 2, '3 3 1 2 3 1 4 7\r\n3 7 2 5 8 2 3 4 5 6 7 8 \r\n0 0', '2');
INSERT INTO `problem` VALUES (393, '人见人爱A^B', '求A^B的最后三位数表示的整数。\n说明：A^B的含义是“A的B次方”', '[{\'in\': \'2 3\\n12 6\\n6789 10000\\n0 0\\n\', \'out\': \'8\\n984\\n1\\n\'}, {\'in\': \'34 565\\n15 7\\n0 0\\n\', \'out\': \'24\\n375\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每个实例占一行，由两个正整数A和B组成（1<=A,B<=10000），如果A=0, B=0，则表示输入数据的结束，不做处理。', '对于每个测试实例，请输出A^B的最后三位表示的整数，每个输出占一行。', 1, 13, 'ymc', 2, '2 3\n12 6\n6789 10000\n0 0\n', '8');
INSERT INTO `problem` VALUES (394, '改革春风吹满地', '<p>&ldquo; 改革春风吹满地, 不会AC没关系; 实在不行回老家， 还有一亩三分地。 谢谢!（乐队奏乐）&rdquo; 话说部分学生心态极好，每天就知道游戏，如此简单的题目，也是云里雾里，而且，还竟然来这么几句打油诗。 好呀，老师的责任就是帮你解决问题，既然想种田，那就分你一块。 这块田位于浙江省温州市苍南县灵溪镇林家铺子村，多边形形状的一块地，原本是linle 的，现在就准备送给你了。不过，任何事情都没有那么简单，你必须首先告诉我这块地到底有多少面积，如果回答正确才能真正得到这块地。 发愁了吧？就是要让你知道，种地也是需要AC知识的！以后还是好好练吧...</p>', '[{\'in\': \'3 0 0 1 0 0 1\\n4 1 0 0 1 -1 0 0 -1\\n0\\n\', \'out\': \'0.5\\n2.0\\n\'}, {\'in\': \'4 4 3 0 0 3 2 3 0\\n3 3 3 4 4 5 5\\n0\\n\', \'out\': \'1.5\\n0.0\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例，每个测试实例占一行，每行的开始是一个整数n(3&lt;=n&lt;=100)，它表示多边形的边数（当然也是顶点数），然后是按照逆时针顺序给出的n个顶点的坐标（x1, y1, x2, y2... xn, yn）,为了简化问题，这里的所有坐标都用整数表示。 输入数据中所有的整数都在32位整数范围内，n=0表示数据的结束，不做处理。</p>', '<p>对于每个测试实例，请输出对应的多边形面积，结果精确到小数点后一位小数。 每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '3 0 0 1 0 0 1\r\n4 1 0 0 1 -1 0 0 -1\r\n0\r\n', '0');
INSERT INTO `problem` VALUES (395, '今年暑假不AC', '“今年暑假不AC？”\n“是的。”\n“那你干什么呢？”\n“看世界杯呀，笨蛋！”\n“@#$%^&*%...”\n\n确实如此，世界杯来了，球迷的节日也来了，估计很多ACMer也会抛开电脑，奔向电视了。\n作为球迷，一定想看尽量多的完整的比赛，当然，作为新时代的好青年，你一定还会看一些其它的节目，比如新闻联播（永远不要忘记关心国家大事）、非常6+7、超级女生，以及王小丫的《开心辞典》等等，假设你已经知道了所有你喜欢看的电视节目的转播时间表，你会合理安排吗？（目标是能看尽量多的完整节目）', '[{\'in\': \'12\\n1 3\\n3 4\\n0 7\\n3 8\\n15 19\\n15 20\\n10 15\\n8 18\\n6 12\\n5 10\\n4 14\\n2 9\\n0\\n\', \'out\': \'5\\n\'}, {\'in\': \'9\\n1 3\\n2 4\\n5 7\\n6 8\\n9 13\\n13 17\\n14 16\\n17 20\\n20 23\\n0\\n\', \'out\': \'6\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每个测试实例的第一行只有一个整数n(n<=100)，表示你喜欢看的节目的总数，然后是n行数据，每行包括两个数据 Ti_s,Ti_e (1<=i<=n)，分别表示第i个节目的开始和结束时间，为了简化问题，每个时间都用一个正整数表示。n=0表示输入结束，不做处理。', '对于每个测试实例，输出能完整看到的电视节目的个数，每个测试实例的输出占一行。', 1, 13, 'ymc', 2, '12\n1 3\n3 4\n0 7\n3 8\n15 19\n15 20\n10 15\n8 18\n6 12\n5 10\n4 14\n2 9\n0\n', '5');
INSERT INTO `problem` VALUES (396, '超级楼梯', '有一楼梯共M级，刚开始时你在第一级，若每次只能跨上一级或二级，要走上第M级，共有多少种走法？', '[{\'in\': \'2\\n2\\n3\\n\', \'out\': \'1\\n2\\n\'}, {\'in\': \'2\\n10\\n15\\n\', \'out\': \'55\\n610\\n\'}]', 1, 0, 0, '输入数据首先包含一个整数N，表示测试实例的个数，然后是N行数据，每行包含一个整数M（1<=M<=40）,表示楼梯的级数。', '对于每个测试实例，请输出不同走法的数量', 1, 13, 'ymc', 2, '2\r\n2\r\n3\r\n', '1');
INSERT INTO `problem` VALUES (397, '不容易系列之二', '你活的不容易，我活的不容易，他活的也不容易。不过，如果你看了下面的故事，就会知道，有位老汉比你还不容易。\r\n\r\n重庆市郊黄泥板村的徐老汉（大号徐东海，简称XDH）这两年辛辛苦苦养了不少羊，到了今年夏天，由于众所周知的高温干旱，实在没办法解决牲畜的饮水问题，就决定把这些羊都赶到集市去卖。从黄泥板村到交易地点要经过N个收费站，按说这收费站和徐老汉没什么关系，但是事实却令徐老汉欲哭无泪：\r\n\r\n（镜头回放）\r\n\r\n近景：老汉，一群羊\r\n远景：公路，收费站\r\n\r\n......\r\n\r\n收费员（彬彬有礼+职业微笑）：“老同志，请交过路费！”\r\n\r\n徐老汉（愕然，反应迟钝状）：“锅，锅，锅，锅-炉-费？我家不烧锅炉呀？”\r\n\r\n收费员（职业微笑依然）：“老同志，我说的是过-路-费，就是你的羊要过这个路口必须交费，understand?”\r\n\r\n徐老汉（近镜头10秒，嘴巴张开）：“我-我-我知道汽车过路要收费，这羊也要收费呀？”\r\n\r\n收费员（居高临下+不解状）：“老同志，你怎么就不明白呢，那么我问你，汽车几个轮子？”\r\n\r\n徐老汉（稍放松）：“这个我知道，今天在家里我孙子还问我这个问题，4个！”\r\n\r\n收费员（生气，站起）：“嘿！老头，你还骂人不带脏字，既然知道汽车四个轮子，难道就不知道这羊有几条腿吗？！”\r\n\r\n徐老汉（尴尬，依然不解状）：“也，也，也是4个呀，这有关系吗？”\r\n\r\n收费员（生气，站起）：“怎么没关系！我们头说了，只要是4条腿的都要收费！”\r\n\r\n......\r\n\r\n(画外音)\r\n\r\n由于徐老汉没钱，收费员就将他的羊拿走一半，看到老汉泪水涟涟，犹豫了一下，又还给老汉一只。巧合的是，后面每过一个收费站，都是拿走当时羊的一半，然后退还一只，等到老汉到达市场，就只剩下3只羊了。\r\n\r\n你,当代有良知的青年，能帮忙算一下老汉最初有多少只羊吗？', '[{\'in\': \'2\\n1\\n2\\n\', \'out\': \'4\\n6\\n\'}, {\'in\': \'5\\n30\\n29\\n25\\n20\\n10\\n\', \'out\': \'1073741826\\n536870914\\n33554434\\n1048578\\n1026\\n\'}]', 1, 0, 0, '输入数据第一行是一个整数N，下面由N行组成，每行包含一个整数a(0<a<=30),表示收费站的数量。', '对于每个测试实例，请输出最初的羊的数量,每个测试实例的输出占一行。', 1, 13, 'ymc', 2, '2\r\n1\r\n2\r\n', '4');
INSERT INTO `problem` VALUES (398, '一只小蜜蜂...', '<p>有一只经过训练的蜜蜂只能爬向右侧相邻的蜂房，不能反向爬行。请编程计算蜜蜂从蜂房a爬到蜂房b的可能路线数。 其中，蜂房的结构如下所示。</p>', '[{\'in\': \'2\\n1 2\\n3 6\\n\', \'out\': \'1\\n3\\n\'}, {\'in\': \'3\\n5 7\\n9 14\\n16 34\\n\', \'out\': \'2\\n8\\n4181\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数N,表示测试实例的个数，然后是N 行数据，</p>\r\n<p>每行包含两个整数a和b(0&lt;a&lt;b&lt;50)。</p>', '<p>对于每个测试实例，请输出蜜蜂从蜂房a爬到蜂房b的可能路线数，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n1 2\r\n3 6\r\n', '1');
INSERT INTO `problem` VALUES (399, 'LELE的RPG难题', '<p>人称&ldquo;AC女之杀手&rdquo;的超级偶像LELE最近忽然玩起了深沉，这可急坏了众多&ldquo;Cole&rdquo;（LELE的粉丝,即\"可乐\"）,经过多方打探，某资深Cole终于知道了原因，原来，LELE最近研究起了著名的RPG难题: 有排成一行的ｎ个方格，用红(Red)、粉(Pink)、绿(Green)三色涂每个格子，每格涂一色，要求任何相邻的方格不能同色，且首尾两格也不同色．求全部的满足要求的涂法. 以上就是著名的RPG难题. 如果你是Cole,我想你一定会想尽办法帮助LELE解决这个问题的;如果不是,看在众多漂亮的痛不欲生的Cole女的面子上,你也不会袖手旁观吧?</p>', '[{\'in\': \'1\\n2\\n\', \'out\': \'3\\n6\\n\'}, {\'in\': \'10\\n17\\n\', \'out\': \'1026\\n131070\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例,每个测试实例占一行,由一个整数N组成，</p>\r\n<p>(0&lt;N&lt;=50)。</p>', '<p>对于每个测试实例，请输出全部的满足要求的涂法，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '1\r\n2\r\n', '3');
INSERT INTO `problem` VALUES (400, '求平均成绩', '<p>假设一个班有n(n&lt;=50)个学生，每人考m(m&lt;=5)门课，求每个学生的平均成绩和每门课的平均成绩，并输出各科成绩均大于等于平均成绩的学生数量。</p>', '[{\'in\': \'2 2\\n5 10\\n10 20\\n\', \'out\': \'7.50 15.00\\n7.50 15.00\\n1\\n\\n\'}, {\'in\': \'3 3\\n3 6 9\\n4 8 10\\n3 8 12\\n2 2\\n5 10\\n10 20\\n\', \'out\': \'6.00 7.33 7.67\\n3.33 7.33 10.33\\n0\\n\\n7.50 15.00\\n7.50 15.00\\n1\\n\\n\'}]', 1, 0, 0, '<p>输入数据有多个测试实例，每个测试实例的第一行包括两个整数n和m，分别表示学生数和课程数。然后是n行数据，每行包括m个整数（即：考试分数）。</p>', '<p>对于每个测试实例，输出3行数据，</p>\r\n<p>第一行包含n个数据，表示n个学生的平均成绩，结果保留两位小数；</p>\r\n<p>第二行包含m个数据，表示m门课的平均成绩，结果保留两位小数；</p>\r\n<p>第三行是一个整数，表示该班级中各科成绩均大于等于平均成绩的学生数量。</p>\r\n<p>&nbsp;</p>\r\n<p>每个测试实例后面跟一个空行。</p>', 1, 13, 'ymc', 2, '2 2\r\n5 10\r\n10 20\r\n', '7');
INSERT INTO `problem` VALUES (401, '海选女主角', 'potato老师虽然很喜欢教书，但是迫于生活压力，不得不想办法在业余时间挣点外快以养家糊口。\r\n“做什么比较挣钱呢？筛沙子没力气，看大门又不够帅...”potato老师很是无奈。\r\n“张艺谋比你还难看，现在多有钱呀，听说还要导演奥运开幕式呢！你为什么不去娱乐圈发展呢？”lwg在一旁出主意。\r\n嗯，也是，为了生存，就委屈点到娱乐圈混混吧，马上就拍一部激光电影《回来我的爱》。\r\n说干就干，马上海选女主角（和老谋子学的，此举可以吸引媒体的眼球，呵呵），并且特别规定，演员必须具有ac的基本功，否则直接out!\r\n由于策划师宣传到位，来应聘的MM很多，\r\n面试那天，刚好来了m*n个MM，站成一个m*n的队列，副导演为每个MM打了分数，分数都是32位有符号整数。\r\n一开始我很纳闷：分数怎么还有负的？副导演解释说，根据选拔规则，头发染成黄色、化妆太浓、穿的太少等等都要扣分数的，扣的多了就可能是负分了，当然，如果发现话语中夹有日语，就直接给-2147483648分了。\r\n分数送上来了，是我做决定的时候了，我的一个选拔原则是，要选一个面试分数绝对值（必须还是32位整数）最大的MM。\r\n特别说明：如果不幸选中一个负分的MM,也没关系，因为我觉得，如果不能吸引你，那要想法恶心你。', '[{\'in\': \'2 3\\n1 4 -3\\n-7 3 0\\n\', \'out\': \'2 1 -7\\n\'}, {\'in\': \'3 3\\n4 6 -6\\n5 7 4\\n3 4 -2\\n\', \'out\': \'2 2 7\\n\'}, {\'in\': \'3 4\\n-9 7 -8 4\\n3 8 4 -7\\n5 7 3 -4\\n\', \'out\': \'1 1 -9\\n\'}]', 1, 0, 0, '输入数据有多行，第一行是两个整数m和n，表示应聘MM的总共的行列数，然后是m行整数，每行有n个，m和n的定义见题目的描述。', '对于每组输入数据，输出三个整数x,y和s，分别表示选中的MM的行号、列号和分数。\r\nnote:行号和列号从一开始，如果有多个MM的分数绝对值一样，那么输出排在最前面的一个（即行号最小的那个，如果行号相同则取列号最小的那个）。', 1, 13, 'ymc', 3, '2 3\r\n1 4 -3\r\n-7 3 0\r\n', '2');
INSERT INTO `problem` VALUES (402, '发工资咯：）', '作为温大的老师，最盼望的日子就是每月的10号了，因为这一天是发工资的日子，养家糊口就靠它了，呵呵\r\n但是对于学校财务处的工作人员来说，这一天则是很忙碌的一天，财务处的小胡老师最近就在考虑一个问题：如果每个老师的工资额都知道，最少需要准备多少张人民币，才能在给每位老师发工资的时候都不用老师找零呢？\r\n这里假设老师的工资都是正整数，单位元，人民币一共有100元、50元、10元、5元、2元和1元六种。', '[{\'in\': \'3\\n1 2 3\\n0\\n\', \'out\': \'4\\n\'}, {\'in\': \'3\\n101 102 153\\n3\\n98 97 99\\n0\\n\', \'out\': \'8\\n23\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每个测试实例的第一行是一个整数n（n<100），表示老师的人数，然后是n个老师的工资。\r\nn=0表示输入的结束，不做处理。', '对于每个测试实例输出一个整数x,表示至少需要准备的人民币张数。每个输出占一行。', 1, 13, 'ymc', 2, '3\r\n1 2 3\r\n0\r\n', '4');
INSERT INTO `problem` VALUES (403, '讨厌的青蛙', '     在韩国,有一种小的青蛙。每到晚上,这种青蛙会跳越稻田,从而踩踏稻子。农民在早上看到被踩踏的稻子,希望找到造成最大损害的那只青蛙经过的路径。   每只青蛙总是沿着一条直线跳越稻田,而且每次跳跃的距离都相同,如图 1所示。 稻田里的稻子组成一个栅格,每棵稻子位于一个格点上,如图2 所示。而青蛙总是从稻田的一侧跳进稻田,然后沿着某条直线穿越稻田,从另一侧跳出去,如图 3 所示。\r\n  青蛙的每一跳都恰好踩在一棵水稻上,   将这棵水稻拍倒。可能会有多只青蛙从稻田穿越,有些水稻被多只青蛙踩踏,如图4 所示。当然,农民所见到的是图 5 中的情形,看不到图 4 中的直线。\r\n 根据图 5,农民能够构造出青蛙穿越稻田时的行走路径,并且只关心那些在穿越稻田时至少踩踏了 3 棵水稻的青蛙。因此,每条青蛙行走路径上至少包括 3 棵被踩踏的水稻。而在一条青蛙行走路径的直线上,也可能会有些被踩踏的水稻不属于该行走路径。 在图 5 中,格点(2, 1)、(6, 1)上的水稻可能是同一只青蛙踩踏的,但这条线上只有两棵被踩踏的水稻,因此不能作为一条青蛙行走路径;格点(2, 3)、(3, 4)、(6, 6)在同一条直线上,但它们的间距不等,因此不能作为一条青蛙行走路径;格点(2, 1)、(2, 3)、(2, 5)、(2, 7)是一条青蛙行走路径,该路径不包括格点(2, 6)。请你写一个程序,确定在所有的青蛙行路径中,踩踏水稻棵数最多的路径上有多少棵水稻被踩踏。例如,图5 的答案是 7,因为第 6 行上全部水稻恰好构成一条青蛙行走路径。\r\n', '[{\'in\': \'6 7\\n14\\n2 1\\n6 6\\n4 2\\n2 5\\n2 6\\n2 7\\n3 4\\n6 1\\n6 2\\n2 3\\n6 3\\n6 4\\n6 5\\n6 7\\n\', \'out\': \'7\\n\'}, {\'in\': \'6 7\\n15\\n2 2\\n6 3\\n4 1\\n2 4\\n3 6\\n2 7\\n3 2\\n6 1\\n6 2\\n2 3\\n6 3\\n6 4\\n6 5\\n6 7\\n1 4\\n\', \'out\': \'4\\n\'}, {\'in\': \'6 7\\n2\\n5 5\\n4 6\\n\', \'out\': \'0\\n\'}]', 1, 0, 0, '   从标准输入设备上读入数据。\r\n第一行上两个整数 R、C,分别表示稻田中水稻的行数和列数,1≤R、C≤5000。\r\n第二行是一个整数 N,表示被踩踏的水稻数量, 1≤N≤5000。在剩下的 N 行中,每行有两个整数,分别是一颗被踩踏水稻的行号(1~R)和列号(1~C),两个整数用一个空格隔开。而且,每棵被踩踏水稻只被列出一次。\r\n', '  从标准输出设备上输出一个整数。如果在稻田中存在青蛙行走路径,则输出包含最多水稻的青蛙行走路径中的水稻数量,否则输出 0。\r\n', 1, 13, 'ymc', 3, '6 7\r\n14\r\n2 1\r\n6 6\r\n4 2\r\n2 5\r\n2 6\r\n2 7\r\n3 4\r\n6 1\r\n6 2\r\n2 3\r\n6 3\r\n6 4\r\n6 5\r\n6 7\r\n', '7');
INSERT INTO `problem` VALUES (404, '二叉树', '如图1所示,由正整数 1, 2, 3, ...组成了一棵无限大的二叉树。从某一个结点到根结点(编号是 1 的结点)都有一条唯一的路径,比如从10到根结点的路径是(10,5,2,1),从4到根结点的路径是(4,2,1),从根结点1到根结点的路径上只包含一个结点1,因此路径就是(1)。对于两个结点x和y,假设他们到根结点的路径分别是(x1, x2, ... ,1)和(y1,y2, ... ,1)(这里显然有 x=x1,y=y1),那么必然存在两个正整数i和 j,使得从xi和yj开始,有 xi=yj ,x(i+1) = y(j + 1),x(i+2) = y(j + 2),... 现在的问题就是,给定 x 和 y,要求xi(也就是 yj)     。\r\n', '[{\'in\': \'10 4\\n\', \'out\': \'2\\n\'}, {\'in\': \'999 425\\n\', \'out\': \'3\\n\'}, {\'in\': \'512 257\\n\', \'out\': \'128\\n\'}, {\'in\': \'512 511\\n\', \'out\': \'1\\n\'}]', 1, 0, 0, '输入只有一行,包括两个正整数x和y,这两个正整数都不大于1000。', '输出只有一个正整数 xi。', 1, 13, 'ymc', 4, '10 4\r\n', '2');
INSERT INTO `problem` VALUES (405, '放苹果', '把M个同样的苹果放在N个同样的盘子里,允许有的盘子空着不放,问共有多少种不同的分法?(用K表示)注意:5,1,1和1,5,1是同一种分法。\n', '[{\'in\': \'1\\n7 3\\n\', \'out\': \'8\\n\'}, {\'in\': \'5\\n2 5\\n3 8\\n4 9\\n7 6\\n2 9\\n\', \'out\': \'2\\n3\\n5\\n14\\n2\\n\'}]', 1, 0, 0, '第一行是测试数据的数目t(0<=t<= 20) 。以下每行均包含两个整数M和N,以空格分开。1<=M,N<=10。\n', '对输入的每组数据M和N,用一行输出相应的K。', 1, 13, 'ymc', 2, '1\n7 3\n', '8');
INSERT INTO `problem` VALUES (406, '八皇后问题', '会下国际象棋的人都很清楚:皇后可以在横、竖、斜线上不限步数地吃掉其他棋子。如何将8个皇后放在棋盘上(有8*8个方格),使它们谁也不能被吃掉!这就是著名的八皇后问题。对于某个满足要求的8皇后的摆放方法, 定义一个皇后串a与之对应, 即a=b1b2...b8, 其中bi为相应摆法中第i行皇后所处的列数。已经知道8皇后问题一共有92组解(即92个不同的皇后串)。给出一个数b,要求输出第b个串。串的比较是这样的:皇后串x置于皇后串y之前,当且仅当将x视为整数时比y小。\r\n', '[{\'in\': \'2\\n1\\n92\\n\', \'out\': \'15863724\\n84136275\\n\'}, {\'in\': \'10\\n3\\n13\\n14\\n16\\n18\\n28\\n29\\n34\\n36\\n47\\n\', \'out\': \'17468253\\n31758246\\n35281746\\n35714286\\n36258174\\n38471625\\n41582736\\n42751863\\n42861357\\n51468273\\n\'}]', 1, 0, 0, '第1行是测试数据的组数n,后面跟着n行输入。每组测试数据占1行,包括一个正整数b(1<=b<=92)\r\n', 'n 行,每行输出对应一个输入。输出应是一个正整数,是对应于 b 的皇后串', 1, 13, 'ymc', 2, '2\r\n1\r\n92\r\n', '1');
INSERT INTO `problem` VALUES (407, '木棍问题', '乔治拿来一组等长的木棒,将它们随机地裁断,使得每一节木棒的长度都不超过50个长度单位。然后他又想把这些木棒恢复到裁截前的状态,但忘记了初始时有多少木棒以及木棒的初始长度。请你设计一个程序,帮助乔治计算木棒的可能最小长度。每一节木棒的长度都用大于零的整数表示。\r\n', '[{\'in\': \'9\\n5 2 1 5 2 1 5 2 1\\n4\\n1 2 3 4\\n0\\n\', \'out\': \'6\\n5\\n\'}, {\'in\': \'10\\n1 2 3 4 5 6 7 8 9 10\\n20\\n1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\\n0\\n\', \'out\': \'11\\n10\\n\'}, {\'in\': \'4\\n5 5 5 3\\n0\\n\', \'out\': \'18\\n\'}]', 1, 0, 0, '输入多组数据，每组包括两行。\r\n第一行是一个不超过64的整数，表示裁截之后共有多少节木棒。\r\n第二行是经过裁截后，所得到的各节木棒的长度。\r\n\r\n在最后一组之后，是零。\r\n', '对每组数据，输出木棒的可能最小长度，每组占一行。', 1, 13, 'ymc', 3, '9\r\n5 2 1 5 2 1 5 2 1\r\n4\r\n1 2 3 4\r\n0\r\n', '6');
INSERT INTO `problem` VALUES (408, '偶数求和', '有一个长度为n(n<=1000)的数列，该数列定义为从2开始的递增有序偶数，现在要求你按照顺序每m个数求出一个平均值，如果最后不足m个，则以实际数量求平均值。编程输出该平均值序列。', '[{\'in\': \'3 2\\n4 2\\n\', \'out\': \'3 6\\n3 7\\n\'}, {\'in\': \'100 14\\n300 130\\n8 4\\n589 67\\n\', \'out\': \'15 43 71 99 127 155 183 199\\n131 391 561\\n5 13\\n68 202 336 470 604 738 872 1006 1126\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，包含两个正整数n和m，n和m的含义如上所述。', '对于每组输入数据，输出一个平均值序列，每组输出占一行。每行数字之间有一个空格。', 1, 13, 'ymc', 2, '3 2\r\n4 2\r\n', '3');
INSERT INTO `problem` VALUES (409, '骨牌铺方格', '<p>在2&times;n的一个长方形方格中,用一个1&times; 2的骨牌铺满方格,输入n ,输出铺放方案的总数. 例如n=3时,为2&times; 3方格，骨牌的铺放方案有三种,如下图：</p>', '[{\'in\': \'1\\n3\\n2\\n\', \'out\': \'1\\n3\\n2\\n\'}, {\'in\': \'5\\n10\\n15\\n\', \'out\': \'8\\n89\\n987\\n\'}]', 1, 0, 0, '<p>输入数据由多行组成，每行包含一个整数n,表示该测试实例的长方形方格的规格是</p>\r\n<p>2&times;n (0&lt;n&lt;=50)。</p>', '<p>对于每个测试实例，请输出铺放方案的总数，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '1\r\n3\r\n2\r\n', '1');
INSERT INTO `problem` VALUES (410, '输出网格\n', '输出如下所示的网格\r\n+---+---+\r\n|   |   |\r\n+---+---+\r\n说明：两个“+”之间有三个“-”。\n', '[{\'in\': \'\', \'out\': \'+---+---+\\n|   |   |\\n+---+---+\\n\'}]', 1, 0, 0, '无输入\n', '输入如样例所示的网格，总共三行。\r\n\n', 1, 13, 'ymc', 1, '无\n', '+');
INSERT INTO `problem` VALUES (411, '输出 C \n', '在标准输出上输出有*号构成的字母C,如下所示：\r\n****\r\n*\r\n*\r\n****\n', '[{\'in\': \'\', \'out\': \'****\\n*\\n*\\n****\\n\'}]', 1, 0, 0, '无\n', '****\r\n*\r\n*\r\n****\n', 1, 13, 'ymc', 1, '\n', '*');
INSERT INTO `problem` VALUES (412, '平方\n', '<p>输入一个整数n，求这个数的平方。</p>', '[{\'in\': \'2\\n\', \'out\': \'4\\n\'}, {\'in\': \'-10\\n\', \'out\': \'100\\n\'}]', 1, 0, 0, '<p>输入只有一个整数n。</p>', '<p>在单独的一行中输出n的平方。</p>', 1, 13, 'ymc', 2, '2', '4');
INSERT INTO `problem` VALUES (413, 'Hello World', '<p>让计算机输出\"Hello,World.\"。请注意字母大小写和标点符号，输出不包括两边的引号，行末输出一个换行符。</p>', '[{\'in\': \'\', \'out\': \'Hello,World.\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>', '<p>输出Hello,World.</p>', 1, 13, 'ymc', 1, '本题无输入样例\r\n', 'H');
INSERT INTO `problem` VALUES (414, '计算\n', '<p>计算123&times;657-(269-257)+169的值，并输出公式后输出一个换行符。</p>\n', '[{\'in\': \'\', \'out\': \'123*657-(269-257)+169=80968\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>计算123&times;657-(269-257)+169的值，并输出公式后输出一个换行符。</p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\r\n\n', '1');
INSERT INTO `problem` VALUES (415, '交换\n', '<p>从键盘读入两个整数，交换这两个整数后输出。</p>\n', '[{\'in\': \'102 3241\\n\', \'out\': \'3241 102\\n\'}]', 1, 0, 0, '<p>为两个整数。</p>\n', '<p>输出交换后的两个整数，这两个整数之间有1个空格。行末有一个换行符。</p>\n', 1, 13, 'ymc', 1, '2 5\r\n\n', '5');
INSERT INTO `problem` VALUES (416, '计算球体积\n', '根据输入的半径值，计算球的体积。\r\n\r\nPI取3.1415927。\r\n\r\n数据类型请用double！\n', '[{\'in\': \'1.5\\n\', \'out\': \'14.137\\n\'}, {\'in\': \'2\\n\', \'out\': \'33.510\\n\'}, {\'in\': \'99\\n\', \'out\': \'4064379.007\\n\'}, {\'in\': \'123\\n\', \'out\': \'7794781.577\\n\'}]', 1, 0, 0, '输入数据为一行，包括一个实数，表示球的半径。\n', '输出为一行，包括一个实数，计算结果保留三位小数。行尾输出一个换行符。\n', 1, 13, 'ymc', 4, '1.5\r\n\n', '1');
INSERT INTO `problem` VALUES (417, '计算两点间的距离\n', '<p>输入两点坐标（x1,y1）,（x2,y2）,计算并输出两点间的距离。 注意： 计算两点间距离时平方根函数的使用： 在文件开始加入语句 　　</p>\r\n<p>#include &lt;math.h&gt;</p>\r\n<p>&nbsp;平方根函数的使用： 　　</p>\r\n<p>s=sqrt(s);</p>\n', '[{\'in\': \'0 0 0 1\\n\', \'out\': \'1.00\\n\'}, {\'in\': \'0 1 1 0\\n\', \'out\': \'1.41\\n\'}, {\'in\': \'100 99 0 0\\n\', \'out\': \'140.72\\n\'}, {\'in\': \'9999 9999 99 0\\n\', \'out\': \'14070.89\\n\'}]', 1, 0, 0, '<p>输入数据占一行，由4个实数组成，分别表示x1,y1,x2,y2,数据之间用空格隔开。</p>\n', '<p>输出为一行，一行中只有一个浮点数，这个结果保留两位小数。行尾需要输出一个换行符。</p>\n', 1, 13, 'ymc', 4, '100 99 0 0\r\n\n', '1');
INSERT INTO `problem` VALUES (418, '数字分隔\n', '输入一个5位整数，分解出它的每位数字，并将这些数字间隔3个\'-\'的形式打印出来。\n', '[{\'in\': \'12345\\n\', \'out\': \'1---2---3---4---5\\n\'}, {\'in\': \'13579\', \'out\': \'1---3---5---7---9\\n\'}]', 1, 0, 0, '输入只有一行，该行只有一个五位整数。\n', '输出只有一行，分解出它的每位数字，并将这些数字间隔3个减号（就是：\"-\"）的形式打印出来。\n', 1, 13, 'ymc', 2, '12345\n', '1');
INSERT INTO `problem` VALUES (419, 'ASCII码\n', '输出字符的ASCII码值。\r\n背景知识：\r\n目前计算机中用得最广泛的字符集及其编码，是由美国国家标准局(ANSI)制定的ASCII码（American Standard Code for Information Interchange，美国标准信息交换码），它已被国际标准化组织（ISO）定为国际标准，称为ISO 646标准。适用于所有拉丁文字字母，ASCII码有7位码和8位码两种形式。\r\n因为1位二进制数可以表示2^1=2种状态：0、1；而2位二进制数可以表示2^2=4种状态：00、01、10、11；依次类推，7位二进制数可以表示2^7=128种状态，每种状态都唯一地编为一个7位的二进制码，对应一个字符（或控制码），这些码可以排列成一个十进制序号0～127。所以，7位 ASCII码是用七位二进制数进行编码的，可以表示128个字符。\r\n第0～32号及第127号(共34个)是控制字符或通讯专用字符，如控制符：LF（换行）、CR（回车）、FF（换页）、DEL（删除）、BS（退格)、BEL（振铃）等；通讯专用字符：SOH（文头）、EOT（文尾）、ACK（确认）等；\r\n第33～126号(共94个)是字符，其中第48～57号为0～9十个阿拉伯数字；65～90号为26个大写英文字母，97～122号为26个小写英文字母，其余为一些标点符号、运算符号等。\r\n在计算机的存储单元中，一个ASCII码值占一个字节(8个二进制位)，其最高位(b7)用作奇偶校验位。所谓奇偶校验，是指在代码传送过程中用来检验是否出现错误的一种方法，一般分奇校验和偶校验两种。奇校验规定：正确的代码一个字节中1的个数必须是奇数，若非奇数，则在最高位b7添1；偶校验规定：正确的代码一个字节中1的个数必须是偶数，若非偶数，则在最高位b7添1。\n', '[{\'in\': \'a\\n\', \'out\': \'97\\n\'}, {\'in\': \'b\', \'out\': \'98\\n\'}, {\'in\': \'C\', \'out\': \'67\\n\'}]', 1, 0, 0, '输入只有一个字符。\n', '在单独的一行中输出该字符的ASCII码值。\n', 1, 13, 'ymc', 3, 'a\n', '9');
INSERT INTO `problem` VALUES (420, '四则运算', '<p>从键盘读入两个整数，计算这两个整数的和、差、积、商。<span>在屏幕上输出计算公式。每行一个公式。</span></p>\r\n<p><span><strong>在每行行末输出一个换行符。</strong></span></p>', '[{\'in\': \'1024 32\\n\', \'out\': \'1024+32=1056\\n1024-32=992\\n1024*32=32768\\n1024/32=32\\n\'}]', 1, 0, 0, '<p>输入为两个整数。</p>', '<p>输出总共有4行。<br />第1行输出这两个数的和的公式。<br />第2行输出这两个数的差的公式。<br />第3行输出这两个数的积的公式。<br />第4行输出这两个数的商的公式。<br />每行的行尾均有一个换行符。</p>', 1, 13, 'ymc', 1, '6 2\r\n\r\n', '6');
INSERT INTO `problem` VALUES (421, '混合运算\n', '<p><span>写一个程序，计算1.47*(32.54-32.1)值，并在计算机屏幕上输出。</span><br /><span><strong>要求输出结果后再输出一个换行符。</strong></span></p>\n', '[{\'in\': \'\', \'out\': \'0.6468\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>写一个程序，计算1.47*(32.54-32.1)值，并在计算机屏幕上输出。<span style=\"color: #ff0000;\"><strong>结果保留4位小数。</strong></span><br /><strong>要求输出结果后再输出一个换行符。</strong></p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\n', '0');
INSERT INTO `problem` VALUES (422, '水仙花数\n', '<p>我们知道，如果一个数是水仙花数，当且仅当它的各位数字的三次方的和与这个数相等。 如，153 = 1<sup>3</sup> + 5<sup>3</sup> + 3<sup>3</sup>，则153是水仙花数。</p>', '[{\'in\': \'370\\n\', \'out\': \'Yes\\n\'}, {\'in\': \'125\\n\', \'out\': \'No\\n\'}, {\'in\': \'153\\n\', \'out\': \'Yes\\n\'}]', 1, 0, 0, '<p>输入只有一行，是一个三位数N（100&lt;=N&lt;=999）</p>', '<p>输出只有一行，如果输入的这个数是水仙花数，则输出&ldquo;Yes&rdquo;，否则输出&ldquo;No&rdquo;.</p>', 1, 13, 'ymc', 3, '153\r\n\r\n', 'Y');
INSERT INTO `problem` VALUES (423, '大小判定\n', '给定两个整数a和b，判定两个数的大小关系。\n', '[{\'in\': \'1000 1000\\n\', \'out\': \'=\\n\'}, {\'in\': \'1123 3457\\n\', \'out\': \'<\\n\'}, {\'in\': \'-212 -10241\\n\', \'out\': \'>\\n\'}]', 1, 0, 0, '输入只有一行，这一行中有两个由空格分开的整数。\n', '如果前一个数比后一个数大，在单独的一行中输出>;如果前一个数比后一个数小，则输出<;如果相等，则输出=。\n', 1, 13, 'ymc', 3, '1 2\r\n\n', '<');
INSERT INTO `problem` VALUES (424, '整数排序\n', '输入三个整数 x, y, z, 请把这三个数由小到大输出！\n', '[{\'in\': \'9 4 1\\n\', \'out\': \'1 4 9\\n\'}, {\'in\': \'99 66 88\', \'out\': \'66 88 99\\n\'}, {\'in\': \'23 34 12\', \'out\': \'12 23 34\\n\'}]', 1, 0, 0, '输入只有一组测试数据，包含三个整数，中间用空格隔开！\n', '将这三个数从小到达输出到一行，中间用空格隔开。\n', 1, 13, 'ymc', 3, '4 7 1\r\n\n', '1');
INSERT INTO `problem` VALUES (425, '判断能否构成三角形\n', '给定三条边，请你判断一下能不能组成一个三角形。\n', '[{\'in\': \'1 2 3\\n\', \'out\': \'NO\\n\'}, {\'in\': \'2 2 2\\n\', \'out\': \'YES\\n\'}, {\'in\': \'3 5 7\\n\', \'out\': \'YES\\n\'}, {\'in\': \'2 4 6\\n\', \'out\': \'NO\\n\'}]', 1, 0, 0, '输入一个测试数据，包含三个正数A,B,C。其中A,B,C <1000;\n', '对于每个测试实例，如果三条边长A,B,C能组成三角形的话，输出YES，否则NO。 \n', 1, 13, 'ymc', 4, '1 2 3\r\n\n', 'N');
INSERT INTO `problem` VALUES (426, '闰年\n', '<div class=\"para\">闰年是指年份能整除4且不能整除100的（如2004年就是闰年,1901年不是闰年）；或者年份能整除400的是闰年(如2000年是闰年，1900年不是闰年)。</div>\r\n<div class=\"para\"><span>给定一个4位整数，表示年份，如果该年是闰年，在单独的一行中输出yes，否则在单独单独一行中输出no。</span></div>\n', '[{\'in\': \'1900\\n\', \'out\': \'no\\n\'}, {\'in\': \'1996\\n\', \'out\': \'yes\\n\'}, {\'in\': \'1600\\n\', \'out\': \'yes\\n\'}]', 1, 0, 0, '<p><span>输入只有1个整数n。</span></p>\n', '<p><span>如果该年是闰年，在</span><strong><span>单独的一行中</span></strong><span>输出yes，否则在单独的一行中输出no</span><span>。</span></p>\n', 1, 13, 'ymc', 3, '2004\r\n\n', 'y');
INSERT INTO `problem` VALUES (427, '方程求根\n', '<p>给定方程的系数a，b，c，求一元二次方程 a*x<sup>2</sup>+b*x+c=0 的根。</p>', '[{\'in\': \'2.2 8.5 3.5\\n\', \'out\': \'-0.47 -3.40\\n\'}, {\'in\': \'1 2 3\', \'out\': \'no\\n\'}, {\'in\': \'1 4 4\\n\', \'out\': \'-2.00\\n\'}]', 1, 0, 0, '<p>输入只有三个浮点数，之间用空格分开。</p>', '<p>如果方程没有实数解，则输出no, 如果方程有两个相同的实数解，则单独的一行中输出该值，结果保留2位小数。 如果有两个不同的实数解，则在单独一行中输出，中间用一个空格分开，结果保留2位小数。大的在前，小的在后。</p>', 1, 13, 'ymc', 3, '2.2 8.5 3.5\r\n\r\n', '-');
INSERT INTO `problem` VALUES (428, '简单计算\n', '定义f(A)=1,f(a)=-1,f(B)=2,f(b)=-2,...f(Z)=26,f(z)=-26;\r\n给定一个字母x和一个整数y，求表达式f(x)+y的值。\n', '[{\'in\': \'R 1\\n\', \'out\': \'19\\n\'}, {\'in\': \'g 3\\n\', \'out\': \'-4\\n\'}, {\'in\': \'p 2\\n\', \'out\': \'-14\\n\'}]', 1, 0, 0, '输入数据包括一个字母x和一个整数y，数据之间有一个空格。\n', '在单独的一行中给出f(x)+y的值。\n', 1, 13, 'ymc', 3, 'R 1\n', '1');
INSERT INTO `problem` VALUES (429, '鸡兔同笼\n', '<p>一个笼子里面关了鸡和兔子(鸡有 2 只脚,兔子有 4 只脚,没有例外)。已经知道了笼子里面脚的总数 a,问笼子里面至少有多少只动物,至多有多少只动物</p>', '[{\'in\': \'32700\\n\', \'out\': \'8175 16350\\n\'}, {\'in\': \'30\\n\', \'out\': \'8 15\\n\'}, {\'in\': \'3\\n\', \'out\': \'0 0\\n\'}]', 1, 0, 0, '<p>输入只有一组测试数据，每组测试数据占 1 行,包括一个正整数 a (a &lt; 32768)。</p>', '<p>输出是两个正整数,第一个是最少的动物数,第二个是最多的动物数,两个正整数用空格分开。如果没有满足要求的情况出现,则输出 2 个 0。<strong>注意，2个0之间也有空格。</strong></p>', 1, 13, 'ymc', 3, '20\r\n\r\n', '5');
INSERT INTO `problem` VALUES (430, '打印水仙花数', '打印所有的“水仙花数”，所谓“水仙花数”是指一个3位数，其各位数字的立方和等于该数本身，例如，153是水仙花数，因为153＝1×1×1＋5×5×5＋3×3×3。', '[{\'in\': \'\', \'out\': \'153\\n370\\n371\\n407\\n\'}]', 1, 0, 0, '无输入。', '输出所有水仙花数，每行输出一个水仙花数。', 1, 13, 'ymc', 1, '', '输');
INSERT INTO `problem` VALUES (431, '求公式的值(I)\n', '<p>给定一个正整数n，求一下公式的值 1+1/2+1/3+1/4+...+1/n。</p>', '[{\'in\': \'5\\n\', \'out\': \'2.283\\n\'}, {\'in\': \'10\\n\', \'out\': \'2.929\\n\'}]', 1, 0, 0, '<p>输入只有一个正整数n。</p>', '<p>在单独的一行中输出公式的值，结果保留3位小数。</p>', 1, 13, 'ymc', 2, '5\r\n\r\n', '2');
INSERT INTO `problem` VALUES (432, '温度转换\n', '已知道华氏温度与摄氏温度转换公式C=(5/9)(F-32)，其中C为摄氏温度，F为华氏温度。请写一个程序给出华氏温度为0，20，40，...,300时对应的摄氏温度：\r\n0    -17\r\n20    -6\r\n40    4\r\n60    15\r\n80    26\r\n100    37\r\n120    48\r\n140    60\r\n160    71\r\n180    82\r\n200    93\r\n220    104\r\n240    115\r\n260    126\r\n280    137\r\n300    148\r\n\n', '[{\'in\': \'\', \'out\': \'0    -17\\n20    -6\\n40    4\\n60    15\\n80    26\\n100    37\\n120    48\\n140    60\\n160    71\\n180    82\\n200    93\\n220    104\\n240    115\\n260    126\\n280    137\\n300    148\\n\'}]', 1, 0, 0, '无输入\n', '总共16行，每行两个整数，第一个整数是华氏温度，第二个整数是与之对应的摄氏温度。两个整数之间用4个空格隔开，第二个整数后面没有空格。\n', 1, 13, 'ymc', 1, '\n', '0');
INSERT INTO `problem` VALUES (433, '求12以内n的阶乘 \n', '<p>给定一个非负整数n(n&lt;=12)，求n的阶乘。</p>\n', '[{\'in\': \'3\\n\', \'out\': \'6\\n\'}, {\'in\': \'5\\n\', \'out\': \'120\\n\'}, {\'in\': \'6\\n\', \'out\': \'720\\n\'}, {\'in\': \'12\\n\', \'out\': \'479001600\\n\'}]', 1, 0, 0, '<p>只有一行输入，整数n（n&lt;=12）。</p>\n', '<p>在单独的一行中输出数值n!。</p>\n', 1, 13, 'ymc', 4, '3\r\n\n', '6');
INSERT INTO `problem` VALUES (434, '\n自由落体\r\n\n', '\n一个球从高为x的空中落下，每次落地后反跳回原高度的一半再落下。求它在第n次落地时总共经过的距离。\r\n\n', '[{\'in\': \'100 10\\n\', \'out\': \'299.609375\\n\'}, {\'in\': \'1000 13\\n\', \'out\': \'2999.511719\\n\'}, {\'in\': \'1024 15\\n\', \'out\': \'3071.875000\\n\'}]', 1, 0, 0, '\n测试数据只有一行，该行由两个数组成。第一个数是实数，表示球初始的高度，第二个是正整数n。\r\n\n', '\n在单独的一行中输出球第n次落地是经过的总距离，结果保留6位小数。\r\n\n', 1, 13, 'ymc', 3, '\n100 10\r\n\n', '\n');
INSERT INTO `problem` VALUES (435, '多个数的平均值\n', '确定用户输入的m个数的平均值。\n', '[{\'in\': \'4\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'4.00\\n-5.00\\n5.50\\n9.30\\n\'}]', 1, 0, 0, '先给出数据的组数T，对于每组数据，输入有两行，第一行是用户要输入的数的个数m，第二行是m个用空格隔开的int类型整数。\n', '每组输入数据输出只有一行，为用户输入的m个数的平均数，用double类型表示，保留两位小数。\n', 1, 13, 'ymc', 1, '2 \n5\n2 3 7 5 3\n2 \n-1 -9\n\n', '4');
INSERT INTO `problem` VALUES (436, '顺序输出整数的各位数字(循环)\n\n', '<p>输入n个正整数，按顺序输出各位数。</p>', '[{\'in\': \'5\\n1256\\n0\\n1545\\n123\\n123456789\\n\', \'out\': \'1 2 5 6 \\n0 \\n1 5 4 5 \\n1 2 3 \\n1 2 3 4 5 6 7 8 9 \\n\'}]', 1, 0, 0, '<p>第一行为正整数的个数n. 以下为n个正整数。</p>', '<p>对于每个整数，在单独的一行中输出每个整数的分解，每个数字后有一空格。</p>', 1, 13, 'ymc', 1, '3\r\n1256\r\n0\r\n1545\r\n\r\n\r\n', '1');
INSERT INTO `problem` VALUES (437, 'Fibonacci数列\n', '1202年，意大利数学家Fibonacci出版了他的「算盘全书」。他在书中提出了一个关于兔子繁殖的问题：\r\n如果一对兔子每月能生一对小兔（一雄一雌），而每对小兔在他出生后的第三個月裡，又能开始生一对小兔，假定在不发生死亡的情況下，由一对出生的小兔开始始，50個月后会有多少对兔子？ \r\n我们可以总结出fibonacci数列的定义如下:\r\n\r\nf(0) = 0\r\nf(1) = 1\r\nf(n) = f(n-1) + f(n-2)\r\n\r\n写一个程序输出f(n)的值（0≤n≤46)\n', '[{\'in\': \'3\\n4\\n5\\n-1\\n\', \'out\': \'2\\n3\\n5\\n\'}, {\'in\': \'46\\n45\\n44\\n30\\n-1\\n\\n\', \'out\': \'1836311903\\n1134903170\\n701408733\\n832040\\n\'}]', 1, 0, 0, '有多组测试数据，每组测试数据为单独一行，这一行中只有一个整数n(0≤n≤46)，如果输入是-1，表示输入结束。-1不用处理。\n', '对每组测试数据，在单独的一行中输出f(n)。\n', 1, 13, 'ymc', 2, '3\r\n4\r\n5\r\n-1\r\n\n', '2');
INSERT INTO `problem` VALUES (438, '设计菱形\n', '编写一个程序，打印一个菱形（如样例输出所示）。\n', '[{\'in\': \'9\\n\', \'out\': \'----*----\\n---***---\\n--*****--\\n-*******-\\n*********\\n-*******-\\n--*****--\\n---***---\\n----*----\\n\'}, {\'in\': \'3\\n\', \'out\': \'-*-\\n***\\n-*-\\n\'}]', 1, 0, 0, '输入只有一个1~19范围内的奇数n。\n', '打印一个菱形，菱形行数为n。\n', 1, 13, 'ymc', 2, '9\r\n\n', '-');
INSERT INTO `problem` VALUES (439, '加密', '<p>给定一行由文本，把这行文本加密后输出。 这里的加密算法非常简单：小写字母a,b,c,...,z转化为1,2,3,...,26后输出。大写字母A,B,C,...,Z转化为27,28,29,...,52后输出，其它所有的字符保持不变。</p>', '[{\'in\': \'4\\nHello,\\nWelcome to c!\\nThis is only a text case,\\nAnd Only A test,Please Take Easy!^_^...\\n\', \'out\': \'345121215,\\n49512315135 2015 3!\\n468919 919 15141225 1 2052420 31195,\\n27144 41141225 27 2051920,421251195 461115 3111925!^_^...\\n\'}]', 1, 0, 0, '<p>输入有若干行，第一行是一个正整数n，表示有n行文本要加密，接下来总共n行文本。</p>', '<p>把输入的文本加密后输出。</p>', 1, 13, 'ymc', 1, '2\r\nHello,\r\nWelcome to c!', '3');
INSERT INTO `problem` VALUES (440, '水仙花数', '<p>春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的： &ldquo;水仙花数&rdquo;是指一个三位数，它的各位数字的立方和等于其本身，比如：153=1^3+5^3+3^3。 现在要求输出所有在m和n范围内的水仙花数。</p>', '[{\'in\': \'2\\n100 120\\n300 380\\n\', \'out\': \'no\\n370 371\\n\'}, {\'in\': \'1\\n100 999\\n\', \'out\': \'153 370 371 407\\n\'}]', 1, 0, 0, '<p>输入数据有多组，第一行是一个正整数t，表示有t组测试数据，每组测试数据输入占一行，包括两个整数m和n（100&lt;=m&lt;=n&lt;=999）。</p>', '<p>对于每组测试数据，要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于m,并且小于等于n，如果有多个，则要求从小到大排列在一行内输出，之间用一个空格隔开; 如果给定的范围内不存在水仙花数，则输出no;每组测试数据的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n100 120\r\n300 380\r\n\r\n\r\n', 'n');
INSERT INTO `problem` VALUES (441, '素数\n', '素数是只能被1和自己整除的整数。例如2，3，5和7是素数，4，6，8，9不是素数。给定一个正整数，判定该整数是否为素数。\r\n\r\n', '[{\'in\': \'5\\n2\\n7\\n9\\n19\\n29\\n\', \'out\': \'yes\\nyes\\nno\\nyes\\nyes\\n\'}, {\'in\': \'5\\n1111\\n1234\\n9999\\n13\\n17\\n\', \'out\': \'no\\nno\\nno\\nyes\\nyes\\n\'}, {\'in\': \'3\\n2\\n7\\n9\\n\', \'out\': \'yes\\nyes\\nno\\n\'}]', 1, 0, 0, '第一行一个正整数T，表示有T组测试数据。以下有T行，每行有一个正整数a(a<10000)。\r\n\r\n', '每组测试数据输出一行，如果输入的正整数是素数，输出yes，否则输出no。\r\n\r\n', 1, 13, 'ymc', 3, '3\r\n2\r\n7\r\n9\r\n\r\n\r\n', 'y');
INSERT INTO `problem` VALUES (442, '不要62', '<p>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。 杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。 不吉利的数字为所有含有4或62的号码。例如： 62315 73418 88914 都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。 你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。</p>', '[{\'in\': \'1 100\\n0 0\\n\', \'out\': \'80\\n\'}, {\'in\': \'103 1000\\n0 0\\n\', \'out\': \'629\\n\'}]', 1, 0, 0, '<p>输入的都是整数对n、m<strong>（0&lt;n&le;m&le;1000）</strong>，如果遇到都是0的整数对，则输入结束。</p>', '<p>对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。</p>', 1, 13, 'ymc', 2, '1 100\r\n0 0\r\n', '8');
INSERT INTO `problem` VALUES (443, '同构数', '找出1至99之间的全部同构数。注：正整数n若是它平方数的尾部，则称n为同构数。例如，6是其平方数36的尾部，25是其平方数625的尾部，6与25都是同构数。', '[{\'in\': \'\', \'out\': \'1 5 6 25 76 \\n\'}]', 1, 0, 0, '无', '输出全部同构数 每个数后面输出一个空格。', 1, 13, 'ymc', 1, '', '1');
INSERT INTO `problem` VALUES (444, '直角三角形', '三条边的边长均为整数的直角三角形称为整数直角三角形。\r\n给定一个整数n，求斜边的边长不超过n的所有整数直角三角形的个数。\r\n要求：\r\n1、编写判断能否成三角形的函数。', '[{\'in\': \'10\\n5\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n\', \'out\': \'case#1\\n1\\ncase#2\\n2\\ncase#3\\n6\\ncase#4\\n11\\ncase#5\\n16\\ncase#6\\n20\\ncase#7\\n26\\ncase#8\\n33\\ncase#9\\n39\\ncase#10\\n47\\n\'}]', 1, 0, 0, '输入有多行。\r\n第一行是一个整数T，表示有T个测试数据。\r\n接下来的T行，每行有一个正整数n。\r\n\r\n', '每个测试数据的输出有两行，第一行先输出测试数据的编号，格式如case#i,其中i为测试数据编号。\r\n第二行是一个整数，表示对应的整数直角三角形的个数。\r\n\r\n', 1, 13, 'ymc', 1, '4\r\n5\r\n10\r\n20\r\n30\r\n\r\n', 'c');
INSERT INTO `problem` VALUES (445, 'n次方', '<pre><span style=\"white-space: normal;\">给定一个整数x和整数n，求x的n次方的值。</span></pre>\r\n<pre><span style=\"white-space: normal;\">要求，自己写一个函数计算次方。</span></pre>', '[{\'in\': \'3 5\\n\', \'out\': \'243\\n\'}]', 1, 0, 0, '<p>输入只有两个整数x和n。</p>', '<p>在单独的一行中输出x<sup>n</sup>的值。</p>', 1, 13, 'ymc', 1, '2 3\r\n\r\n', '8');
INSERT INTO `problem` VALUES (446, '各位数字之和', '<pre><span style=\"white-space: normal;\">给定一个整数n，求n的各位数字之和，比如123，其各位数字之和为1+2+3=6，结果为6.</span></pre>\r\n<pre><span style=\"white-space: normal;\">要求：编写一个函数计算一个整数的各位数字之和。</span></pre>', '[{\'in\': \'123457\', \'out\': \'22\\n\'}]', 1, 0, 0, '<p>输入只有一个正整数。</p>', '<p>在单独的一行中输出该整数的各位数字之和。</p>', 1, 13, 'ymc', 1, '123\r\n', '6');
INSERT INTO `problem` VALUES (447, '分拆素数和', '把一个偶数拆成两个不同素数的和，有几种拆法呢？', '[{\'in\': \'30\\n26\\n0\\n\', \'out\': \'3\\n2\\n\'}, {\'in\': \'546\\n1456\\n788\\n444\\n122\\n2\\n46\\n1234\\n0\\n\', \'out\': \'30\\n34\\n15\\n21\\n3\\n0\\n3\\n24\\n\'}]', 1, 0, 0, '输入包含一些正的偶数，其值不会超过2000，个数不会超过50，若遇0，则结束。', '对应每个偶数，输出其拆成不同素数的个数，每个结果占一行。', 1, 13, 'ymc', 2, '30\n26\n0\n', '3');
INSERT INTO `problem` VALUES (448, '亲和数', '古希腊数学家毕达哥拉斯在自然数研究中发现，220的所有真约数(即不是自身的约数)之和为：\r\n\r\n1+2+4+5+10+11+20+22+44+55+110＝284。\r\n\r\n而284的所有真约数为1、2、4、71、 142，加起来恰好为220。人们对这样的数感到很惊奇，并称之为亲和数。一般地讲，如果两个数中任何一个数都是另一个数的真约数之和，则这两个数就是亲和数。\r\n\r\n要求：\r\n1、编写一个数的所有因子和的函数。\r\n\r\n', '[{\'in\': \'2\\n220 284\\n100 200\\n\', \'out\': \'YES\\nNO\\n\'}, {\'in\': \'4\\n26 53\\n157 69\\n15 48\\n36 59\\n\', \'out\': \'NO\\nNO\\nNO\\nNO\\n\'}]', 1, 0, 0, '输入数据第一行包含一个数M，接下有M行，每行一个实例,包含两个整数A,B； 其中 0 <= A,B <= 600000 ;\r\n', '对于每个测试实例，如果A和B是亲和数的话输出YES，否则输出NO。\r\n', 1, 13, 'ymc', 2, '2\r\n220 284\r\n100 200\r\n\r\n', 'Y');
INSERT INTO `problem` VALUES (449, '打印完数 ', '一个数如果恰好等于它的因子之和，这个数就成为“完数”。例如，6的因子为1、2、3，而6＝1＋2＋3，因此6是“完数”。编程序打印出1000之内（包括1000）所有的完数，并按如下格式输出其所有因子：\r\n\r\n6 its factors are 1 2 3 \r\n要求：\r\n1、编写判断一个数是否为完数的函数。\r\n', '[{\'in\': \'\', \'out\': \'6 its factors are 1 2 3 \\n28 its factors are 1 2 4 7 14 \\n496 its factors are 1 2 4 8 16 31 62 124 248 \\n\'}]', 1, 0, 0, '无输入\r\n', '输出1000以内所有的完数及其因子，每行一个完数，每个因子后面有一个空格。\r\n', 1, 13, 'ymc', 1, '无输入\r\n', '按');
INSERT INTO `problem` VALUES (450, '自整除数 ', '<p>对一个整数n，如果其各个位数的数字相加得到的数m能整除n，则称n为自整除数。 如21，21%(2+1)==0，所以21是自整除数。 现求出从10到n(n&lt;100)之间的所有自整除数。</p>\r\n<p>要求： 编写一个求各位数的和的函数。</p>', '[{\'in\': \'47\\n\', \'out\': \'10\\n12\\n18\\n20\\n21\\n24\\n27\\n30\\n36\\n40\\n42\\n45\\n\'}, {\'in\': \'30\\n\', \'out\': \'10\\n12\\n18\\n20\\n21\\n24\\n27\\n30\\n\'}, {\'in\': \'70\\n\', \'out\': \'10\\n12\\n18\\n20\\n21\\n24\\n27\\n30\\n36\\n40\\n42\\n45\\n48\\n50\\n54\\n60\\n63\\n70\\n\'}]', 1, 0, 0, '<p>输入只有单独一行的一个整数n(<strong>10&lt;=n&lt;100</strong>)。</p>', '<p>输出有多行。 按从小到大的顺序输出所有大于等于10，小于等于n的自整除数，每行一个自整除数。</p>', 1, 13, 'ymc', 3, '47\r\n\r\n', '1');
INSERT INTO `problem` VALUES (451, '第几天？', '<p>给定一个日期，输出这个日期是该年的第几天。 要求： 1、编写计算第几天的函数。</p>', '[{\'in\': \'2\\n1985/1/20\\n2006/3/12\\n\', \'out\': \'20\\n71\\n\'}, {\'in\': \'8\\n2008/2/28\\n2008/1/1\\n2080/2/29\\n1980/2/29\\n1999/2/28\\n2000/3/1\\n2004/3/1\\n1000/3/1\\n\', \'out\': \'59\\n1\\n60\\n60\\n59\\n61\\n61\\n60\\n\'}]', 1, 0, 0, '<p>输入数据有多组，输入第一行是一个正整数n，表示有n组测试数据。每组测试数据输入占一行，数据格式为YYYY/MM/DD组成，YYYY是4位的年份，MM是2位或者1位的月份，DD是2位或者1位的日期 。可以向你确保所有的输入数据是合法的。</p>', '<p>对于每组输入数据，输出一行，表示该日期是该年的第几天。</p>', 1, 13, 'ymc', 2, '2\r\n1985/1/20\r\n2006/3/12\r\n\r\n\r\n', '2');
INSERT INTO `problem` VALUES (452, '计算函数的值', '<p>编写一个递归函数（或非递归函数），计算如下定义的函数f： （1）当x为负数时，f(x, y) = x + y； （2）当x为非负数时，f(x, y) = f(x-1, x+y) + x/y 。 其中，x（x不大于1000），y都是实数，f的值也是实数。 要求： 1、编写一个递归函数。</p>', '[{\'in\': \'3\\n0 3.14\\n1 1\\n-1 5.7857\', \'out\': \'2.14\\n2.00\\n4.79\\n\'}, {\'in\': \'3\\n100.56 3.14\\n-100.56 3.14\\n1000 998\\n\', \'out\': \'5145.71\\n-97.42\\n501503.79\\n\'}]', 1, 0, 0, '<p>输入数据有多组，输入第一行是一个正整数n，表示有n组测试数据，每组测试数据输入占一行，由两个实数（即x，y）组成。</p>', '<p>对于每组输入数据，输出一行，结果保留两位小数。</p>', 1, 13, 'ymc', 2, '3\r\n0 3.14\r\n1 1\r\n-1 5.7857', '2');
INSERT INTO `problem` VALUES (453, '约瑟夫问题', '约瑟夫问题:有n只猴子,按顺时针方向围成一圈选大王(编号从1到n)  ,从第1号开始报数, 一直数到m,数到m的猴子退出圈外, 剩下的猴子再接着从 1 开始报数。就这样,直到圈内只剩下一只猴子时,这个猴子就是猴王,编程求输入n,m后,输出最后猴王的编号。\r\n', '[{\'in\': \'6 2\\n12 4\\n8 3\\n0 0\\n\', \'out\': \'5\\n1\\n7\\n\'}, {\'in\': \'12 200\\n299 299\\n234 1\\n124 234\\n145 43\\n19 113\\n0 0\\n\', \'out\': \'2\\n146\\n234\\n50\\n126\\n2\\n\'}]', 1, 0, 0, '每行是用空格分开的两个整数,第一个是 n, 第二个是 m ( 0 < m, n < 300)。最后一行是:\r\n   0 0\r\n', '对于每行输入数据(最后一行除外),输出数据也是一行,即最后猴王的编号', 1, 13, 'ymc', 2, '6 2\r\n12 4\r\n8 3\r\n0 0\r\n', '5');
INSERT INTO `problem` VALUES (454, '谁是最大数\n', '确定用户输入的m个整数中的最大的数。\n', '[{\'in\': \'4\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'7\\n-1\\n10\\n32\\n\'}]', 1, 0, 0, '先给出数据的组数T，对于每组数据，输入有两行，第一行是用户要输入的整数个数m， 第二行为m个用空格隔开的整数。\n', '每组数据输出只有一行，为用户输入的m个数中最大的数。\n', 1, 13, 'ymc', 1, '2\n5\n2 3 7 5 3\n2\n-1 -9\n', '7');
INSERT INTO `problem` VALUES (455, '平均数和标准差', '<p>求n个数的平均数和标准差。给定n个数X1 ,X2 ,X3 ......Xn ,数据的平均数为x，标准差定义如下：</p>', '[{\'in\': \'2\\n8 1 2 3 4 5 10 11 12\\n4 10 20 30 25\\n\', \'out\': \'6.000 4.062\\n21.250 7.395\\n\'}]', 1, 0, 0, '<p>第一行一个正整数T，表示有T组测试数据。以下每行是一组数，第一个数为数据个数m(m&lt;200)，然后是m个正整数构成，</p>', '<p>对于每组数据输出一行，即平均数和标准差，两个数据均保留3位小数，并且以一个空格隔开。</p>', 1, 13, 'ymc', 1, '2\r\n5 1 1 1 1 1\r\n6 1 2 3 4 6 5\r\n\r\n', '1');
INSERT INTO `problem` VALUES (456, '二进制\n', '给定一个十进制的正整数n(0 < n < 1000)，把这个十进制数转化为二进制数。\r\n\n', '[{\'in\': \'1\\n2\\n3\\n\', \'out\': \'1\\n10\\n11\\n\'}, {\'in\': \'12\\n345\\n75\\n68\\n96\\n222\\n\', \'out\': \'1100\\n101011001\\n1001011\\n1000100\\n1100000\\n11011110\\n\'}]', 1, 0, 0, '有多组测试数据，每组测试数据输入只有一个正整数n。处理到文件结束（EOF）。\r\n\n', '对每组测试数，在单独的一行中输出对应的二进制数。\r\n\n', 1, 13, 'ymc', 2, '1\r\n2\r\n3\r\n\n', '1');
INSERT INTO `problem` VALUES (457, '数列有序!\n', '有n(n<=100)个整数，已经按照从小到大顺序排列好了，现在另外给一个整数x，请将该数插入到序列中，并使新的序列仍然有序。\n', '[{\'in\': \'3 3\\n1 2 4\\n0 0\\n\', \'out\': \'1 2 3 4\\n\'}, {\'in\': \'4 6\\n1 3 9 10\\n4 2\\n3 5 7 9\\n6 3\\n1 2 3 4 5 6\\n0 0\\n\', \'out\': \'1 3 6 9 10\\n2 3 5 7 9\\n1 2 3 3 4 5 6\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每组数据由两行组成，第一行是n和m，第二行是已经有序的n个数的数列。n和m同时为0表示输入数据结束，本行不做处理。\n', '对于每个测试实例，输出插入新的元素后的数列，每个元素之间有一个空格。\n', 1, 13, 'ymc', 2, '3 3\r\n1 2 4\r\n0 0\r\n\n', '1');
INSERT INTO `problem` VALUES (458, '行列互换\n', '将一个整数矩阵的行和列互换。\n', '[{\'in\': \'2\\n5 6\\n43 643 1 65 3 5\\n-43 4 -4 0 53 423 \\n5 64 2 -99 44 40\\n4 -32 43 542 5 4\\n42 4 2 -9 43 87\\n1 1\\n2\\n\', \'out\': \'43 -43 5 4 42 \\n643 4 64 -32 4 \\n1 -4 2 43 2 \\n65 0 -99 542 -9 \\n3 53 44 5 43 \\n5 423 40 4 87 \\n\\n2 \\n\\n\'}, {\'in\': \'1\\n2 3\\n3 3 9\\n4 5 4\\n\', \'out\': \'3 4 \\n3 5 \\n9 4 \\n\\n\'}]', 1, 0, 0, '第一行是测试数据的组数。以下每组数据的首行是矩阵的行数和列数（行和列的数目均不大于100），之后为矩阵。\n', '对输入的每组测试数据，将矩阵行列互换输出，每组后面有一个空行。矩阵中的每个数据之后有一个空格。\n', 1, 13, 'ymc', 2, '2\n3 2\n11 22\n33 44\n55 66\n3 3\n11 12 13\n21 22 23\n31 32 33\n\n', '1');
INSERT INTO `problem` VALUES (459, '作业七 循环移动', '<p>给定一组整数，要求利用数组把这组数保存起来，再利用指针实现对数组中的数循环移动。假定共有n个整数，则要使前面各数顺序向后移m个位置，并使最后m各数变为最前面的m各数。</p>', '[{\'in\': \'11 4\\n15 3 76 67 84 87 13 67 45 34 45\\n\', \'out\': \'67 45 34 45 15 3 76 67 84 87 13\\n\'}, {\'in\': \'20 8\\n20 30 40 50 60 1 2 3 4 5 100 110 120 1000 1500 1600 10000 12345 7 8\\n\', \'out\': \'120 1000 1500 1600 10000 12345 7 8 20 30 40 50 60 1 2 3 4 5 100 110\\n\'}]', 1, 0, 0, '<p>输入有两行：第一行包含一个正整数n和一个正整数m，第二行包含n个正整数。每两个正整数中间用一个空格分开。</p>', '<p>输出有一行：经过循环移动后数组中整数的顺序依次输出，每两个整数之间用空格分隔。</p>', 1, 13, 'ymc', 2, '11 4\r\n15 3 76 67 84 87 13 67 45 34 45\r\n\r\n', '6');
INSERT INTO `problem` VALUES (460, '字符串比较\n', '<p>编一程序，将两个字符串s1和s2比较，若s1&gt;s2，输出一个正数；若s1=s2，输出0；若<strong>s1&lt;s2</strong>，输出一个负数。 两个字符串用gets函数读入。两个字符串的长度不超过1000。 输出的正数或负数应是相比较的两个字符串相应字符的ASCII码的差值。如果两个字符串中有多个相应的字符不等，则取第一次相应不等的字符串的差值。 例如，&ldquo;A&rdquo;与&ldquo;C&rdquo;相比，由于&ldquo;A&rdquo;&lt;&ldquo;C&rdquo;，应输出负数，同时由于&lsquo;A&rsquo;与&lsquo;C&rsquo;的ASCII码差值为2，因此应输出&ldquo;-2&rdquo;。 同理：&ldquo;And&rdquo;和&ldquo;Aid&rdquo;比较，根据第2个字符比较结果，&ldquo;n&rdquo;比&ldquo;i&rdquo;大5，因此应输出&ldquo;5&rdquo;。</p>\n', '[{\'in\': \'3\\nA\\nC\\nAnd\\nAid\\nThe Internet developers wanted to make a networking protocol that had serious longevity\\nThe Internet developers So they had to define a large enough IP address space to last well\\n\', \'out\': \'-2\\n5\\n36\\n\'}]', 1, 0, 0, '<p>输入数据第一行包含一个数n，表示有n组测试数据。 其中每组数据包括两行： 第一行是字符串s1，第二行是字符串s2。</p>\n', '<p>对于每组测试数据，输出s1与s2比较的结果。</p>\n', 1, 13, 'ymc', 1, '2\r\nA\r\nC\r\nAnd\r\nAid\n', '-');
INSERT INTO `problem` VALUES (461, '进制转换\n', '<p>输入一个十进制数N，将它转换成R进制数输出。</p>', '[{\'in\': \'7 2\\n23 12\\n-4 3\\n1000 24\\n10000 30\\n0 12\\n\', \'out\': \'111\\n1B\\n-11\\n1HG\\nB3A\\n0\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例，每个测试实例包含两个整数N和R（2&lt;=R&lt;=36).</p>', '<p>为每个测试实例输出转换后的数，每个输出占一行。如果R大于10，则对应的数字规则参考16进制（比如，10用A表示,16用G表示等等）。</p>', 1, 13, 'ymc', 1, '7 2\r\n23 12\r\n-4 3\r\n\r\n', '1');
INSERT INTO `problem` VALUES (462, '距离', '<p>给定平面上两个点的坐标，求这两个点之间的距离。前两个数是第一个点的坐标，后两个数是第二个点的坐标。</p>', '[{\'in\': \'0 0 8 6\\n\', \'out\': \'10.00\\n\'}]', 1, 0, 0, '<p>输入为4个实数，分别表示第一个点的坐标，第二个点的坐标。</p>', '<p>输出两个点的距离，结果保留2位小数。</p>', 1, 13, 'ymc', 1, '0 0 3 4\r\n', '5');
INSERT INTO `problem` VALUES (463, '文件合并', '<p>有两个磁盘文件&ldquo;in1.txt&rdquo;和&ldquo;in2.txt&rdquo;，各存放一行字母（有大写字母  也有  小写字母），今要求把这两个文件中的信息合并（按ASCII顺序码排列），输出到一个新文件&ldquo;out.txt&rdquo;中去。</p>', '[{\'in\': \'I LOVE CHINA\\nI LOVE BEIJING\\n\', \'out\': \'    ABCEEEGHIIIIIJLLNNOOVV\\n\'}, {\'in\': \'I LOVE CHINA and this is a test\\nI LOVE BEIJING and only Test\\n\', \'out\': \'            ABCEEEGHIIIIIJLLNNOOTVVaaaddeehiilnnnosssstttty\\n\'}]', 1, 0, 0, '<p>在程序所在目录下有两个文件in1.txt和in2.txt(如果没有请自己创建)，in1.txt中有一行文本，in2.txt中也有一行文本。</p>', '<p>合并in1.txt和in2.txt中的文本（按ASCII码顺序排列）保存到out.txt中。</p>', 1, 13, 'ymc', 2, 'I LOVE CHINA\r\nI LOVE BEIJING\r\n', ' ');
INSERT INTO `problem` VALUES (464, '小写转大写', '从键盘输入一个字符串，将其中的小写字母全部转换成大写字母，然后输出到一个磁盘文件“out.txt”中保存。输入的字符串以“！”结束。', '[{\'in\': \'hello world!\\n\', \'out\': \'HELLO WORLD!\\n\'}, {\'in\': \'this is test and only a tets,HAHA,!\\n\', \'out\': \'THIS IS TEST AND ONLY A TETS,HAHA,!\\n\'}]', 1, 0, 0, '输入只有一行，该行的字符数目不超过100。', '把小写字母转换为大写后输出到文件“out.txt”。', 1, 13, 'ymc', 2, 'hello world!\r\n', 'H');
INSERT INTO `problem` VALUES (465, '位操作(Ⅲ)', '<p>给定一个整数x，可以得到x的二进制表示，在x的二进制表示中，最右边的位记为第0位，然后往左依次是第1位，第2位，....。</p>\r\n<p>请设计一个函数getbits(x, p, n)，它返回整数x的二进制表示中从右边数第p位开始再向右数n位的字段。n与p都是合理的正值。</p>\r\n<p>例如，getbits(114, 5, 2)返回1。</p>\r\n<p>因为18的二进制表示如下</p>\r\n<p>二进制：0 1 1 1 0 0 1 0</p>\r\n<p>位编号：7 6 5 4 3 2 1 0</p>\r\n<p>则右边起第5位开始往右2位分别为第5位和第4位，对应的二进制为11（对应十进制是3）。</p>', '[{\'in\': \'18\\n5 2\\n24\\n4 3\\n1000\\n10 5\\n2000\\n20 10\\n65535\\n10 5\\n\', \'out\': \'1\\n6\\n15\\n0\\n31\\n\'}]', 1, 0, 0, '<p>输入数据有多组。</p>\r\n<p>每组第一行，是一个整数x（0&lt;=x&lt;=65535）；</p>\r\n<p>第二行是两个整数p,n，它们以空格隔开，表示从右边数第p位开始向右数n位。</p>', '<p>对于每组输入数据，输出一行。</p>', 1, 13, 'ymc', 1, '114\r\n5 2\r\n18\r\n5 2\r\n24\r\n4 3\r\n', '3');
INSERT INTO `problem` VALUES (466, '位操作(Ⅱ)', '<p>给出两个不大于65535的非负整数，判断其中一个的16位二进制表示形式，是否能由另一个的16位二进制表示形式经过循环左移若干位而得到。 循环左移和普通左移的区别在于：最左边的那一位经过循环左移一位后就会被移到最右边去。比如： 1011 0000 0000 0001 经过循环左移一位后，变成 0110 0000 0000 0011, 若是循环左移2位，则变成 1100 0000 0000 0110</p>', '[{\'in\': \'7\\n2 4\\n9 18\\n45057 49158\\n7 12\\n4000 4500\\n1024 1\\n2048 2\\n\', \'out\': \'YES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\n\'}]', 1, 0, 0, '<p>第一行是个整数n（0 &lt; n &lt; 300000），表示后面还有n行数据。后面是n行，每行有两个不大于65535的非负整数。</p>', '<p>对于每一行的两个整数，输出一行，内容为YES或NO。</p>', 1, 13, 'ymc', 1, '4\r\n2 4\r\n9 18\r\n45057 49158\r\n7 12\r\n', 'Y');
INSERT INTO `problem` VALUES (467, '输出图形\n', '<p>让计算机显示如下图形</p>\r\n<pre>*\r\n**\r\n***\r\n****\r\n</pre>\r\n<p>注意，<span style=\"color: #ff0000;\">每一行的最后都有一个换行符</span>。&nbsp;</p>\n', '[{\'in\': \'\', \'out\': \'*\\n**\\n***\\n****\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>输出总共有4行，每行后面没有多余的空格，都有一个换行符。</p>\r\n<pre>*\r\n**\r\n***\r\n****\r\n</pre>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\n', '*');
INSERT INTO `problem` VALUES (468, '输出图形 III\n', '<p>让计算机显示如下图形</p>\r\n<pre>       *\r\n      *\r\n     *\r\n*   *\r\n * *\r\n  *\r\n</pre>\r\n<p><span style=\"color: #ff0000;\"><strong>注意每行的最后都有一个换行符。</strong></span></p>\r\n<p><span style=\"color: #000000;\"><strong>第4行先是1个*，接着三个空格，然后是一个*，最后一个换行符。</strong></span></p>\n', '[{\'in\': \'\', \'out\': \'       *\\n      *\\n     *\\n*   *\\n * *\\n  *\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>让计算机显示如下图形</p>\r\n<pre>       *\r\n      *\r\n     *\r\n*   *\r\n * *\r\n  *\r\n</pre>\r\n<p><span style=\"color: #ff0000;\"><strong>注意每行的最后都有一个换行符。</strong></span></p>\r\n<p><strong>第4行先是1个*，接着三个空格，然后是一个*，最后一个换行符。</strong></p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\r\n\n', ' ');
INSERT INTO `problem` VALUES (469, 'A+B\n', '<p>从键盘读入两个整数，计算这两个整数的和。<span style=\"color: #ff0000;\">在屏幕上输出计算公式。</span></p>\r\n<p><span style=\"color: #ff0000;\"><strong>在行末输出一个换行符。</strong></span></p>\n', '[{\'in\': \'9998 99991\', \'out\': \'9998+99991=109989\\n\'}]', 1, 0, 0, '<p>输入为两个整数。</p>\n', '<p><span>输出这两个数的和的计算公式。</span><strong>在行末输出一个换行符。</strong></p>\n', 1, 13, 'ymc', 1, '1 1\r\n\n', '1');
INSERT INTO `problem` VALUES (470, 'Hello,World II\n', '<p>让计算机<span style=\"color: #ff0000;\"><strong>在单独的一行中</strong></span>输出\"Hello,World.\"。请注意字母大小写和标点符号，输出不包括两边的引号。</p>\r\n<p><strong><span style=\"color: #ff0000;\">在单独的一行中输出输出\"Hello,World.\"即在输出\"Hello,World.\"之后再输出一个换行符。</span></strong></p>\n', '[{\'in\': \'\', \'out\': \'Hello,World.\\n\'}]', 1, 0, 0, '<p>本题无输入。</p>\n', '<p>在<span style=\"color: #ff0000;\"><strong>单独的一行中</strong></span>输出Hello,World.</p>\n', 1, 13, 'ymc', 1, '本题无输入样例\r\n\n', 'H');
INSERT INTO `problem` VALUES (471, '简单的四则运算\n', '<p>给定两个整数，输出这两个数的和、乘积、差和商。</p>', '[{\'in\': \'24 3\\n\', \'out\': \'27 72 21 8\\n\'}, {\'in\': \'1 1\\n\', \'out\': \'2 1 0 1\\n\'}]', 1, 0, 0, '<p>输入只有一行，该行包含两个用空格隔开的整数。</p>', '<p>输出为一行，这行有四个整数，分别为两个整数的和、乘积、差和商，数与数之间用一个空格隔开。</p>', 1, 13, 'ymc', 2, '24 3\r\n', '2');
INSERT INTO `problem` VALUES (472, '平均分\n', '已知学生的三门课成绩，求他三门课的平均分\n', '[{\'in\': \'60 65 70\\n\', \'out\': \'65.0\\n\'}, {\'in\': \'80 81 83\\n\', \'out\': \'81.3\\n\'}, {\'in\': \'90 91 76\\n\', \'out\': \'85.7\\n\'}]', 1, 0, 0, '输入只有一行，该行中有3个由空格分隔的整数，分别表示学生的三门课成绩。\n', '在单独的一行中输出该生的平均分，结果保留一位小数。\n', 1, 13, 'ymc', 3, '60 65 70\r\n\n', '6');
INSERT INTO `problem` VALUES (473, '圆的直径、周长和面积\n', '<p>要求读入一个圆的半径，并打印圆的直径、周长和面积。PI的取常量3.1415926。</p>', '[{\'in\': \'1\\n\', \'out\': \'2.00 6.28 3.14\\n\'}, {\'in\': \'5.4\\n\', \'out\': \'10.80 33.93 91.61\\n\'}, {\'in\': \'100.2\\n\', \'out\': \'200.40 629.58 31541.72\\n\'}]', 1, 0, 0, '<p>输入只有一行，一个double类型的数。</p>', '<p>输出只有一行，分别为圆的直径、周长和面积，分别用空格隔开，要求精确到小数点后两位。</p>', 1, 13, 'ymc', 3, '1.0\r\n\r\n', '2');
INSERT INTO `problem` VALUES (474, '温度转换\n', '<p>求华氏温度f对应的摄氏温度c，计算公式如下： c=5/9*(f-32)</p>\n', '[{\'in\': \'150\\n\', \'out\': \'65.6\\n\'}, {\'in\': \'148\\n\', \'out\': \'64.4\\n\'}, {\'in\': \'159\\n\', \'out\': \'70.6\\n\'}]', 1, 0, 0, '<p>输入只有一个表示华氏温度的整数f。</p>\n', '<p>在一行中输入对应的摄氏温度，结果保留一位小数。 注意输出用printf(\"%.1lf\\n\",..)的格式输出。</p>\n', 1, 13, 'ymc', 3, '150\r\n\n', '6');
INSERT INTO `problem` VALUES (475, '求梯形的面积\n', '<p>给定梯形的上底、下底和高，求梯形的面积。</p>', '[{\'in\': \'1 2 3\\n\', \'out\': \'4.50\\n\'}, {\'in\': \'2 4 8\\n\', \'out\': \'24.00\\n\'}, {\'in\': \'4 6 2\\n\', \'out\': \'10.00\\n\'}, {\'in\': \'3 4 5\\n\', \'out\': \'17.50\\n\'}]', 1, 0, 0, '<p>输入为一行，该行有三个整数，分别表示梯形的上底、下底和高，三个数据之间用空格隔开。</p>', '<p>在单独的一行中输出梯形的面积，结果保留2位小数。</p>', 1, 13, 'ymc', 4, '1 2 3\r\n\r\n', '4');
INSERT INTO `problem` VALUES (476, '字符交换\n', '<p>从键盘读入两个字符，交换这两个字符后输出。字符之间由一个空格分开，行末有一个换行符。</p>\n', '[{\'in\': \'z t\\n\', \'out\': \'t z\\n\'}]', 1, 0, 0, '<p>输入只有两个字符，由空格分开。</p>\n', '<p>交换输入字符后输出，字符之间有一个空格分开。行末有一个换行符。</p>\n', 1, 13, 'ymc', 1, 'a b\r\n\n', 'b');
INSERT INTO `problem` VALUES (477, 'A-B\n', '<p>给定两个浮点数，求两个浮点数的差。所有浮点数用double类型</p>\n', '[{\'in\': \'2.3 1.1\\n\', \'out\': \'1.20\\n\'}, {\'in\': \'100.99 99.09\\n\', \'out\': \'1.90\\n\'}]', 1, 0, 0, '<p>输入只有一行，只有两个浮点数a和b，中间有空格分开。</p>\n', '<p>在单独的一行中输出a-b,结果保留两位小数。</p>\n', 1, 13, 'ymc', 2, '2.3 1.1\r\n\r\n\n', '1');
INSERT INTO `problem` VALUES (478, '正方形\n', '给定一个字符，请输出一个由该字符构成的边长为4的正方形。\r\n\n', '[{\'in\': \'*\\n\', \'out\': \'****\\n*  *\\n*  *\\n****\\n\'}, {\'in\': \'$\\n\', \'out\': \'$$$$\\n$  $\\n$  $\\n$$$$\\n\'}]', 1, 0, 0, '输入只有一行，该行只有一个字符。\r\n\n', '输出一个边长为4的正方形，正方形的四条边均由输入的字符构成，正方形的内部由空格构成。\r\n\n', 1, 13, 'ymc', 2, '*\r\n\n', '*');
INSERT INTO `problem` VALUES (479, '判断闰年\n', '<p>判断某年是否是闰年。公历纪年法中，能被 4 整除不能被 100 整除，或者能被 400 整除的年份是闰年。如 1900 年是平年，2000 年是闰年。</p>', '[{\'in\': \'2000\\n\', \'out\': \'Y\\n\'}, {\'in\': \'1000\\n\', \'out\': \'N\\n\'}, {\'in\': \'2009\\n\', \'out\': \'N\\n\'}, {\'in\': \'400\\n\', \'out\': \'Y\\n\'}]', 1, 0, 0, '<p>一行,仅含一个整数 a(0 &lt; a &lt; 3000)。</p>', '<p>一行,如果公元 a 年是闰年输出 Y,否则输出 N。最后加一个换行符号。</p>', 1, 13, 'ymc', 4, '2006\r\n\r\n', 'N');
INSERT INTO `problem` VALUES (480, '一步一个脚印:正负数\n', '<p>对输入的一个整数n，如果n是正数，则输出1，如果n是0，则输出0，如果n是负数，则输出-1。</p>', '[{\'in\': \'5\\n\', \'out\': \'1\\n\'}, {\'in\': \'0\\n\', \'out\': \'0\\n\'}, {\'in\': \'-100\\n\', \'out\': \'-1\\n\'}]', 1, 0, 0, '<p>输入只有一个整数n，<strong>-1000&lt;n&lt;1000. </strong></p>', '<p>根据n的值在单独的一行输出0，1或者-1。</p>', 1, 13, 'ymc', 3, '-10\r\n\r\n', '-1');
INSERT INTO `problem` VALUES (481, '分段函数', '<p>输入实数x，求下列分段函数f(x)的值</p>', '[{\'in\': \'-1.2\\n\', \'out\': \'6.452\\n\'}, {\'in\': \'3\\n\', \'out\': \'0.538\\n\'}, {\'in\': \'8.3\\n\', \'out\': \'0.123\\n\'}, {\'in\': \'11\\n\', \'out\': \'0.000\\n\'}]', 1, 0, 0, '<p>输入只有一个浮点数x。</p>', '<p>在单独一行中输出f(x)的值，<strong>结果保留3位小数.<span style=\"color: #ff0000;\">特别注意，输出0是同样要保留3位小数，即输出0.000</span></strong></p>', 1, 13, 'ymc', 4, '-1.2\r\n\r\n', '6');
INSERT INTO `problem` VALUES (482, '成绩转换\n', '<p>输入一个百分制的成绩t，将其转换成对应的等级，具体转换规则如下： 90~100为A; 80~89为B; 70~79为C; 60~69为D; 0~59为E;</p>\n', '[{\'in\': \'56\\n\', \'out\': \'E\\n\'}, {\'in\': \'100\\n\', \'out\': \'A\\n\'}, {\'in\': \'102\\n\', \'out\': \'Score is error!\\n\'}, {\'in\': \'-1\', \'out\': \'Score is error!\\n\'}]', 1, 0, 0, '<p>输入一个整数。</p>\n', '<p>如果输入数据不在0~100范围内，请输出一行：&ldquo;Score is error!&rdquo;。</p>\n', 1, 13, 'ymc', 4, '56\r\n\n', 'E');
INSERT INTO `problem` VALUES (483, '数的奇偶性\n', '输入一个整数。确定它是奇数还是偶数。\n', '[{\'in\': \'14\\n\', \'out\': \'0\\n\'}, {\'in\': \'3\\n\\n\', \'out\': \'1\\n\'}, {\'in\': \'2\\n\', \'out\': \'0\\n\'}]', 1, 0, 0, '输入为一行，该行包括一个int类型整数。\n', '如果输入是奇数，则输出 1，否则输出0。\n', 1, 13, 'ymc', 3, '14\n', '0');
INSERT INTO `problem` VALUES (484, '一步一个脚印:正负数\n\n', '<p>输入一个字符ch，如果ch是英文字符，则输出1，如果ch是数字字符，则输出0，否则输出-1。</p>', '[{\'in\': \'f\', \'out\': \'1\\n\'}, {\'in\': \'2\\n\', \'out\': \'0\\n\'}, {\'in\': \'%\', \'out\': \'-1\\n\'}]', 1, 0, 0, '<p>输入只有一个字符。</p>', '<p>根据输入字符的性质在单独的一行输出0，1或者-1。</p>', 1, 13, 'ymc', 3, 'F', '1');
INSERT INTO `problem` VALUES (485, '三个数的基本运算\n', '从键盘输入3个整数，并打印他们的和、平均值、乘积、最小值和最大值。\n', '[{\'in\': \'13 27 14\\n\', \'out\': \'54 18 4914 13 27\\n\'}, {\'in\': \'99 98 90\\n\', \'out\': \'287 95 873180 90 99\\n\'}]', 1, 0, 0, '输入只有一行，该行包含用空格隔开的3个整数。\n', '在单独的一行中分别输出这三个数的和、平均值（取其整数部分）、乘积、最小值和最大值，用空格隔开。\n', 1, 13, 'ymc', 2, '13 27 14\n', '5');
INSERT INTO `problem` VALUES (486, '寻找最小的数\n', '给定三个实数，输出三个数中最小的数。\n', '[{\'in\': \'3 1 2.0\', \'out\': \'1.00\\n\'}, {\'in\': \'3 5 4\\n\', \'out\': \'3.00\\n\'}, {\'in\': \'3 2 1.1\\n\', \'out\': \'1.10\\n\'}]', 1, 0, 0, '输入只有一行，该行有三个实数，数据之间由一个空格隔开。\n', '在单独的一行中输出三个数中最小的数，结果保留两位小数。\n', 1, 13, 'ymc', 3, '3 1 2.0\r\n\n', '1');
INSERT INTO `problem` VALUES (487, '数字回文\n', '\"回文\"是一种特殊的数或者文字短语。它们无论是顺读还是倒读，结果都一样。例如：12321，55555，45554。读入一个5位整数，判断它是否是回文数。\n', '[{\'in\': \'12321\\n\', \'out\': \'Yes.\\n\'}, {\'in\': \'19591\\n\', \'out\': \'Yes.\\n\'}, {\'in\': \'15541\\n\', \'out\': \'No.\\n\'}]', 1, 0, 0, '输入是一个五位整数。\n', '如果输入的数是回文数，输出\"Yes.\"，否则输出\"No.\"。\n', 1, 13, 'ymc', 3, '12321\n', 'Y');
INSERT INTO `problem` VALUES (488, 'A+B', '<p>给定一个两位整数的计算公式，请输出计算结果。运算符包括+ &nbsp;- &nbsp;* &nbsp;/</p>', '[{\'in\': \'12+23\', \'out\': \'35\\n\'}, {\'in\': \'13/4\', \'out\': \'3\\n\'}, {\'in\': \'5*7\', \'out\': \'35\\n\'}, {\'in\': \'12-3\', \'out\': \'9\\n\'}]', 1, 0, 0, '<p>输入只有一行，先是一个整数，然后是一个运算符，再是一个整数。</p>', '<p>在单独的一行中输出计算结果，结果是一个整数。</p>', 1, 13, 'ymc', 4, '1+2', '3');
INSERT INTO `problem` VALUES (489, '求PI的值\n', '利用 PI/2=(2/1) * (2/3) * (4/3) * (4/5) * (6/5) * (6/7) * ... 前200项之积，编程计算法PI的值。\n', '[{\'in\': \'\', \'out\': \'3.134\\n\'}]', 1, 0, 0, '本题没有输入。\n', '在单独的一行中输出PI的值，保留3位小数。\n', 1, 13, 'ymc', 1, '\n', '在');
INSERT INTO `problem` VALUES (490, '求幂\n', '输入任意实数x和正整数n，计算x的n次幂。\n', '[{\'in\': \'2 3\\n\', \'out\': \'8.000\\n\'}, {\'in\': \'3.4 8\\n\', \'out\': \'17857.939\\n\'}]', 1, 0, 0, '输入只有一行，该行中包含x与n，中间用空格分开。\n', '在单独一行中输出x^n的值。结果保留3位小数。\n', 1, 13, 'ymc', 2, '2 3\r\n\n', '8');
INSERT INTO `problem` VALUES (491, '阶乘输出\n', '<p>请输出如下所示的阶乘公式 3!+4!+5!+6!+7! 这个公式表示从3到7的阶乘之和。现在给定两个整数a和b(0<strong>&lt;</strong>a<strong>&lt;</strong>b)，请输出a到b的阶乘之和。</p>', '[{\'in\': \'3 7\\n\', \'out\': \'3!+4!+5!+6!+7!\\n\'}, {\'in\': \'2 8\\n\', \'out\': \'2!+3!+4!+5!+6!+7!+8!\\n\'}]', 1, 0, 0, '<p>输入为一行，由两个整数a和b构成，之间由一个空格分开。已经知道<strong>0&lt;a&lt;b&lt;20。</strong></p>', '<p>输出a到b的阶乘之和，公式中间无任何空格。公式最后加一个换行符。</p>', 1, 13, 'ymc', 2, '3 7\r\n\r\n', '3');
INSERT INTO `problem` VALUES (492, '数值统计\n', '统计给定的n个数中，负数、零和正数的个数。\n', '[{\'in\': \'6 0 1 2 3 -1 0\\n5 1 2 3 4 0.5\\n0 \\n\', \'out\': \'1 2 3\\n0 0 5\\n\'}, {\'in\': \'5 7 -4 -8 9 0\\n6 8 3 -3 0 9 0\\n6 0 0 0 0 0 0\\n1 8\\n2 8 0\\n0\\n\', \'out\': \'2 1 2\\n1 2 3\\n0 6 0\\n0 0 1\\n0 1 1\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的第一个数是整数n（n<100），表示需要统计的数值的个数，然后是n个实数；如果n=0，则表示输入结束，该行不做处理。\n', '对于每组输入数据，输出一行a,b和c，分别表示给定的数据中负数、零和正数的个数。\n', 1, 13, 'ymc', 2, '6 0 1 2 3 -1 0\r\n5 1 2 3 4 0.5\r\n0 \r\n\n', '1');
INSERT INTO `problem` VALUES (493, '求a+aa+aaa+…+aa…a 之和(循环)\n', '求Sn=a+aa+aaa+…+aa…a 之和，其中a是一个数字，n表示a的位数，例如：\r\n2+22+222+2222+22222（此时n=5）。\n', '[{\'in\': \'2\\n2 5\\n8 5\\n\', \'out\': \'a+aa+aaa+...=24690\\na+aa+aaa+...=98760\\n\'}]', 1, 0, 0, '第一行是一个正整数m，表示测试数据的个数。下面是 m对测试数据（第一个数据是a的值，第二个数据是n的值，其中0<=n<=9，数据之间用一个空格隔开），每行一对测试数据，共m行）。\n', '对每个测试数据，输出一行。每一行形式如下\r\na+aa+aaa+...=24690\r\n注意，a+aa+aaa+...中的a无需换成a的值。后面的省略号直接输出。\n', 1, 13, 'ymc', 1, '1\r\n2 5\n', 'a');
INSERT INTO `problem` VALUES (494, '最大公约数与最小公倍数\n', '<p>分别求两个整数的最大公约数和最小公倍数。 </p>', '[{\'in\': \'1\\n24 72\\n\', \'out\': \'24 72\\n\'}, {\'in\': \'2\\n24 72\\n138 240\\n\', \'out\': \'24 72\\n6 5520\\n\'}, {\'in\': \'3\\n24 72\\n138 240\\n1020 1111\\n\\n\', \'out\': \'24 72\\n6 5520\\n1 1133220\\n\'}]', 1, 0, 0, '<p>第一行是一个正整数n，表示测试数据的组数。下面是 n 对测试数据，每组测试数据用一个空格隔开。</p>', '<p>对于每对整数，输出其最大公约数和最小公倍数。</p>', 1, 13, 'ymc', 3, '1\r\n24 72\r\n\r\n', '2');
INSERT INTO `problem` VALUES (495, '猴子吃桃', '<p>猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个。第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第 n 天早上想再吃时，就只剩下一个桃子了。求第一天共摘多少个桃子。</p>', '[{\'in\': \'2\\n10\\n15\', \'out\': \'1534\\n49150\\n\'}]', 1, 0, 0, '<p>有多组测试数据，输入第一行是一个正整数n，表示有n组测试数据，每组测试数据输入占一行，改行只有一个整数n，表示猴子总在第n 天时只剩下一个桃子。(0&lt;n&lt;20)</p>', '<p>对每组测试数据在单独的一行中输出猴子第一天总共摘了多少个桃子。</p>', 1, 13, 'ymc', 1, '2\r\n5\r\n10\r\n', '4');
INSERT INTO `problem` VALUES (496, '母牛的故事', '<p>有一头母牛，它每年年初生一头小母牛。每头小母牛从第四个年头开始，每年年初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？</p>', '[{\'in\': \'2\\n4\\n5\\n0\\n\', \'out\': \'2\\n4\\n6\\n\'}, {\'in\': \'21\\n24\\n0\\n\', \'out\': \'2745\\n8641\\n\'}]', 1, 0, 0, '<p>输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(<strong>0&lt;n&lt;25</strong>)，n的含义如题目中描述。 n=0表示输入数据的结束，不做处理。</p>', '<p>对于每个测试实例，输出在第n年的时候母牛的数量。 每个输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n4\r\n5\r\n0\r\n', '2');
INSERT INTO `problem` VALUES (497, '不要62', '<p>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。 杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。 不吉利的数字为所有含有4或62的号码。例如： 62315 73418 88914 都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。 你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。</p>\r\n要求：\r\n1、编写一个判断一个数是否为吉利数字的函数。\r\n', '[{\'in\': \'1 100\\n0 0\\n\', \'out\': \'80\\n\'}, {\'in\': \'103 1000\\n0 0\\n\', \'out\': \'629\\n\'}]', 1, 0, 0, '<p>输入的都是整数对m、n（<strong>0&lt;m&le;n&le;1000</strong>），如果遇到都是0的整数对，则输入结束。</p>\r\n', '<p>对于每个整数对，输出吉利数字的总数，该数值占一行位置。</p>\r\n', 1, 13, 'ymc', 2, '1 100\r\n0 0\r\n\r\n\r\n', '8');
INSERT INTO `problem` VALUES (498, '同构数', '<p>找出1至99之间的全部同构数。<br />注：正整数n若是它平方数的尾部，则称n为同构数。例如，6是其平方数36的尾部，25是其平方数625的尾部，6与25都是同构数。<br /><span style=\"font-size: 10px;\">要求编写一个函数，判断正整数是否为同构的函数。</span></p>', '[{\'in\': \'\', \'out\': \'1 5 6 25 76 \\n\'}]', 1, 0, 0, '<p>无</p>', '<p>输出全部同构数 每个数后面输出一个空格。</p>', 1, 13, 'ymc', 1, '', '1');
INSERT INTO `problem` VALUES (499, ' 销售员 ', '现在的销售员的收入（工资）一般包括两部分，第一部分是基本工资，第二部分是销售提成。某销售员的基本工资是1000人民币，当月销售业绩x与销售员的提成比率如下图。\r\n要求：写一个函数计算销售员的销售提成。\r\n\r\n\r\n', '[{\'in\': \'10\\n100\\n10000\\n10001\\n50000\\n50001\\n200000\\n200001\\n300000\\n500050\\n999999\\n\\n\', \'out\': \'1005.000\\n1500.000\\n1750.075\\n4750.000\\n5250.085\\n18000.000\\n21000.100\\n31000.000\\n51005.000\\n100999.900\\n\'}]', 1, 0, 0, '输入第一行是一个整数n，表示有n个测试数据。接下来有n行，每行一个正实数，表示销售员某个月的销售业绩。\r\n\r\n', '对于每个测试数据，在单独的一行中输出销售员当月的收入，结果保留3位小数。\r\n\r\n', 1, 13, 'ymc', 1, '2\r\n10000\r\n50000\r\n\r\n', '1');
INSERT INTO `problem` VALUES (500, '最大公约数与最小公倍数', '<p>分别求两个整数的最大公约数和最小公倍数。</p>\r\n<p>要求： 1、编写计算最大公约数的函数</p>', '[{\'in\': \'1\\n24 72\\n\', \'out\': \'24 72\\n\'}, {\'in\': \'2\\n24 72\\n138 240\\n\', \'out\': \'24 72\\n6 5520\\n\'}, {\'in\': \'3\\n24 72\\n138 240\\n1020 1111\\n\\n\', \'out\': \'24 72\\n6 5520\\n1 1133220\\n\'}]', 1, 0, 0, '<p>第一行是一个正整数n，表示测试数据的组数。下面是 n 对测试数据，每组测试数据用一个空格隔开。</p>', '<p>对于每对整数，输出其最大公约数和最小公倍数。</p>', 1, 13, 'ymc', 3, '1\r\n24 72\r\n\r\n', '2');
INSERT INTO `problem` VALUES (501, '编程题一(10春)(函数)', '<p>按下面要求编写程序<br /> 1） 定义函数 total(n)计算1+2+3+....+n，函数返回类型是int。 <br />2） 定义函数main(),输入正整数n，计算并输出下列算式的值。<br />要求调用函数 total(n) 计算1+2+3+....+n。</p>', '[{\'in\': \'15\\n\', \'out\': \'1.875\\n\'}]', 1, 0, 0, '<p>输入只有一个整数n(1&lt;=n&lt;=20)</p>', '<p>在单独的一行中输出公式s的值，保留3位小数。</p>', 1, 13, 'ymc', 1, '5\r\n\r\n', '1');
INSERT INTO `problem` VALUES (502, '与7无关的数 ', '一个正整数，如果它能被7整除，或者它的十进制表示法中某位数上的数字为7，则称其为与7相关的数。\r\n现求所有小于等于n(n<100)的与7无关的正整数的平方和。\r\n要求： 编写二个函数\r\n（1）一是判断正整数能否被7整除的函数；\r\n（2）二是判断正整数的某位的数字是否为7的函数。', '[{\'in\': \'21\\n\', \'out\': \'2336\\n\'}, {\'in\': \'99\\n\', \'out\': \'204547\\n\'}, {\'in\': \'50\\n\', \'out\': \'31469\\n\'}]', 1, 0, 0, '<p>输入为一行,正整数n,(n&lt;100)</p>', '<p>输出小于等于n的与7无关的正整数的平方和</p>', 1, 13, 'ymc', 3, '21\r\n\r\n', '2');
INSERT INTO `problem` VALUES (503, '因子数', '<p>给定一个整数x，定义g(x)是x的因子个数。现在给你一个整数区间[a,b]，请你求出该区间的x使g(x)最大。</p>', '[{\'in\': \'6\\n1 1\\n2 3\\n1 10\\n47 359\\n10 5000\\n123 800\\n\', \'out\': \'1\\n2\\n6\\n240\\n2520\\n720\\n\'}]', 1, 0, 0, '<p>第一行是一个整数n，接下来总共n行。</p>\r\n<p>每行两个正整数a和b，&nbsp;<strong>1&lt;=a&lt;=b&lt;=5000</strong>，表示闭区间[a,b]。</p>', '<p>对每组测试数据，在单独的一行中输出一个整数，即对应的区间因子最多的数，如果满足条件有多个，则输出其中最小的数。</p>', 1, 13, 'ymc', 1, '3\r\n2 3\r\n1 10\r\n47 359\r\n', '2');
INSERT INTO `problem` VALUES (504, '插入数组元素（数组）', '<p>有n(n&lt;=100)个整数，已经按照从小到大顺序排列好了，现在另外给一个整数x，请将该数插入到序列中，并使新的序列仍然有序。</p>', '[{\'in\': \'4 6\\n1 3 9 10\\n4 2\\n3 5 7 9\\n6 3\\n1 2 3 4 5 6\\n6 20\\n1 2 3 4 5 6\\n0 0\\n\', \'out\': \'1 3 6 9 10 \\n2 3 5 7 9 \\n1 2 3 3 4 5 6 \\n1 2 3 4 5 6 20 \\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例，每组数据由两行组成，第一行是n和m，第二行是已经有序的n个数的数列。n和m同时为0表示输入数据结束，本行不做处理。</p>', '<p>对于每个测试实例，输出插入新的元素后的数列，每个元素后有一个空格。</p>', 1, 13, 'ymc', 1, '3 3\r\n1 2 4\r\n0 0\r\n', '1');
INSERT INTO `problem` VALUES (505, '数组元素的删除(数组)', '<p>给定一个整数序列a1,a2,...,an，删除序列中所有值为m的元素。</p>\r\n<p>要求：</p>\r\n<p>1、用数组。</p>\r\n<p>2、将值为m的数组元素从数组中删除，而不是简单的不输出m。</p>', '[{\'in\': \'7\\n1 2 3 4 5 3 6\\n3\\n\', \'out\': \'1 2 4 5 6 \\n\'}, {\'in\': \'20\\n1 2 3 4 5 3 6 8 9 10 1 2 3 4 5 3 3 3 9 10\\n3\\n\', \'out\': \'1 2 4 5 6 8 9 10 1 2 4 5 9 10 \\n\'}]', 1, 0, 0, '<p>输入有3行，</p>\r\n<p>第一行是一个整数n，表示序列长度为n(0&lt;n&lt;100)。</p>\r\n<p>第二行有n个整数，中间用空格分开。</p>\r\n<p>第三行是一个整数m。</p>', '<p>在单独一行中输出删除元素后序列。每个整数后面跟一个空格。</p>', 1, 13, 'ymc', 2, '7\r\n1 2 3 4 5 3 6\r\n3\r\n', '1');
INSERT INTO `problem` VALUES (506, '数组的平均数和标准差（数组）', '<p>求n个数的平均数和标准差，如果有n个数据X1 ,X2 ,X3 ......Xn ,数据的平均数为X，标准差&sigma;如下。</p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"/images/media/uploads/images/0379.png\" alt=\"\" /></p>', '[{\'in\': \'5\\n6 1 1 1 1 1 1\\n5 1 2 3 4 6\\n5 5 6 7 8 9\\n5 100 200 300 400 500\\n5 999 700 666 502 350\\n\', \'out\': \'1.000 0.000\\n3.200 1.720\\n7.000 1.414\\n300.000 141.421\\n643.400 217.368\\n\'}]', 1, 0, 0, '<p>第一行一个正整数T，表示有T组测试数据。以下每行是一组数，第一个数为数组元素的个数m，然后是由空格分开的m个整数构成，每个整数不大于1000。</p>', '<p>对于每组数据输出一行，即平均数和标准差，两个数据均保留3位小数，并且以一个空格隔开。</p>', 1, 13, 'ymc', 1, '2\r\n6 1 1 1 1 1 1\r\n5 1 2 3 4 6\r\n\r\n', '1');
INSERT INTO `problem` VALUES (507, '一维数组排序', '有n(n<=100)个整数，将其从小到大排列并输出。\r\n排序的方法有很多，要求掌握的方法有：\r\n1、选择法排序\r\n2、冒泡法排序\r\n3、插入法排序\r\n具体算法请上网找资料\r\n', '[{\'in\': \'10\\n12 5 89 6 3 56 45 25 1 78\\n\\n\', \'out\': \'1 3 5 6 12 25 45 56 78 89 \\n\'}]', 1, 0, 0, '输入数据包含一个测试实例，每组数据由两行组成，第一行是数组元素的个数n，第二行是n个整数。\r\n', '对于每个测试实例，从小到大输出，每个元素后有一个空格。\r\n', 1, 13, 'ymc', 1, '5\r\n12 5 89 6 3\r\n\r\n', '3');
INSERT INTO `problem` VALUES (508, '一维数组元素查找', '<p>有n(n&lt;=100)个整数，已经从小到大排列，输入一数，查找是否在数组中存在，如果存在，则输出其位置，否则输出-1.</p>\r\n<p>查找的方法有：</p>\r\n<p>1、逐个查找</p>\r\n<p>2、折半查找</p>\r\n<p>具体算法请上网找资料</p>', '[{\'in\': \'10\\n1 3 5 6 12 25 45 56 78 89 \\n45\\n\', \'out\': \'6\\n\'}, {\'in\': \'10\\n1 3 5 6 12 25 45 56 78 89 \\n0\\n\', \'out\': \'-1\\n\'}]', 1, 0, 0, '<p>输入数据包含一个测试实例，每组数据由三行组成，第一行是数组元素的个数n，第二行是n个已经排序的整数，第三行是待查找的数。</p>', '<p>如果数组中存在，则输出其位置，否则，输出-1.</p>', 1, 13, 'ymc', 2, '5\r\n3 5 6 12 89\r\n6\r\n\r\n\r\n', '2');
INSERT INTO `problem` VALUES (509, '密码\n\n', '网上流传一句话:\"常在网上飘啊，哪能不挨刀啊～\"。其实要想能安安心心地上网其实也不难，学点安全知识就可以。\r\n\r\n首先，我们就要设置一个安全的密码。那什么样的密码才叫安全的呢？一般来说一个比较安全的密码至少应该满足下面两个条件：\r\n\r\n(1).密码长度大于等于8，且不要超过16。\r\n(2).密码中的字符应该来自下面“字符类别”中四组中的至少三组。\r\n\r\n这四个字符类别分别为：\r\n1.大写字母：A,B,C...Z;\r\n2.小写字母：a,b,c...z;\r\n3.数字：0,1,2...9;\r\n4.特殊符号：~,!,@,#,$,%,^;\r\n\r\n给你一个密码，你的任务就是判断它是不是一个安全的密码。\r\n\n', '[{\'in\': \'15\\na1b2c3d4\\nLinle@ACM\\n^~^@^@!%\\nABCDEFDSDD\\nabdkjkjkjl\\nSKJFK4654\\nkdjfkl21ddf\\n#@$#21212&*&\\nADFDK##$%121\\n@#121ghhgSDF\\nfj145$#$#GFG\\n12@#$kjhkjnh\\n1212@#$ADFDD\\n121212545635\\n@#$@#%$^%^@#\\n\', \'out\': \'NO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\'}]', 1, 0, 0, '输入数据第一行包含一个数M，接下有M行，每行一个密码（长度最大可能为50），密码仅包括上面的四类字符。\r\n\n', '对于每个测试实例，判断这个密码是不是一个安全的密码，是的话输出YES，否则输出NO。\r\n\n', 1, 13, 'ymc', 1, '3\r\na1b2c3d4\r\nLinle@ACM\r\n^~^@^@!%\r\n\r\n\n', 'N');
INSERT INTO `problem` VALUES (510, '输出出现过的大写英文字母(数组)', '输入一行字符(不超过100个字符)，按次序输出出现过的大写字母。', '[{\'in\': \'FONTNAME and FILENAME\\n\', \'out\': \'F O N T A M E I L \\n\'}]', 1, 0, 0, '输入一行字符串(不超过100字符)。', '将结果输出到一行中，每个字母后面带一个空格。', 1, 13, 'ymc', 1, 'FONTNAME and FILENAME\r\n', 'F');
INSERT INTO `problem` VALUES (511, '魔方阵（数组）', '<p>所谓魔方阵是指这样的方阵，它的每一行、每一列和对角线之和均相等。要求输出1,...,n^2的自然数构成的魔方阵。 \r\n8 1 6 \r\n3 5 7 \r\n4 9 2 \r\n\r\n\r\nn阶魔方阵的构造方法为: \r\n1） 首先把1放在顶行的正中间，然后把后继数按顺序放置在右上方位置； \r\n2） 当到达顶行时，下一个数放到底行，好像它在顶行的上面；例如上图中的数字2 \r\n3） 当到达最右列时，下一个数放在最左端列，好像它仅靠在右端列的右方；例如上图中的数字3. \r\n4） 当到达的位置已经填好数时，或到达右上角的位置时，下一个数就放在刚填写的位置的正下方。例如上图中的数字4和7。</p>', '[{\'in\': \'3\\n\', \'out\': \'8 1 6 \\n3 5 7 \\n4 9 2 \\n\'}, {\'in\': \'7\\n\', \'out\': \'30 39 48 1 10 19 28 \\n38 47 7 9 18 27 29 \\n46 6 8 17 26 35 37 \\n5 14 16 25 34 36 45 \\n13 15 24 33 42 44 4 \\n21 23 32 41 43 3 12 \\n22 31 40 49 2 11 20 \\n\'}]', 1, 0, 0, '<p>输入正整数n,表示魔方阵的行数。（请注意：n是一个不大于30的奇整数）</p>', '<p>n阶的魔方阵占n行，每行n个数字，每个数字后有空格</p>', 1, 13, 'ymc', 2, '3\r\n', '8');
INSERT INTO `problem` VALUES (512, '鞍点（数组）', '找一个二维数组中的鞍点，即该位置上的元素在该行上最大，在该列上最小。鞍点最多一个，也可能不存在。', '[{\'in\': \'2 3\\n3 6 9\\n4 5 6\\n\', \'out\': \'1 2 6 \\n\'}]', 1, 0, 0, '第一行是二维数组的行数和列数（行和列的数目均不大于100），之后为二维数组。', '如果存在鞍点，输出鞍点所在的行、列及其值,每个数后一个空格；如果不存在，输出\"N\"', 1, 13, 'ymc', 1, '3 3\r\n11 22 33\r\n99 33 55\r\n44 55 66\r\n', '0');
INSERT INTO `problem` VALUES (513, '找位置', '编写函数strrindex(s, t)，它返回字符串t在s中最右边出现的位置。如果s中不包含t，则返回-1。\r\n设计一个合适的主程序测试你编写的函数。字符串的长度不超过1000。', '[{\'in\': \'The Internet developers wanted to make a networking protocol that had serious longevity, so they had to define a large enough IP address space to last well beyond the foreseeable future.\\nthe\\n\', \'out\': \'163\\n\'}]', 1, 0, 0, '输入数据有两行，第一行是字符串s，第二行是字符串t。', '如果字符串s中包含字符串t，则输出t在s中最右边出现的位置，否则输出-1。', 1, 13, 'ymc', 1, 'I am a student.\r\nam', '2');
INSERT INTO `problem` VALUES (514, '位操作(Ⅰ)', '<p>对一个非负整数a（<strong>0&lt;a&lt;=65535</strong>），取其从右端开始的第4~7位（最右端是第0位）。</p>', '[{\'in\': \'4\\n80\\n1000\\n1234\\n65535\\n\', \'out\': \'0\\n5\\n14\\n13\\n15\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个整数组成。</p>', '<p>对于每组输入数据，输出一行。</p>', 1, 13, 'ymc', 1, '4\r\n80\r\n1234\r\n', '0');
INSERT INTO `problem` VALUES (515, '求PI的值', '利用 PI/2=(2/1) * (2/3) * (4/3) * (4/5) * (6/5) * (6/7) * ... 前200项之积，编程计算法PI的值。', '[{\'in\': \'\', \'out\': \'3.134\\n\'}]', 1, 0, 0, '本题没有输入。', '在单独的一行中输出PI的值，保留3位小数。', 1, 13, 'ymc', 1, '', '在');
INSERT INTO `problem` VALUES (516, '判断正整数的位数', '<p>给一个数n（<strong>0&lt;n&lt;=32767</strong>），逆序打印出各位数字，并求它是几位数。</p>', '[{\'in\': \'12345\\n34\\n789\\n9\\n7890\\n32767\\n\', \'out\': \'54321 5\\n43 2\\n987 3\\n9 1\\n0987 4\\n76723 5\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个整数组成。</p>', '<p>对于每组输入数据，输出一行，该行有两个数，一个数是n的各位数字的逆序，一个数是n的位数，它们以一个空格隔开。</p>', 1, 13, 'ymc', 1, '12345\r\n34\r\n100\r\n789\r\n', '5');
INSERT INTO `problem` VALUES (517, '整数的个数 ', '<p>给定k（<strong>1&lt;k&lt;100</strong>）个正整数，其中每个数都是大于等于1，小于等于10的数。写程序计算给定的k个正整数中，1，5和10出现的次数。</p>', '[{\'in\': \'5\\n1 5 8 10 5 \\n\', \'out\': \'1\\n2\\n1\\n\'}, {\'in\': \'30\\n1 5 8 10 5 1 5 8 10 5 1 5 8 10 5 1 5 8 10 5 1 5 8 10 5 1 5 8 10 5\\n\', \'out\': \'6\\n12\\n6\\n\'}]', 1, 0, 0, '<p>输入有两行：第一行包含一个正整数k，第二行包含k个正整数，每两个正整数用一个空格分开。</p>', '<p>输出有三行，第一行为1出现的次数，第二行为5出现的次数，第三行为10出现的次数。</p>', 1, 13, 'ymc', 2, '5\r\n1 5 8 10 5 \r\n', '1');
INSERT INTO `problem` VALUES (518, ' A+B(I)', '你的任务是计算a + b。\r\n太容易？当然！这是针对初学者特地设计的题目。\r\n你会发现和这道题有相同标题的一些题，是的，所有这些题目都是为了进行输入输出练习这个目标而设计的。\r\n', '[{\'in\': \'1 5\\n10 20\\n1000 2000\\n568 7000\\n\', \'out\': \'6\\n30\\n3000\\n7568\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，它有两个整数a、b，这两个整数用空格隔开。\r\n', '对于每组输入数据a和b，输出一行，即a+b的值。\r\n', 1, 13, 'ymc', 1, '1 5\r\n10 20', '6');
INSERT INTO `problem` VALUES (519, 'A+B(II)', '你的任务是计算a+b。\r\n', '[{\'in\': \'4\\n1 5\\n10 20\\n1000 2000\\n568 7000\\n\', \'out\': \'6\\n30\\n3000\\n7568\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数t，表示测试实例的组数。然后是t行，每行有两个整数a、b，这两个整数用空格隔开。\r\n\r\n', '对于每组输入数据a和b，输出一行，即a+b的值。\r\n', 1, 13, 'ymc', 1, '2\r\n1 5\r\n10 20', '6');
INSERT INTO `problem` VALUES (520, '前m大的数', '<p>给定一个包含N(<strong>1&lt;N&lt;=20</strong>)个正整数的序列，每个数不超过100，对它们两两相加得到的N*(N-1)/2个和，求出其中前M大的数(M&lt;=20)并按从大到小的顺序排列。</p>', '[{\'in\': \'4 4\\n1 2 3 4\\n4 5\\n5 3 6 4\\n10 5\\n1 2 3 4 5 6 7 8 9 10\\n\', \'out\': \'7 6 5 5 \\n11 10 9 9 8 \\n19 18 17 17 16 \\n\'}]', 1, 0, 0, '<p>输入可能包含多组数据，其中每组数据包括两行： 第一行两个数N和M， 第二行N个数，表示该序列。</p>', '<p>对于输入的每组数据，输出前M大的数（每个数后面有一个空格）。输出应当按照从大到小的顺序排列。</p>', 1, 13, 'ymc', 1, '4 4\r\n1 2 3 4\r\n4 5\r\n5 3 6 4\r\n', '7');
INSERT INTO `problem` VALUES (521, '一步一个脚印：正负数II', '<p>首先给定一个正整数n，说明有n个整数需要处理。 对每一个输入的一个整数m，如果m是正数，则输出1，如果m是0，则输出0，如果m是负数，则输出-1。</p>', '[{\'in\': \'3\\n5\\n-10\\n0\\n\', \'out\': \'1\\n-1\\n0\\n\'}]', 1, 0, 0, '<p>第一行输入一个正整数n，然后是n行，每行一个整数m。-1000&lt;m&lt;1000</p>', '<p>输出总共n行，每行根据m的值输出1，0或者-1。</p>', 1, 13, 'ymc', 1, '3\r\n2\r\n0\r\n-20\r\n', '1');
INSERT INTO `problem` VALUES (522, '一步一个脚印:正负数', '对输入的一个整数n，如果n是正数，则输出1，如果n是0，则输出0，如果n是负数，则输出-1。', '[{\'in\': \'5\\n\', \'out\': \'1\\n\'}, {\'in\': \'0\\n\', \'out\': \'0\\n\'}, {\'in\': \'-100\\n\', \'out\': \'-1\\n\'}]', 1, 0, 0, '输入只有一个整数n，-1000<n<1000.', '根据n的值在单独的一行输出0，1或者-1。', 1, 13, 'ymc', 3, '-10\n', '-');
INSERT INTO `problem` VALUES (523, '密码', '网上流传一句话:\"常在网上飘啊，哪能不挨刀啊～\"。其实要想能安安心心地上网其实也不难，学点安全知识就可以。\r\n\r\n首先，我们就要设置一个安全的密码。那什么样的密码才叫安全的呢？一般来说一个比较安全的密码至少应该满足下面两个条件：\r\n\r\n(1).密码长度大于等于8，且不要超过16。\r\n(2).密码中的字符应该来自下面“字符类别”中四组中的至少三组。\r\n\r\n这四个字符类别分别为：\r\n1.大写字母：A,B,C...Z;\r\n2.小写字母：a,b,c...z;\r\n3.数字：0,1,2...9;\r\n4.特殊符号：~,!,@,#,$,%,^;\r\n\r\n给你一个密码，你的任务就是判断它是不是一个安全的密码。', '[{\'in\': \'15\\na1b2c3d4\\nLinle@ACM\\n^~^@^@!%\\nABCDEFDSDD\\nabdkjkjkjl\\nSKJFK4654\\nkdjfkl21ddf\\n#@$#21212&*&\\nADFDK##$%121\\n@#121ghhgSDF\\nfj145$#$#GFG\\n12@#$kjhkjnh\\n1212@#$ADFDD\\n121212545635\\n@#$@#%$^%^@#\\n\', \'out\': \'NO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\'}]', 1, 0, 0, '输入数据第一行包含一个数M，接下有M行，每行一个密码（长度最大可能为50），密码仅包括上面的四类字符。', '对于每个测试实例，判断这个密码是不是一个安全的密码，是的话输出YES，否则输出NO。', 1, 13, 'ymc', 1, '3\r\na1b2c3d4\r\nLinle@ACM\r\n^~^@^@!%\r\n', 'N');
INSERT INTO `problem` VALUES (524, '二进制', '给定一个十进制的正整数n(0 < n < 1000)，把这个十进制数转化为二进制数。\r\n', '[{\'in\': \'1\\n2\\n3\\n\', \'out\': \'1\\n10\\n11\\n\'}, {\'in\': \'12\\n345\\n75\\n68\\n96\\n222\\n\', \'out\': \'1100\\n101011001\\n1001011\\n1000100\\n1100000\\n11011110\\n\'}]', 1, 0, 0, '有多组测试数据，每组测试数据输入只有一个正整数n。处理到文件结束（EOF）。\r\n', '对每组测试数，在单独的一行中输出对应的二进制数。\r\n', 1, 13, 'ymc', 2, '1\r\n2\r\n3\r\n', '1');
INSERT INTO `problem` VALUES (525, 'A|B?', '正整数A是否能被正整数B整除，不知道为什么小鱼会研究这个问题，来帮帮他吧。', '[{\'in\': \'2\\n4 2\\n5 3\\n\', \'out\': \'YES\\nNO\\n\'}, {\'in\': \'5\\n236 897\\n265 888\\n85 5\\n98 2\\n68 17\\n\', \'out\': \'NO\\nNO\\nYES\\nYES\\nYES\\n\'}]', 1, 0, 0, '输入数据的第一行是一个数据T，表示有T组数据。\n每组数据有两个正整数A和B(A,B<10^9)。', '对于每组输入数据，输出\"YES\"表示可以被整除，\"NO\"表示不能被整除。', 1, 13, 'ymc', 2, '2\n4 2\n5 3\n', 'Y');
INSERT INTO `problem` VALUES (526, '手机短号', '大家都知道，手机号是一个11位长的数字串，同时，作为学生，还可以申请加入校园网，如果加入成功，你将另外拥有一个短号。假设所有的短号都是 6+手机号的后5位，比如号码为13512345678的手机，对应的短号就是645678。\n现在，如果给你一个11位长的手机号码，你能找出对应的短号吗？', '[{\'in\': \'2\\n13512345678\\n13787654321\\n\', \'out\': \'645678\\n654321\\n\'}, {\'in\': \'5\\n15067589544\\n15489647548\\n15486358854\\n13864885467\\n15068779445\\n\', \'out\': \'689544\\n647548\\n658854\\n685467\\n679445\\n\'}]', 1, 0, 0, '输入数据的第一行是一个N(N <= 200)，表示有N个数据，接下来的N行每一行为一个11位的手机号码。', '输出应包括N行，每行包括一个对应的短号，输出应与输入的顺序一致。', 1, 13, 'ymc', 2, '2\n13512345678\n13787654321\n', '6');
INSERT INTO `problem` VALUES (527, '次大值和次小值', '求输入的一组整数中的次大数和次小数的差。', '[{\'in\': \'1\\n5 -1 -2 -3 -4 -5\\n\', \'out\': \'2\\n\'}, {\'in\': \'3\\n4 43 54324 -454 0\\n6 3423 34 825 -63 436 243\\n8 423 956 -5464 -353 746 -3453 -16 0\\n\', \'out\': \'43\\n\\n791\\n\\n4199\\n\'}]', 1, 0, 0, '第一行是测试数据的组数。以下每行是一组测试数据，每组由多个整数组成，第一个数表示该组一共有几个整数（大于3，小于等于100），整数之间由空格分开。', '对输入的每组测试数据，将结果输出，每组之间空行，最后一组没有空行。', 1, 13, 'ymc', 2, '2\n4 12 34 56 78\n5 1234 34 13 663 5000\n', '2');
INSERT INTO `problem` VALUES (528, '行列互换', '将一个整数矩阵的行和列互换。', '[{\'in\': \'2\\n5 6\\n43 643 1 65 3 5\\n-43 4 -4 0 53 423 \\n5 64 2 -99 44 40\\n4 -32 43 542 5 4\\n42 4 2 -9 43 87\\n1 1\\n2\\n\', \'out\': \'43 -43 5 4 42 \\n643 4 64 -32 4 \\n1 -4 2 43 2 \\n65 0 -99 542 -9 \\n3 53 44 5 43 \\n5 423 40 4 87 \\n\\n2 \\n\\n\'}, {\'in\': \'1\\n2 3\\n3 3 9\\n4 5 4\\n\', \'out\': \'3 4 \\n3 5 \\n9 4 \\n\\n\'}]', 1, 0, 0, '第一行是测试数据的组数。以下每组数据的首行是矩阵的行数和列数（行和列的数目均不大于100），之后为矩阵。', '对输入的每组测试数据，将矩阵行列互换输出，每组后面有一个空行。矩阵中的每个数据之后有一个空格。', 1, 13, 'ymc', 2, '2\n3 2\n11 22\n33 44\n55 66\n3 3\n11 12 13\n21 22 23\n31 32 33\n', '1');
INSERT INTO `problem` VALUES (529, 'e的x次幂', '<p>对于<strong>0&lt;x&lt;1</strong>，利用公式e<sup>x</sup>=1 + x + x<sup>2</sup>/2! + &hellip; + x<sup>i</sup>/i! + &hellip; ，求e<sup>x</sup> 的近似值，结果精确到10<sup>-8</sup>。</p>', '[{\'in\': \'0.3\\n0.4\\n0.5\', \'out\': \'1.34985881\\n1.49182470\\n1.64872127\\n\'}, {\'in\': \'0.1\\n0.2\\n0.3\\n0.4\\n0.8\\n\', \'out\': \'1.10517092\\n1.22140276\\n1.34985881\\n1.49182470\\n2.22554093\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个实数组成。</p>', '<p>对于每组输入数据，输出一行。</p>', 1, 13, 'ymc', 2, '0.3\r\n0.4\r\n0.5', '1');
INSERT INTO `problem` VALUES (530, '计算函数的值', '编写一个递归函数（或非递归函数），计算如下定义的函数f：\n（1）当x为负数时，f(x, y) = x + y；\n（2）当x为非负数时，f(x, y) = f(x-1, x+y) + x/y 。\n其中，x（x不大于1000），y都是实数，f的值也是实数。\n', '[{\'in\': \'0 3.14\\n1 1\\n-1 5.7857\', \'out\': \'2.14\\n2.00\\n4.79\\n\'}, {\'in\': \'100.56 3.14\\n-100.56 3.14\\n1000 998\\n\', \'out\': \'5145.71\\n-97.42\\n501503.79\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，由两个实数（即x，y）组成。', '对于每组输入数据，输出一行，结果保留两位小数。', 1, 13, 'ymc', 2, '0 3.14\n1 1\n-1 5.7857\n', '2');
INSERT INTO `problem` VALUES (531, '一步一个脚印：a+b', '给定两个整数a,b。求a+b。本题有多组测试数据。\n', '[{\'in\': \'5\\n1 1\\n1 2\\n3 4\\n10 20\\n13 100\\n\\n\', \'out\': \'2\\n3\\n7\\n30\\n113\\n\'}]', 1, 0, 0, '首先给定一个整数n,后面跟n行，每一行都包含两个整数a,b，这两个整数由空格分开。', '每组测试数据输出一样，这一行包括一个整数，其值为a+b。', 1, 13, 'ymc', 1, '2\n1 1\n1 2\n', '2');
INSERT INTO `problem` VALUES (532, 'A+B(III)', '你的任务是计算a+b。\r\n', '[{\'in\': \'1 5\\n10 20\\n1000 2000\\n568 7000\\n0 0\\n\', \'out\': \'6\\n30\\n3000\\n7568\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，它有两个整数a、b，这两个整数用空格隔开。\r\n如果a=0并且b=0，则表示输入结束，该行不做处理。\r\n', '对于每组输入数据a和b，输出一行，即a+b的值。\r\n', 1, 13, 'ymc', 1, '1 5\r\n10 20\r\n0 0', '6');
INSERT INTO `problem` VALUES (533, 'A+B(IV)', '你的任务求计算一些整数的和。\r\n', '[{\'in\': \'4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\\n0\', \'out\': \'10\\n15\\n55\\n3690\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行。\r\n每组测试数据的第一个数n，表示在同一行里接着下来有n个整数。\r\n如果n=0，则表示输入结束，该行不做处理。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n', 1, 13, 'ymc', 1, '4 1 2 3 4\r\n5 1 2 3 4 5\r\n0', '1');
INSERT INTO `problem` VALUES (534, 'A+B(V)', '你的任务是求一些整数的和。\r\n', '[{\'in\': \'4\\n4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\', \'out\': \'10\\n15\\n55\\n3690\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数t，表示测试实例的组数。\r\n然后是t行，每组测试实例的第一个数 n，表示在同一行里接着下来有 n 个整数。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n', 1, 13, 'ymc', 1, '2\r\n4 1 2 3 4\r\n5 1 2 3 4 5', '1');
INSERT INTO `problem` VALUES (535, '三个数的一些基本运算', '要求从键盘输入3个整数，并打印他们的和、平均值、乘积、最小值和最大值。', '[{\'in\': \'4\\n13 27 14\\n12 13 14\\n-12 13 14\\n99 98 90\\n\', \'out\': \'54 18 4914 13 27\\n39 13 2184 12 14\\n15 5 -2184 -12 14\\n287 95 873180 90 99\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括用空格隔开的3个int类型整数。', '输出n行，每行分别为相应输入行三个数的和、平均值（取其整数部分）、乘积、最小值和最大值，用空格隔开。', 1, 13, 'ymc', 1, '1\n13 27 14\n', '5');
INSERT INTO `problem` VALUES (536, '数的奇偶性', '输入一个整数。确定他是奇数还是偶数。', '[{\'in\': \'6\\n14\\n13\\n1\\n-201\\n200\\n12346\\n\', \'out\': \'0\\n1\\n1\\n1\\n0\\n0\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括 一个int类型整数。', '输出有 n 行，每行是整数0或1，对应相应输入行的结果。如果对应输入行是奇数，则输出 1，否则，输出 0。', 1, 13, 'ymc', 1, '2\r\n14\r\n13\r\n', '0');
INSERT INTO `problem` VALUES (537, '判断倍数关系', '读入两个整数，并打印出第一个数是否是第二个数的倍数。注意：0是任何数的倍数。', '[{\'in\': \'6\\n12 6\\n3 2\\n1 0\\n0 0\\n100 -50\\n0 1\\n\', \'out\': \'1\\n0\\n0\\n1\\n1\\n1\\n\'}]', 1, 0, 0, '输入第一行有一个整数 n，表示下面有 n 组数据。下面的 n 行，每行包括用空格隔开的两个整数 a 和 b （-100 ≤ a ≤ 100，-100 ≤ b ≤ 100）。', '输出有 n 行，每行是整数0或1，对应相应输入行的结果。如果对应输入行第一个数是第二个数的倍数，则输出 1，否则，输出 0。', 1, 13, 'ymc', 1, '2\r\n12 6\r\n3 2\r\n', '1');
INSERT INTO `problem` VALUES (538, '数字分隔', '<p>要求输入一个5位整数，然后分解出它的每位数字，并将这些数字间隔3个&ldquo;-&rdquo;的形式打印出来。</p>', '[{\'in\': \'12345\\n54321\\n56789\\n13579\\n97531\\n24680\\n0\\n\', \'out\': \'1---2---3---4---5\\n5---4---3---2---1\\n5---6---7---8---9\\n1---3---5---7---9\\n9---7---5---3---1\\n2---4---6---8---0\\n\'}]', 1, 0, 0, '<p>多组测试数据，每组一行（即一个五位整数），数据以0结尾。</p>', '<p>每组数据输出一行，分解出它的每位数字，并将这些数字间隔3个减号（就是：&ldquo;-&rdquo;）的形式打印出来。</p>', 1, 13, 'ymc', 1, '12345\r\n54321\r\n0\r\n', '1');
INSERT INTO `problem` VALUES (539, '二进制转换为十进制', '输入一个二进制数（仅由0和1构成的整数），打印出该数对应的十进制数。输入的二进制数最大不超过30位。\r\n注意：输入的二进制数最大长度可能有30位，用整数保存会溢出。', '[{\'in\': \'6\\n11\\n110\\n1101110\\n11111111\\n100000000\\n10000001111111011\\n\', \'out\': \'3\\n6\\n110\\n255\\n256\\n66555\\n\'}]', 1, 0, 0, '第一行是测试数据的组数n，下面的n行是每一行是一个二进制数。', '输出为n行，分别为对应输入的十进制数。', 1, 13, 'ymc', 1, '2\r\n11\r\n110\r\n', '3');
INSERT INTO `problem` VALUES (540, '谁是最小数', '确定用户输入的m个数中的最小的数。', '[{\'in\': \'4\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'2\\n-9\\n1\\n-10\\n\'}]', 1, 0, 0, '先给出数据的组数，对于每组数据，输入有两行，第一行为用户要输入的整数个数m，第二行为m个用空格隔开的整数。', '每组数据输出只有一行，为用户输入的m个数中最小的数', 1, 13, 'ymc', 1, '2 \n5 \n2 3 7 5 3 \n2 \n-1 -9\n', '2');
INSERT INTO `problem` VALUES (541, '构成三角形的条件', '读入3个非零的double数后，判别这三个值是否可以表示一个三角形的三条边。', '[{\'in\': \'5\\n1 1 1\\n5 6 -1\\n1 2 3\\n4 5 6\\n7 8 9\\n\', \'out\': \'1\\n0\\n0\\n1\\n1\\n\'}]', 1, 0, 0, '第一行是测试数据组数n。下面有n行，每行分别是用空格隔开的3个double，代表三角形的三条边。', '输出为n行，对应第n行输入的结果。判断输入的三个值是否可以表示一个三角形的三条边，如果能则输出1，如果不能输出0 。', 1, 13, 'ymc', 1, '2\n1 1 1\n5 6 -1\n', '1');
INSERT INTO `problem` VALUES (542, '多个整数的和', '确定用户输入的m个数的和。', '[{\'in\': \'5\\n5\\n1 2 3 4 5\\n5\\n2 3 7 5 3\\n2\\n-1 -9\\n10\\n10 9  8 7 6 5 4 3 2 1\\n10\\n-10 9 8 7 6 5 -4 32 21 19\\n\', \'out\': \'15\\n20\\n-10\\n55\\n93\\n\'}]', 1, 0, 0, '先给出数据的组数T，对于每组数据，输入有两行，第一行为用户要输入的数个数m(m<1000)，第二行为m个用空格隔开的int类型整数。', '每组数据输出只有一行，为用户输入的m个数的和。', 1, 13, 'ymc', 1, '2\n5\n1 2 3 4 5\n2\n-1 -9\n', '1');
INSERT INTO `problem` VALUES (543, '给定一个正整数m，打印它的阶乘。', '第一行是测试数据组数n，下面n行每一行是一个正整数。', '[{\'in\': \'6\\n4\\n5\\n7\\n8\\n9\\n10\\n\', \'out\': \'24\\n120\\n5040\\n40320\\n362880\\n3628800\\n\'}]', 1, 0, 0, '输出有n行，分别为对应输入数的阶乘。', '输出有n行，分别为对应输入数的阶乘。', 1, 13, 'ymc', 1, '2\n4\n5\n', '2');
INSERT INTO `problem` VALUES (544, '两个数的最大值', '编写一个程序。要求用户输入两个整数，获取用户输入的数，然后打印出较大的数。如果这两个数相等，则打印信息“These numbers are equal.” 。', '[{\'in\': \'5\\n14 14\\n13 12\\n100 101\\n-9 -9\\n100 100\\n\', \'out\': \'These numbers are equal.\\n13\\n101\\nThese numbers are equal.\\nThese numbers are equal.\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行有两个用空格隔开的int类型整数。', '输出有n行，每行输出对应的结果。', 1, 13, 'ymc', 1, '2\r\n14 14\r\n13 12\r\n', 'T');
INSERT INTO `problem` VALUES (545, '大象喝水 ', '一只大象口渴了，要喝20升水才能解渴，但现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才会解渴。(设PI=3.14159) ', '[{\'in\': \'1\\n23 11\\n\', \'out\': \'3\\n\'}, {\'in\': \'4\\n230 11\\n23 110\\n1 1\\n2 5\\n\', \'out\': \'1\\n1\\n6367\\n128\\n\'}]', 1, 0, 0, '本题有多组测试数据，每组数据一行。\r\n第一行是一个整数n，表示后面有n组测试数据。\r\n后面的n行每行两个整数h和r：分别表示小圆桶的深h，和底面半径r，单位都是厘米。', '每组测试数据输出一行， 每行中一个整数，表示大象需要喝多少桶水。', 1, 13, 'ymc', 2, '1\r\n23 11\r\n', '3');
INSERT INTO `problem` VALUES (546, 'A+B(VI)', '你的任务是求一些整数的和。\r\n', '[{\'in\': \'4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\', \'out\': \'10\\n15\\n55\\n3690\\n\'}]', 1, 0, 0, '输入数据有多组，每组测试实例的第一个数 n，表示在同一行里接着下来有 n 个整数。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n', 1, 13, 'ymc', 1, '4 1 2 3 4\r\n5 1 2 3 4 5', '1');
INSERT INTO `problem` VALUES (547, 'A+B(VII)', '<p>你的任务是计算a+b。</p>', '[{\'in\': \'1 5\\n10 20\\n1000 2000\\n568 7000\', \'out\': \'6\\n\\n30\\n\\n3000\\n\\n7568\\n\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，它有两个整数a、b，这两个整数用空格隔开。</p>', '<p>对于每组输入数据a和b，输出一行，即a+b的值，每个a+b的值后面有一个空行。</p>', 1, 13, 'ymc', 1, '1 5\r\n10 20', '6');
INSERT INTO `problem` VALUES (548, 'A+B(VIII)', '你的任务求一些整数的和。\r\n', '[{\'in\': \'4\\n4 1 2 3 4\\n5 1 2 3 4 5\\n10 1 2 3 4 5 6 7 8 9 10\\n5 100 1000 789 1234 567\', \'out\': \'10\\n\\n15\\n\\n55\\n\\n3690\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数t，表示测试实例的组数。\r\n然后是t行，每组测试实例的第一个数 n，表示在同一行里接着下来有 n 个整数。\r\n', '对于每组输入数据，输出一行，即n个数的和。\r\n每行输出数据之间有一个空行。\r\n', 1, 13, 'ymc', 1, '3\r\n4 1 2 3 4\r\n5 1 2 3 4 5\r\n3 1 2 3', '1');
INSERT INTO `problem` VALUES (549, '整数的立方和 ', '<p>给定一个正整数k（<strong>1&lt;k&lt;10</strong>），求1到k的立方和m。即m=1+2*2*2+&hellip;+k*k*k。</p>', '[{\'in\': \'5\\n\', \'out\': \'225\\n\'}, {\'in\': \'9\\n\', \'out\': \'2025\\n\'}, {\'in\': \'7\\n\', \'out\': \'784\\n\'}]', 1, 0, 0, '<p>输入只有一行，该行包含一个正整数k。</p>', '<p>输出只有一行，该行包含1到k的立方和。</p>', 1, 13, 'ymc', 3, '5\r\n', '2');
INSERT INTO `problem` VALUES (550, '求分数序列和 ', '有一个分数序列 2/1,3/2,5/3,8/5,13/8,21/13,.... 求这个分数序列的前n项之和。', '[{\'in\': \'30\\n\', \'out\': \'48.8406\\n\'}]', 1, 0, 0, '输入有一行：正整数n。', '输出有一行：分数序列的和（浮点数，精确到小数点后4位）。\r\n\r\n可以printf(\"%.4lf\\n\", a)输出浮点数并精确到小数点后4位。', 1, 13, 'ymc', 1, '5\r\n', '8');
INSERT INTO `problem` VALUES (551, '打印完数 ', '一个数如果恰好等于它的因子之和，这个数就成为“完数”。例如，6的因子为1、2、3，而6＝1＋2＋3，因此6是“完数”。编程序打印出1000之内（包括1000）所有的完数，并按如下格式输出其所有因子：\n\n6 its factors are 1 2 3 ', '[{\'in\': \'\', \'out\': \'6 its factors are 1 2 3 \\n28 its factors are 1 2 4 7 14 \\n496 its factors are 1 2 4 8 16 31 62 124 248 \\n\'}]', 1, 0, 0, '无输入', '输出1000以内所有的完数及其因子，每行一个完数，每个因子后面有一个空格。', 1, 13, 'ymc', 1, '无输入', '按');
INSERT INTO `problem` VALUES (552, 'A-B', '<p>给定两个浮点数，求两个浮点数的差。所有浮点数用double类型</p>', '[{\'in\': \'2.3 1.1\\n\', \'out\': \'1.20\\n\'}, {\'in\': \'100.99 99.09\\n\', \'out\': \'1.90\\n\'}]', 1, 0, 0, '<p>输入只有一行，只有两个浮点数a和b，中间有空格分开。</p>', '<p>在单独的一行中输出a-b,结果保留两位小数。</p>', 1, 13, 'ymc', 2, '2.3 1.1\r\n\r\n', '1');
INSERT INTO `problem` VALUES (553, '晶晶赴约会 ', '晶晶的朋友贝贝约晶晶下周一起去看展览，但晶晶每周的1、3、5有课必须上课，请帮晶晶判断她能否接受贝贝的邀请，如果能输出YES；如果不能则输出NO。', '[{\'in\': \'2\\n\', \'out\': \'YES\\n\'}, {\'in\': \'1\\n\', \'out\': \'NO\\n\'}, {\'in\': \'3\', \'out\': \'NO\\n\'}, {\'in\': \'4\\n\', \'out\': \'YES\\n\'}, {\'in\': \'5\\n\', \'out\': \'NO\\n\'}, {\'in\': \'6\\n\', \'out\': \'YES\\n\'}, {\'in\': \'7\\n\', \'out\': \'YES\\n\'}]', 1, 0, 0, '输入有一行，就是贝贝邀请晶晶去看展览的日期，用数字1到7表示从星期一到星期日。', '输出有一行，如果晶晶可以接受贝贝的邀请，输出YES；否则，输出NO。注意YES和NO都是大写字母！', 1, 13, 'ymc', 7, '2', 'Y');
INSERT INTO `problem` VALUES (554, '简单的四则运算', '编写一个程序，要求用户输入两个整数，输出这两个数的和、乘积、差和商。', '[{\'in\': \'5\\n24 3\\n1 1\\n100 101\\n10 -9\\n100 1014\\n\', \'out\': \'27 72 21 8\\n2 1 0 1\\n201 10100 -1 0\\n1 -90 19 -1\\n1114 101400 -914 0\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括用空格隔开的两个int类型整数。', '输出n行，每行四个整数，分别为相应两个输入数的和、乘积、差和商，用空格隔开。', 1, 13, 'ymc', 1, '2\n24 3\n1 1\n', '2');
INSERT INTO `problem` VALUES (555, '水仙花数', '春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的：\r\n“水仙花数”是指一个三位数，它的各位数字的立方和等于其本身，比如：153=1^3+5^3+3^3。\r\n现在要求输出所有在m和n范围内的水仙花数。', '[{\'in\': \'100 120\\n300 380\\n\', \'out\': \'no\\n370 371\\n\'}, {\'in\': \'100 999\\n\', \'out\': \'153 370 371 407\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，包括两个整数m和n（100<=m<=n<=999）。', '对于每个测试实例，要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于m,并且小于等于n，如果有多个，则要求从小到大排列在一行内输出，之间用一个空格隔开;\r\n如果给定的范围内不存在水仙花数，则输出no;\r\n每个测试实例的输出占一行。', 1, 13, 'ymc', 2, '100 120\r\n300 380\r\n', 'n');
INSERT INTO `problem` VALUES (556, '素数判定', '<p>对于表达式n^2+n+41，当n在[x,y]范围内时(-39&lt;=x&lt;=y&lt;=50)，判定该表达式的值是否 都为 素数。 说明：n为整数。</p>', '[{\'in\': \'0 1\\n0 0\\n\', \'out\': \'OK\\n\'}, {\'in\': \'30 40\\n30 35\\n35 37\\n37 39\\n39 40\\n40 42\\n40 41\\n41 50\\n41 42\\n42 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n\', \'out\': \'Sorry\\nOK\\nOK\\nOK\\nSorry\\nSorry\\nSorry\\nSorry\\nSorry\\nOK\\nOK\\nSorry\\nSorry\\nOK\\nOK\\nOK\\nSorry\\nSorry\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由两个整数x，y组成，当x=0,y=0时，该行不做处理。</p>', '<p>对于每个给定范围内的取值，如果表达式的值都为素数，则输出\"OK\",否则请输出&ldquo;Sorry&rdquo;,每组输出占一行。</p>', 1, 13, 'ymc', 2, '0 1\r\n0 0\r\n30 40', 'O');
INSERT INTO `problem` VALUES (557, '数列有序!', '有n(n<=100)个整数，已经按照从小到大顺序排列好了，现在另外给一个整数x，请将该数插入到序列中，并使新的序列仍然有序。', '[{\'in\': \'3 3\\n1 2 4\\n0 0\\n\', \'out\': \'1 2 3 4\\n\'}, {\'in\': \'4 6\\n1 3 9 10\\n4 2\\n3 5 7 9\\n6 3\\n1 2 3 4 5 6\\n0 0\\n\', \'out\': \'1 3 6 9 10\\n2 3 5 7 9\\n1 2 3 3 4 5 6\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每组数据由两行组成，第一行是n和m，第二行是已经有序的n个数的数列。n和m同时为0表示输入数据结束，本行不做处理。', '对于每个测试实例，输出插入新的元素后的数列，每个元素之间有一个空格。', 1, 13, 'ymc', 2, '3 3\r\n1 2 4\r\n0 0\r\n', '1');
INSERT INTO `problem` VALUES (558, '绝对值排序', '输入n(n<=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。', '[{\'in\': \'3 3 -4 2\\n4 0 1 2 -3\\n0\\n\', \'out\': \'-4 3 2\\n-3 2 1 0\\n\'}, {\'in\': \'5 -4 3 6 -7 2\\n4 -7 2 3 -4\\n4 -4 -2 -5 -8\\n0\\n\', \'out\': \'-7 6 -4 3 2\\n-7 -4 3 2\\n-8 -5 -4 -2\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n=0表示输入数据的结束，不做处理。 ', '对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。', 1, 13, 'ymc', 2, '3 3 -4 2\r\n4 0 1 2 -3\r\n0\r\n', '-');
INSERT INTO `problem` VALUES (559, '数据的交换输出', '输入n(n<100)个数，找出其中最小的数，将它与最前面的数交换后输出这些数。', '[{\'in\': \'4 2 1 3 4\\n5 5 4 3 2 1\\n0\\n\', \'out\': \'1 2 3 4\\n1 4 3 2 5\\n\'}, {\'in\': \'4 1 3 2 4\\n5 6 9 4 7 8\\n3 7 8 6\\n0\\n\', \'out\': \'1 3 2 4\\n4 9 6 7 8\\n6 8 7\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的开始是一个整数n，表示这个测试实例的数值的个数，跟着就是n个整数。n=0表示输入的结束，不做处理。', '对于每组输入数据，输出交换后的数列，每组输出占一行。每两个数之间一个空格。', 1, 13, 'ymc', 2, '4 2 1 3 4\r\n5 5 4 3 2 1\r\n0\r\n', '1');
INSERT INTO `problem` VALUES (560, '学生信息输入', '学生信息由学号，姓名，性别，语文成绩，数学成绩，英语成绩，平均分和总分构成。\r\n学号、姓名长度不超过20。\r\n现在给定一个学生学号、姓名、性别和三门课成绩，请输出该生的信息。\r\n设计一个结构体表示学生信息。\r\n分别设计两个函数，来处理学生信息的输入与输出。然后在主函数中调用。', '[{\'in\': \'09001 zhangsan M 78 72 67.1\\n\', \'out\': \'09001 zhangsan M 78.00 72.00 67.10 72.37 217.10\\n\'}, {\'in\': \'09002 zhanghong F 78 82 87.1\\n\', \'out\': \'09002 zhanghong F 78.00 82.00 87.10 82.37 247.10\\n\'}]', 1, 0, 0, '输入只有一行，表示学生信息，格式如下\r\n学号 姓名 性别 语文成绩 数学成绩 英语成绩\r\n中间用空格分开，三门课的成绩是浮点数。', '在一行中输出学生信息，格式如下\r\n学号 姓名 性别 语文成绩 数学成绩 英语成绩 平均成绩 总成绩\r\n中间用空格分开，所有成绩保留2位小数。', 1, 13, 'ymc', 2, '09001 zhangsan M 78 72 67.1\r\n', '0');
INSERT INTO `problem` VALUES (561, '数的计数', '要求找出具有下列性质的数的个数 (包含输入的自然数 n)：\r\n先输入一个自然数 n(n<=300),然后对此自然数按照如下方法进行处理 :\r\n①. 不作任何处理 ;\r\n②. 在它的左边加上一个自然数 ,但该自然数不能超过原数的一半 ;\r\n③. 加上数后 ,继续按此规则进行处理 ,直到不能再加自然数为止 .\r\n例如 :  n = 6\r\n满足条件的数为\r\n6\r\n16\r\n26\r\n126\r\n36\r\n136\r\n则个数为 6 ', '[{\'in\': \'11\\n1\\n2\\n6\\n10\\n20\\n30\\n50\\n100\\n200\\n250\\n300\\n\', \'out\': \'1\\n2\\n6\\n14\\n60\\n166\\n786\\n9828\\n205658\\n613646\\n1564308\\n\'}]', 1, 0, 0, '第一行为1个正整数t，表示有t组数据，以下t行每行有1个正整数n。', '对于每个n，输出1个整数，即具有上述性质的数的个数。', 1, 13, 'ymc', 1, '2\r\n6\r\n10\r\n', '6');
INSERT INTO `problem` VALUES (562, '三位数分解', '给定一个正的三位整数，请求出该整数的百位，十位和各位。之间用一个空格分开。', '[{\'in\': \'5\\n100\\n120\\n135\\n456\\n789\\n\', \'out\': \'1 0 0\\n1 2 0\\n1 3 5\\n4 5 6\\n7 8 9\\n\'}]', 1, 0, 0, '本题有多组测试数据。\r\n先给定一个整数n，表示后面有n行，接下来n行每行一个3位的整数。', '输出有多行，每组测试数据一行。\r\n每行输出对应的三位数的百位，十位和各位，用一个空格分开，注意，个位数字后面没有空格。', 1, 13, 'ymc', 1, '2\r\n100\r\n120\r\n', '1');
INSERT INTO `problem` VALUES (563, '求幂', '输入任意实数x和正整数n，计算x的n次幂。', '[{\'in\': \'2 3\\n\', \'out\': \'8.000\\n\'}, {\'in\': \'3.4 8\\n\', \'out\': \'17857.939\\n\'}]', 1, 0, 0, '输入只有一行，该行中包含x与n，中间用空格分开。', '在单独一行中输出x^n的值。结果保留3位小数。', 1, 13, 'ymc', 2, '2 3\r\n', '8');
INSERT INTO `problem` VALUES (564, '实验七 最小值', '<p>输入n个数(n小于100)，输出这n个数中的最小值及其下标。 要求定义和调用函数，寻找n个数中的最小值及其下标，在函数中使用指针、数组。</p>', '[{\'in\': \'5\\n3 2 1 4 5\\n\', \'out\': \'1 2\\n\'}, {\'in\': \'10\\n9 8 7 6 5 4 3 2 1 8\\n\', \'out\': \'1 8\\n\'}]', 1, 0, 0, '<p>输入有两行，第一行是一个整数n，表示有多少个整数。第二行有n个整数，中间用空格分开。</p>', '<p>在单独的一行中输出两个数min和k，min表示最小值，k表示其在数组中的下标。中间用一个空格分开。</p>', 1, 13, 'ymc', 2, '5\r\n3 2 1 4 5\r\n', '1');
INSERT INTO `problem` VALUES (565, '正方形', '给定一个字符，请输出一个由该字符构成的边长为4的正方形。\r\n', '[{\'in\': \'*\\n\', \'out\': \'****\\n*  *\\n*  *\\n****\\n\'}, {\'in\': \'$\\n\', \'out\': \'$$$$\\n$  $\\n$  $\\n$$$$\\n\'}]', 1, 0, 0, '输入只有一行，该行只有一个字符。\r\n', '输出一个边长为4的正方形，正方形的四条边均由输入的字符构成，正方形的内部由空格构成。\r\n', 1, 13, 'ymc', 2, '*\r\n', '*');
INSERT INTO `problem` VALUES (566, '奇偶和', '给定n个正整数，求这些整数中奇数的和与偶数的和。\r\n', '[{\'in\': \'5\\n4\\n1 2 3 4\\n6\\n1 6 3 4 7 9\\n10\\n1 2 3 4 5 6 7 8 9 10\\n20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n40\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\', \'out\': \'4 6\\n20 10\\n25 30\\n100 110\\n200 220\\n\'}]', 1, 0, 0, '有多组测试数据。\r\n第一行是一个整数T，表示有T组测试数据。\r\n每个测试数据有有2行。\r\n第一行是一个正整数n。\r\n第二行有n个由空格分开的正整数。\r\n', '输出有T行，每行两个整数，整数之间由一个空格分开。这两个整数分表表示对应测试数据块的奇数和与偶数和。\r\n', 1, 13, 'ymc', 1, '2\r\n4\r\n1 2 3 4\r\n6\r\n1 6 3 4 7 9\r\n', '4');
INSERT INTO `problem` VALUES (567, '加密', '给定一行由文本，把这行文本加密后输出。\r\n这里的加密算法非常简单：小写字母a,b,c,...,z转化为1,2,3,...,26后输出。大写字母A,B,C,...,Z转化为27,28,29,...,52后输出，其它所有的字符保持不变。\r\n', '[{\'in\': \'Hello,\\nWelcome to c!\\nThis is only a text case,\\nAnd Only A test,Please Take Easy!^_^...\\n\', \'out\': \'345121215,\\n49512315135 2015 3!\\n468919 919 15141225 1 2052420 31195,\\n27144 41141225 27 2051920,421251195 461115 3111925!^_^...\\n\'}]', 1, 0, 0, '输入有若干行，处理到文件结尾。\r\n', '把输入的文本加密后输出。\r\n', 1, 13, 'ymc', 1, 'Hello,\r\nWelcome to c!\r\n', '3');
INSERT INTO `problem` VALUES (568, '\n直角三角形\r\n', '\n本题要求用函数完成！！\r\n三条边的边长均为整数的直角三角形称为整数直角三角形。\r\n给定一个整数n，求斜边的边长不超过n的所有整数直角三角形的个数。\r\n', '[{\'in\': \'10\\n5\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n\', \'out\': \'case#1\\n1\\ncase#2\\n2\\ncase#3\\n6\\ncase#4\\n11\\ncase#5\\n16\\ncase#6\\n20\\ncase#7\\n26\\ncase#8\\n33\\ncase#9\\n39\\ncase#10\\n47\\n\'}]', 1, 0, 0, '\n输入有多行。\r\n第一行是一个整数T，表示有T个测试数据。\r\n接下来的T行，每行有一个正整数n。\r\n', '\n每个测试数据的输出有两行，第一行先输出测试数据的编号，格式如case#i,其中i为测试数据编号。\r\n第二行是一个整数，表示对应的整数直角三角形的个数。\r\n', 1, 13, 'ymc', 1, '\n4\r\n5\r\n10\r\n20\r\n30\r\n', '\n');
INSERT INTO `problem` VALUES (569, '\n自由落体\r\n', '\n一个球从高为x的空中落下，每次落地后反跳回原高度的一半再落下。求它在第n次落地时总共经过的距离。\r\n', '[{\'in\': \'100 10\\n\', \'out\': \'299.609375\\n\'}, {\'in\': \'1000 13\\n\', \'out\': \'2999.511719\\n\'}, {\'in\': \'1024 15\\n\', \'out\': \'3071.875000\\n\'}]', 1, 0, 0, '\n测试数据只有一行，该行由两个数组成。第一个数是实数，表示球初始的高度，第二个是正整数n。\r\n', '\n在单独的一行中输出球第n次落地是经过的总距离，结果保留6位小数。\r\n', 1, 13, 'ymc', 3, '\n100 10\r\n', '\n');
INSERT INTO `problem` VALUES (570, '求平面上两点间的距离', '<p>给定两个点，求这两个点之间的距离。 坐标采用double类型。</p>', '[{\'in\': \'10.2 50.3 11 13.9\\n\', \'out\': \'36.41\\n\'}, {\'in\': \'14.7 17.1 17.0 27.2\\n\', \'out\': \'10.36\\n\'}]', 1, 0, 0, '<p>输入一行，代表两个点，每个点由两个浮点数x和y组成。</p>', '<p>输出一行，它是两点之间的距离。 结果保留两位小数。</p>', 1, 13, 'ymc', 2, '34.0 23.0 28.1 21.6\r\n', '6');
INSERT INTO `problem` VALUES (571, '过河卒', '<p>如图，A 点有一个过河卒，需要走到目标 B 点。卒行走规则：可以向下、或者向右。同时在棋盘上的任一点有一个对方的马（如图中的C点），该马所在的点和所有跳跃一步可达的点称为对方马的控制点。例如图中 C 点上的马可以控制 9 个点（图中的P1，P2 &hellip; P8 和 C）。卒不能通过对方马的控制点。</p>\r\n<p><img src=\"/images/media/uploads/images/2015_4_22_17_50_51.PNG\" alt=\"\" width=\"300\" height=\"170\" /></p>\r\n<p>棋盘用坐标表示，A 点（0，0）、B 点（n,m）(n,m 为不超过20的整数，并由键盘输入)，同样马的位置坐标是需要给出的（约定: C<span>&ne;</span>A，同时C<span>&ne;</span>B）。现在要求你计算出卒从 A 点能够到达 B 点的路径的条数。</p>', '[{\'in\': \'8 6 0 4\\n\', \'out\': \'1617\\n\'}, {\'in\': \'10 10 4 4\\n\', \'out\': \'6802\\n\'}, {\'in\': \'20 20 4 0\\n\', \'out\': \'56477364570\\n\'}, {\'in\': \'19 19 1 0\\n\', \'out\': \'2203961430\\n\'}, {\'in\': \'14 16 7 5\\n\', \'out\': \'39217645\\n\'}]', 1, 0, 0, '<p>输入只有一行，该行有四个整数，一次表示B点的坐标(n,m)以及对方马的位置(X,Y)。</p>', '<p>在单独的一行中输出一个整数，即卒从A点走到B点的方法数。</p>', 1, 13, 'ymc', 5, '6 6 3 2\r\n', '1');
INSERT INTO `problem` VALUES (572, '三次方求和', '<p>小鱼儿要过8岁生日啦！今年，她特别想要一份与众不同的礼物，那就是一条能在阳光下发出五光十色耀眼光芒的水晶项链。她把这个想法告诉了妈妈。妈妈对小鱼儿神秘的一笑，透露道：&ldquo;邻居张阿姨家有个后花园。她的花园里有很多漂亮的水晶珠。可是张阿姨从来不会轻易让人进入她的后花园，你必须回答出她提出的问题，才可以进去采集水晶珠&hellip;&hellip;&rdquo;还没等妈妈说完，小鱼儿已经迫不及待的飞奔而去。她来到张阿姨家，说明了来意，张阿姨乐呵呵的说：&ldquo;小鱼儿，如果你能回答出我的问题，我可以让你进入我的水晶花园。我的问题很简单，给你一个三位数，你要对这个三位数的各位数字的3次方求和，然后再对求出的和中各位数字的3次方求和，如此一直继续下去，判断最后能否得到一个不再变化的固定值。如能得到一个固定值，就告诉我这个固定值；如果不能，则告诉我提示信息&ldquo;error&rdquo;。注意了，在求解过程中，若某一次求和得到的值超过3位数，则取该数的低三位继续往下运算&hellip;&hellip;</p>\r\n<p>例如：对于三位数111，则第一次计算应该是1&times;1&times;1 + 1&times;1&times;1 + 1&times;1&times;1=3。第二次应是0&times;0&times;0 + 0&times;0&times;0 + 3&times;3&times;3=27。第三次应是0&times;0&times;0 + 2&times;2&times;2 + 7&times;7&times;7=351。第四次应是3&times;3&times;3 + 5&times;5&times;5 + 1&times;1&times;1=153。第五次应是1&times;1&times;1 + 5&times;5&times;5 + 3&times;3&times;3=153，与第四次结果重合，不再计算，输出固定值153。&ldquo;请你写一个程序帮助小鱼儿进入张阿姨的水晶花园吧。</p>', '[{\'in\': \'562\', \'out\': \'error\\n\'}, {\'in\': \'549\\n\', \'out\': \'371\\n\'}, {\'in\': \'720\\n\', \'out\': \'153\\n\'}, {\'in\': \'112\\n\', \'out\': \'1\\n\'}, {\'in\': \'109\\n\', \'out\': \'370\\n\'}]', 1, 0, 0, '<p><span style=\"font-size: 10px;\">输入只有一个正整数n</span><strong style=\"font-size: 10px;\">（100&lt;=n&lt;=999)</strong><span style=\"font-size: 10px;\">。</span></p>', '<p>如果能得到一个固定值，则在单独的一行中输出这个固定值，否则请在单独的一行中输出\"error\"<strong>(输出不包括两边的引号）</strong>。</p>', 1, 13, 'ymc', 5, '111\r\n', '1');
INSERT INTO `problem` VALUES (573, '字符串合并', '<p>给定两个仅有英文字母构成的字符串s和t，把这两个字符串合并后排序。排序规则如下</p>\r\n<p>1）不区分大小写按26个字母的字典顺序排序，即a和A在最前，其次是b和B，...，最后是z和Z</p>\r\n<p>2）小写字母在大写字母的前面。</p>\r\n<p>例如HELLO和hello合并并排序后的字符串为</p>\r\n<p>eEhHllLLoO</p>', '[{\'in\': \'HELLOworldTEST\\nhelloWORLDtest\\n\', \'out\': \'dDeeEEhHlllLLLooOOrRsSttTTwW\\n\'}, {\'in\': \'thisISTESTANDONLYATEstoKWORld\\nTHISiStestandonlyateSTOkworldwradWZZZZzzzzaaaAAAAaaa\\n\', \'out\': \'aaaaaaaaaAAAAAAddddDeeEEhHiiIIkKlllLnnNNoooOOOrrRsssSSSSStttttTTTTTwwWWyYzzzzZZZZ\\n\'}]', 1, 0, 0, '<p>输入为两行，每行都是有大小写英文字母构成的字符串。每个字符创的长度不超过100。</p>', '<p>在单独的一行中输出合并排序后的字符串。</p>', 1, 13, 'ymc', 2, 'HELLO\r\nhello\r\n', 'e');
INSERT INTO `problem` VALUES (574, '扑克牌翻转', '<p>有n张朴克牌，使它们全部正面朝上。</p>\r\n<p>从第2张牌开始，把凡是2的倍数位置上的牌翻成正面朝下；</p>\r\n<p>接着从第3张牌开始，把凡是3的倍数位置上的牌正面朝上的翻成正面朝下，正面朝下的翻成正面朝上；</p>\r\n<p>接着从第4张牌开始，把凡是4的倍数位置上的牌按此规律翻转；</p>\r\n<p>依此类推，直到第n张为止（同样也要翻转）。</p>\r\n<p>统计最后有几张牌正面朝上，并打印出它们的位置。</p>', '[{\'in\': \'52\', \'out\': \'7\\n1 4 9 16 25 36 49 \\n\'}, {\'in\': \'950\', \'out\': \'30\\n1 4 9 16 25 36 49 64 81 100 121 144 169 196 225 256 289 324 361 400 441 484 529 576 625 676 729 784 841 900 \\n\'}]', 1, 0, 0, '<p>输入只有一个正整数n(n&lt;1000)</p>', '<p>第一行输出总共有多少张牌是朝上的。</p>\r\n<p>第二行按从小到大的顺序输出朝上的牌的位置，每个数后面有一个空格。</p>', 1, 13, 'ymc', 2, '10\r\n', '3');
INSERT INTO `problem` VALUES (575, '阿牛的EOF牛肉串', '<p>今年的ACM暑期集训队一共有18人，分为6支队伍。其中有一个叫做EOF的队伍，由04级的阿牛、XC以及05级的COY组成。在共同的集训生活中，大家建立了深厚的友谊，阿牛准备做点什么来纪念这段激情燃烧的岁月，想了一想，阿牛从家里拿来了一块上等的牛肉干，准备在上面刻下一个长度为n的只由\"E\" \"O\" \"F\"三种字符组成的字符串（可以只有其中一种或两种字符，但绝对不能有其他字符）,阿牛同时禁止在串中出现O相邻的情况，他认为，\"OO\"看起来就像发怒的眼睛，效果不好。 你，NEW ACMer,EOF的崇拜者，能帮阿牛算一下一共有多少种满足要求的不同的字符串吗？</p>', '[{\'in\': \'1\\n2\\n\', \'out\': \'3\\n8\\n\'}, {\'in\': \'8\\n10\\n18\\n\', \'out\': \'3344\\n24960\\n77473792\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例,每个测试实例占一行,由一个整数n组成，</p>\r\n<p>(0&lt;n&lt;40)。</p>', '<p>对于每个测试实例，请输出全部的满足要求的涂法，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '1\r\n2\r\n', '3');
INSERT INTO `problem` VALUES (576, '简易版之最短距离', '寒假的时候，ACBOY要去拜访很多朋友，恰巧他所有朋友的家都处在坐标平面的X轴上。ACBOY可以任意选择一个朋友的家开始访问，但是每次访问后他都必须回到出发点，然后才能去访问下一个朋友。\n比如有4个朋友，对应的X轴坐标分别为1， 2， 3， 4。当ACBOY选择坐标为2的点做为出发点时，则他最终需要的时间为 |1-2|+|2-2|+|3-2|+|4-2| = 4。\n现在给出Ｎ个朋友的坐标，那么ACBOY应该怎么走才会花费时间最少呢？', '[{\'in\': \'2\\n2 \\n2 4 \\n3 \\n2 4 6\\n\', \'out\': \'2\\n4\\n\'}, {\'in\': \'2\\n3\\n3 6 9\\n3\\n5 6 18\\n\', \'out\': \'6\\n13\\n\'}]', 1, 0, 0, '输入首先是一个正整数M，表示M个测试实例。每个实例的输入有2行，首先是一个正整数N（N <= 500)，表示有N个朋友，下一行是N个正整数，表示具体的坐标(所有数据均<=10000).', '对于每一个测试实例，请输出访问完所有朋友所花的最少时间，每个实例的输出占一行。', 1, 13, 'ymc', 2, '2\n2 \n2 4 \n3 \n2 4 6\n', '2');
INSERT INTO `problem` VALUES (577, '数塔', '在讲述DP算法的时候，一个经典的例子就是数塔问题，它是这样描述的：\r\n\r\n有如下所示的数塔，要求从顶层走到底层，若每一步只能走到相邻的结点，则经过的结点的数字之和最大是多少？\r\n已经告诉你了，这是个DP的题目，你能AC吗?\r\n\r\n\r\n注意：从顶层垂直向下走，或者向右下方走。', '[{\'in\': \'2\\n5\\n7\\n3 8\\n8 1 0 \\n2 7 4 4\\n4 5 2 6 5\\n2\\n1\\n1 2\\n\\n\', \'out\': \'30\\n3\\n\'}, {\'in\': \'3\\n5\\n1\\n6 5\\n78 58 96\\n4 5 8 7\\n51 97 24 67 45\\n6\\n4\\n6 4\\n9 87 7\\n75 96 43 12\\n1 5 63 14 52\\n9 87 54 56 12 12\\n3\\n45\\n89 75\\n12 35 45\\n169\\n\', \'out\': \'187\\n312\\n169\\n\'}]', 1, 0, 0, '输入数据首先包括一个整数C,表示测试实例的个数，每个测试实例的第一行是一个整数N(1 <= N <= 100)，表示数塔的高度，接下来用N行数字表示数塔，其中第i行有个i个整数，且所有的整数均在区间[0,99]内。', '对于每个测试实例，输出可能得到的最大和，每个实例的输出占一行。', 1, 13, 'ymc', 2, '1\r\n5\r\n7\r\n3 8\r\n8 1 0 \r\n2 7 4 4\r\n4 5 2 6 5\r\n', '3');
INSERT INTO `problem` VALUES (578, '剪花布条', '一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？\n', '[{\'in\': \'abcde a3\\naaaaaa  aa\\n#\\n\', \'out\': \'0\\n3\\n\'}, {\'in\': \'agshd ag\\nagshdihagjsdjk ag\\naaaaaaa aaa\\n#\\n\', \'out\': \'1\\n2\\n2\\n\'}]', 1, 0, 0, '输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。', '输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。', 1, 13, 'ymc', 2, 'abcde a3\naaaaaa  aa\n#\n', '0');
INSERT INTO `problem` VALUES (579, '算菜价', '妈妈每天都要出去买菜，但是回来后，兜里的钱也懒得数一数，到底花了多少钱真是一笔糊涂帐。现在好了，作为好儿子（女儿）的你可以给她用程序算一下了，呵呵。\n', '[{\'in\': \'青菜 1  2\\n罗卜 2  1.5\\n鸡腿 2  4.2\\n\', \'out\': \'13.4\\n\'}, {\'in\': \'百次 2 12.3\\n汇集 3 12.3\\n李涛 3 39.2\\n河彬 4 45.3\\n新红 5 23.2\\n五大 6 1.0\\n\', \'out\': \'482.3\\n\'}, {\'in\': \'哈哈 2 34.2\\n问问 4 20.3\\n秘密 5 11.1\\n孝泼 6 34.3\\n财老板 5 12.4\\n教主 6 12.3\\n\', \'out\': \'546.7\\n\'}]', 1, 0, 0, '输入含有一些数据组，每组数据包括菜种（字串），数量（计量单位不论，一律为double型数）和单价（double型数，表示人民币元数），因此，每组数据的菜价就是数量乘上单价啊。菜种、数量和单价之间都有空格隔开的。\n', '支付菜价的时候，由于最小支付单位是角，所以总是在支付的时候采用四舍五入的方法把分头去掉。最后，请输出一个精度为角的菜价总量。所有组的菜和在一起付钱。', 1, 13, 'ymc', 3, '青菜 1  2\n罗卜 2  1.5\n鸡腿 2  4.2\n', '1');
INSERT INTO `problem` VALUES (580, '产生冠军', '有一群人，打乒乓球比赛，两两捉对撕杀，每两个人之间最多打一场比赛。\n球赛的规则如下：\n如果A打败了B，B又打败了C，而A与C之间没有进行过比赛，那么就认定，A一定能打败C。\n如果A打败了B，B又打败了C，而且，C又打败了A，那么A、B、C三者都不可能成为冠军。\n根据这个规则，无需循环较量，或许就能确定冠军。你的任务就是面对一群比赛选手，在经过了若干场撕杀之后，确定是否已经实际上产生了冠军。\n', '[{\'in\': \'3\\nAlice Bob\\nSmith John\\nAlice Smith\\n5\\na c\\nc d\\nd e\\nb e\\na d\\n0\\n\', \'out\': \'Yes\\nNo\\n\'}, {\'in\': \'5\\na b\\nc d\\nd a\\nb d\\nb c\\n5\\nyanghebing wumingquan\\nlouxinghong litao\\nlouxinghong wumingquan\\nlitao yanghebing\\nlouxinghong yanghebing\\n0\\n\', \'out\': \'No\\nYes\\n\'}]', 1, 0, 0, '输入含有一些选手群，每群选手都以一个整数n(n<1000)开头，后跟n对选手的比赛结果，比赛结果以一对选手名字（中间隔一空格）表示，前者战胜后者。如果n为0，则表示输入结束。', '对于每个选手群，若你判断出产生了冠军，则在一行中输出“Yes”，否则在一行中输出“No”。', 1, 13, 'ymc', 2, '3\nAlice Bob\nSmith John\nAlice Smith\n5\na c\nc d\nd e\nb e\na d\n0\n', 'Y');
INSERT INTO `problem` VALUES (581, '汉诺塔IV', '还记得汉诺塔III吗？他的规则是这样的：不允许直接从最左(右)边移到最右(左)边(每次移动一定是移到中间杆或从中间移出)，也不允许大盘放到小盘的上面。xhd在想如果我们允许最大的盘子放到最上面会怎么样呢？（只允许最大的放在最上面）当然最后需要的结果是盘子从小到大排在最右边。', '[{\'in\': \'2\\n1\\n10\\n\', \'out\': \'2\\n19684\\n\'}, {\'in\': \'5\\n20\\n18\\n16\\n14\\n7\\n\', \'out\': \'1162261468\\n129140164\\n14348908\\n1594324\\n730\\n\'}]', 1, 0, 0, '输入数据的第一行是一个数据T，表示有T组数据。\n每组数据有一个正整数n(1 <= n <= 20)，表示有n个盘子。', '对于每组输入数据，最少需要的摆放次数。', 1, 13, 'ymc', 2, '2\n1\n10\n', '2');
INSERT INTO `problem` VALUES (582, '夹角有多大', '时间过的好快，一个学期就这么的过去了，xhd在傻傻的看着表，出于对数据的渴望，突然他想知道这个表的时针和分针的夹角是多少。现在xhd知道的只有时间，请你帮他算出这个夹角。\n\n注：夹角的范围[0，180]，时针和分针的转动是连续而不是离散的。', '[{\'in\': \'2\\n8 3 17\\n5 13 30\\n\', \'out\': \'138\\n75\\n\'}, {\'in\': \'3\\n4 48 59\\n11 59 3\\n3 45 55\\n\', \'out\': \'149\\n5\\n162\\n\'}]', 1, 0, 0, '输入数据的第一行是一个数据T，表示有T组数据。\n每组数据有三个整数h(0 <= h < 24)，m(0 <= m < 60)，s(0 <= s < 60)分别表示时、分、秒。', '对于每组输入数据，输出夹角的大小的整数部分。', 1, 13, 'ymc', 2, '2\n8 3 17\n5 13 30\n', '1');
INSERT INTO `problem` VALUES (583, '神、上帝以及老天爷', '<p>ACM contest的颁奖晚会隆重开始了！ 为了活跃气氛，组织者举行了一个别开生面、奖品丰厚的抽奖活动，这个活动的具体要求是这样的： 首先，所有参加晚会的人员都将一张写有自己名字的字条放入抽奖箱中； 然后，待所有字条加入完毕，每人从箱中取一个字条； 最后，如果取得的字条上写的就是自己的名字，那么&ldquo;恭喜你，中奖了！&rdquo; 大家可以想象一下当时的气氛之热烈，毕竟中奖者的奖品是大家梦寐以求的Twins签名照呀！不过，正如所有试图设计的喜剧往往以悲剧结尾，这次抽奖活动最后竟然没有一个人中奖！ 我的神、上帝以及老天爷呀，怎么会这样呢？ 不过，先不要激动，现在问题来了，你能计算一下发生这种情况的概率吗？ 不会算？难道你也想以悲剧结尾？！</p>', '[{\'in\': \'1\\n2\\n\', \'out\': \'50.00%\\n\'}, {\'in\': \'3\\n4\\n6\\n8\\n\', \'out\': \'37.50%\\n36.81%\\n36.79%\\n\'}, {\'in\': \'3\\n4\\n6\\n8\\n\', \'out\': \'37.50%\\n36.81%\\n36.79%\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数C,表示测试实例的个数，然后是C 行数据，每行包含一个整数n</p>\r\n<p>(1&lt;n&lt;=20),表示参加抽奖的人数。</p>', '<p>对于每个测试实例，请输出发生这种情况的百分比，每个实例的输出占一行, 结果保留两位小数(四舍五入)，具体格式请参照sample output。</p>', 1, 13, 'ymc', 3, '1\r\n2\r\n', '5');
INSERT INTO `problem` VALUES (584, '考新郎', '<p>国庆期间,省城HZ刚刚举行了一场盛大的集体婚礼,为了使婚礼进行的丰富一些,司仪临时想出了有一个有意思的节目,叫做\"考新郎\",具体的操作如图: 首先,给每位新娘打扮得几乎一模一样,并盖上大大的红盖头随机坐成一排; 然后,让各位新郎寻找自己的新娘.每人只准找一个,并且不允许多人找一个. 最后,揭开盖头,如果找错了对象就要当众跪搓衣板... 看来做新郎也不是容易的事情... 假设一共有N对新婚夫妇,其中有M个新郎找错了新娘,求发生这种情况一共有多少种可能.</p>', '[{\'in\': \'2\\n2 2\\n3 2\\n\', \'out\': \'1\\n3\\n\'}, {\'in\': \'2\\n6 4\\n10 8\\n\', \'out\': \'135\\n667485\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数C, 表示测试实例的个数，然后是C行数据，每行包含两个整数N和M。 N、M大于1而且小于等20， 并且N大于等于M。（1&lt;M&lt;=N&lt;=20）</p>', '<p>对于每个测试实例，请输出一共有多少种发生这种情况的可能，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n2 2\r\n3 2\r\n', '1');
INSERT INTO `problem` VALUES (585, '折线分割平面', '<p>我们看到过很多直线分割平面的题目，今天的这个题目稍微有些变化，我们要求的是n条折线分割平面的最大数目。比如，一条折线可以将平面分成两部分，两条折线最多可以将平面分成7部分，具体如下所示。</p>', '[{\'in\': \'2\\n1\\n2\\n\', \'out\': \'2\\n7\\n\'}, {\'in\': \'3\\n6\\n7\\n19\\n\', \'out\': \'67\\n92\\n704\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数C,表示测试实例的个数，然后是C 行数据，每行包含一个整数n</p>\r\n<p>(0&lt;n&lt;=100),表示折线的数量。</p>', '<p>对于每个测试实例，请输出平面的最大分割数，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n1\r\n2\r\n', '2');
INSERT INTO `problem` VALUES (586, 'A + B Again', 'There must be many A + B problems in our OJ , now a new one is coming.\r\nGive you two hexadecimal integers , your task is to calculate the sum of them,and print it in hexadecimal too.\r\nEasy ? AC it !', '[{\'in\': \'+A -A\\n+1A 12\\n1A -9\\n-1A -12\\n1A -AA\\n\', \'out\': \'0\\n2C\\n11\\n-2C\\n-90\\n\'}, {\'in\': \'-21 -B\\n+C +B\\n-C 8\\n+A -A\\n\', \'out\': \'-2C\\n17\\n-4\\n0\\n\'}]', 1, 0, 0, 'The input contains several test cases, please process to the end of the file.\r\nEach case consists of two hexadecimal integers A and B in a line seperated by a blank.\r\nThe length of A and B is less than 15.', 'For each test case,print the sum of A and B in hexadecimal in one line.', 1, 13, 'ymc', 2, '+A -A\r\n+1A 12\r\n1A -9\r\n-1A -12\r\n1A -AA\r\n', '0');
INSERT INTO `problem` VALUES (587, '汉诺塔III', '约19世纪末，在欧州的商店中出售一种智力玩具，在一块铜板上有三根杆，最左边的杆上自上而下、由小到大顺序串着由64个圆盘构成的塔。目的是将最左边杆上的盘全部移到右边的杆上，条件是一次只能移动一个盘，且不允许大盘放在小盘的上面。\r\n现在我们改变游戏的玩法，不允许直接从最左(右)边移到最右(左)边(每次移动一定是移到中间杆或从中间移出)，也不允许大盘放到下盘的上面。\r\nDaisy已经做过原来的汉诺塔问题和汉诺塔II，但碰到这个问题时，她想了很久都不能解决，现在请你帮助她。现在有N个圆盘，她至少多少次移动才能把这些圆盘从最左边移到最右边？\r\n', '[{\'in\': \'1\\n3\\n12\\n\', \'out\': \'2\\n26\\n531440\\n\'}, {\'in\': \'19\\n18\\n17\\n16\\n15\\n14\\n13\\n7\\n\', \'out\': \'1162261466\\n387420488\\n129140162\\n43046720\\n14348906\\n4782968\\n1594322\\n2186\\n\'}]', 1, 0, 0, '包含多组数据，每次输入一个N值(1<=N=19)。', '对于每组数据，输出移动最小的次数。', 1, 13, 'ymc', 2, '1\r\n3\r\n12\r\n', '2');
INSERT INTO `problem` VALUES (588, '小兔的棋盘', '小兔的叔叔从外面旅游回来给她带来了一个礼物，小兔高兴地跑回自己的房间，拆开一看是一个棋盘，小兔有所失望。不过没过几天发现了棋盘的好玩之处。从起点(0，0)走到终点(n,n)的最短路径数是C(2n,n),现在小兔又想如果不穿越对角线(但可接触对角线上的格点)，这样的路径数有多少?小兔想了很长时间都没想出来，现在想请你帮助小兔解决这个问题，对于你来说应该不难吧!\r\n ', '[{\'in\': \'1\\n3\\n12\\n-1\\n\', \'out\': \'2\\n10\\n416024\\n\'}, {\'in\': \'18\\n17\\n16\\n15\\n8\\n6\\n-1\\n\', \'out\': \'955277400\\n259289580\\n70715340\\n19389690\\n2860\\n264\\n\'}]', 1, 0, 0, '每次输入一个数n(1<=n<=18)，当n等于－1时结束输入。', '每个测试数据输出一行，每行只有一个整数，该整数为小兔从从起点(0，0)走到终点(n,n)不穿越对角线(但可接触对角线上的格点)的最短路径数。', 1, 13, 'ymc', 2, '1\r\n3\r\n12\r\n-1\r\n', '2');
INSERT INTO `problem` VALUES (589, 'Coin Change', 'Suppose there are 5 types of coins: 50-cent, 25-cent, 10-cent, 5-cent, and 1-cent. We want to make changes with these coins for a given amount of money.\n\nFor example, if we have 11 cents, then we can make changes with one 10-cent coin and one 1-cent coin, or two 5-cent coins and one 1-cent coin, or one 5-cent coin and six 1-cent coins, or eleven 1-cent coins. So there are four ways of making changes for 11 cents with the above coins. Note that we count that there is one way of making change for zero cent.\n\nWrite a program to find the total number of different ways of making changes for any amount of money in cents. Your program should be able to handle up to 100 cents.', '[{\'in\': \'11\\n26\\n\', \'out\': \'4\\n13\\n\'}, {\'in\': \'250\\n192\\n92\\n\', \'out\': \'3830\\n1766\\n218\\n\'}]', 1, 0, 0, 'The input file contains any number of lines, each one consisting of a number ( ≤250 ) for the amount of money in cents.', 'For each input line, output a line containing the number of different ways of making changes with the above 5 types of coins.', 1, 13, 'ymc', 2, '11\n26\n', '4');
INSERT INTO `problem` VALUES (590, '无限的路', '甜甜从小就喜欢画图画，最近他买了一支智能画笔，由于刚刚接触，所以甜甜只会用它来画直线，于是他就在平面直角坐标系中画出如下的图形。甜甜的好朋友蜜蜜发现上面的图还是有点规则的，于是他问甜甜：在你画的图中，我给你两个点，请你算一算连接两点的折线长度（即沿折线走的路线长度）吧。\n', '[{\'in\': \'5\\n0 0 0 1\\n0 0 1 0\\n2 3 3 1\\n99 99 9 9\\n5 5 5 5\\n\', \'out\': \'1.000\\n2.414\\n10.646\\n54985.047\\n0.000\\n\'}, {\'in\': \'5\\n3 4 1 2\\n3 99 99 3 \\n5 8 97 45\\n12 54 67 34\\n34 13 78 94\\n\', \'out\': \'56.717\\n135.765\\n28316.514\\n8319.186\\n38688.163\\n\'}]', 1, 0, 0, '第一个数是正整数N（≤100）。代表数据的组数。\n每组数据由四个非负整数组成x1，y1，x2，y2；所有的数都不会大于100。', '对于每组数据，输出两点(x1,y1),(x2,y2)之间的折线距离。注意输出结果精确到小数点后3位。', 1, 13, 'ymc', 2, '5\n0 0 0 1\n0 0 1 0\n2 3 3 1\n99 99 9 9\n5 5 5 5\n', '1');
INSERT INTO `problem` VALUES (591, '整除的尾数', '<p>一个整数，只知道前几位，不知道末二位，被另一个整数除尽了，那么该数的末二位该是什么呢？</p>', '[{\'in\': \'200 40\\n1992 95\\n0 0\\n\', \'out\': \'00 40 80\\n15\\n\'}, {\'in\': \'562 35\\n761 12\\n76 12\\n456 56\\n7864 11\\n45 98\\n7854 14\\n0 0\\n\', \'out\': \'10 45 80\\n04 16 28 40 52 64 76 88\\n08 20 32 44 56 68 80 92\\n40 96\\n01 12 23 34 45 56 67 78 89\\n08\\n00 14 28 42 56 70 84 98\\n\'}]', 1, 0, 0, '<p>输入数据有若干组，每组数据包含二个整数a，b（<strong>0&lt;a&lt;10000, 10&lt;b&lt;100</strong>），若遇到0 0则处理结束。</p>', '<p>对应每组数据，将满足条件的所有尾数在一行内输出，格式见样本输出。同组数据的输出，其每个尾数之间空一格，行末没有空格。</p>', 1, 13, 'ymc', 2, '200 40\r\n1992 95\r\n0 0\r\n', '0');
INSERT INTO `problem` VALUES (592, '零幺串', '我们称用1和0组成的串为“零幺串”，称只用1组成的串为“幺串”，称只用0组成的串为“零串”。试写一个函数（过程），使得它对任给零幺串S，计算n1和n0的值（其中n1表示S中最长幺串的长度，n0表示S中最长零串的长度）。', '[{\'in\': \'00010111001110001111\\n00011110010\\n00011\\n\', \'out\': \'4    3\\n4    3\\n2    3\\n\'}, {\'in\': \'00010111001110001111\\n00011110010\\n00011\\n01\\n1111111111111111100011110000000001\\n\', \'out\': \'4    3\\n4    3\\n2    3\\n1    1\\n17    9\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，由0和1构成的零幺串。', '对于每组输入数据，输出一行（n1和n0的值，它们用4个空格隔开）。', 1, 13, 'ymc', 2, '00010111001110001111\r\n00011110010\r\n00011\r\n', '4');
INSERT INTO `problem` VALUES (593, '设计菱形', '编写一个程序，打印一个菱形（如样例输出所示）。', '[{\'in\': \'9\\n\', \'out\': \'----*----\\n---***---\\n--*****--\\n-*******-\\n*********\\n-*******-\\n--*****--\\n---***---\\n----*----\\n\'}, {\'in\': \'3\\n\', \'out\': \'-*-\\n***\\n-*-\\n\'}]', 1, 0, 0, '输入只有一个1~19范围内的奇数n。', '打印一个菱形，菱形行数为n。', 1, 13, 'ymc', 2, '9\r\n', '-');
INSERT INTO `problem` VALUES (594, '阶乘之和', '<p>有些数能表示为若干个数的阶乘之和。例如，数字9，9=1!+2!+3!。</p>\r\n<p>给定一个数n（<strong>n&lt;=1,000,000</strong>），判断它是否能表示成若干个数的阶乘之和。</p>\r\n<p>注意，这些数不一定是连续的，也不一定从1开始。</p>', '[{\'in\': \'0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n24\\n120\\n720\\n5040\\n40320\\n362880\\n999990\\n999999\\n1000000\\n-1\', \'out\': \'NO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个整数组成，直到输入-1结束。</p>', '<p>对于每组输入数据，输出一行。如果能表示成阶乘之和，输出&ldquo;YES&rdquo;，否则输出&ldquo;NO&rdquo;。</p>', 1, 13, 'ymc', 1, '0\r\n1\r\n2\r\n9\r\n10\r\n12\r\n24\r\n5040\r\n-1\r\n', 'N');
INSERT INTO `problem` VALUES (595, '集合定义', '集合S的定义如下: \r\n(1) 1在S内; \r\n(2) 如果x在集合S内，则2x+1与3x+1也在S内; \r\n(3) 只有满足条件(1)(2)的元素在S内. \r\n\r\n把S中的元素按递增顺序排列，请输出S中的第N个元素。\r\n', '[{\'in\': \'1\\n2\\n3\\n4\\n5\\n6\\n100\\n254\\n1000\\n10000\\n100000\\n\', \'out\': \'1\\n3\\n4\\n7\\n9\\n10\\n418\\n1461\\n8487\\n157653\\n2911581\\n\'}]', 1, 0, 0, '本题有多组测试数据。每组测试数据一行，每行一个正整数N (1 <= N <= 100000)。', '对每组测试数据，在单独的一行中输出S的第N个元素。\r\n', 1, 13, 'ymc', 1, '1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n100\r\n254\r\n', '1');
INSERT INTO `problem` VALUES (596, '五角星数', '如果一个5位数，其各位数字的5次方之和等于本身，则这个数就称为五角星数。\r\n例如54748=5^5+4^5+7^5+4^5+8^5。请输出所有的五角星数。', '[{\'in\': \'\', \'out\': \'54748\\n92727\\n93084\\n\'}]', 1, 0, 0, '无输入', '按从小到大的顺数输出所有的五角星数。每行一个数。', 1, 13, 'ymc', 1, '无输入', '5');
INSERT INTO `problem` VALUES (597, '自然数的和之和', '计算S = 1+(1+2)+(1+2+3)+…+(1+2+…+N)。已知N，要求写程序求出S。', '[{\'in\': \'10\\n1\\n10\\n50\\n99\\n100\\n190\\n199\\n130\\n140\\n200\\n\', \'out\': \'1\\n220\\n22100\\n166650\\n171700\\n1161280\\n1333300\\n374660\\n467180\\n1353400\\n\'}]', 1, 0, 0, '第一行有1个整数T，表示有T组测试数据。第二行～第T+1行，每行有1个整数N， 1<=N<=200。', '对于每组输入数据，输出一行，包含一个整数，即此时S的值。\r\n', 1, 13, 'ymc', 1, '2\r\n1\r\n200\r\n', '1');
INSERT INTO `problem` VALUES (598, '买苹果', '<p>每个苹果0.8元，第一天买2个苹果；从第二天开始，每天买前一天的2倍，直到某天购买的苹果个数达到不超过n的最大值。编写程序求平均每天花多少钱？</p>', '[{\'in\': \'100\\n1000\\n10000\\n999\\n1024\\n1023\\n2\\n3\\n5\\n9\\n128\\n30\\n\', \'out\': \'16.8\\n90.8\\n1008.1\\n90.8\\n163.7\\n90.8\\n1.6\\n1.6\\n2.4\\n3.7\\n29.0\\n6.0\\n\'}]', 1, 0, 0, '<p>本题有多组测试数据 每组测试输入占一行，该行只有单独的一个整数n。其中2&lt;=n&lt;=10000 处理到输入结束。</p>', '<p>对每组测试数据，在单独的一行中出问题的解，结果保留一位小数。</p>', 1, 13, 'ymc', 1, '100\r\n', '1');
INSERT INTO `problem` VALUES (599, '黑色星期五', '13号又是星期五是一个不寻常的日子吗？13号在星期五比在其他日子少吗？\r\n为了回答这个问题，要请你来写一个程序来计算在n年里13号落在星期一、星期二、......、星期日的次数。\r\n这个测试从1900年1月1日到1900+n-1年12月31日。n是一个非负数且不大于400。\r\n\r\n这里有一些你要知道的:\r\n1900年1月1日是星期一，4、6、11和9月有30天，其他月份除了2月都有31天。闰年2月有29天，平年2月有28天。\r\n年份可以被4整除的为闰年(1992=4*498 所以 1992年是闰年,但是1990年不是闰年)以上规则不适合于世纪年.可以被400整除的世纪年为闰年,否则为平年。\r\n所以,1700,1800,1900 和2100年是平年,而2000年是闰年.', '[{\'in\': \'1\\n2\\n5\\n13\\n45\\n100\\n256\\n400\\n\', \'out\': \'2 1 1 3 1 2 2\\n4 3 2 4 4 3 4\\n9 9 7 9 9 8 9\\n23 21 22 22 24 21 23\\n78 76 78 76 78 77 77\\n173 170 172 171 172 170 172\\n440 439 438 438 439 439 439\\n684 687 685 685 687 684 688\\n\'}]', 1, 0, 0, '输入有多组测试数据，每组测试数据只包含一个整数n. ', '七个在一行且相分开的整数,它们代表13日是星期六,星期日,星期一...星期五的次数. ', 1, 13, 'ymc', 1, '20\r\n', '3');
INSERT INTO `problem` VALUES (600, '棋盘上的距离', '国际象棋的棋盘是黑白相间的 8 * 8 的方格,棋子放在格子中间。  王、后、车、象的走子规则如下:\r\n     * 王:横、直、斜都可以走,但每步限走一格。\r\n     * 后:横、直、斜都可以走,每步格数不受限制。\r\n     * 车:横、竖均可以走,不能斜走,格数不限。\r\n     * 象:只能斜走,格数不限。\r\n写一个程序,给定起始位置和目标位置,计算王、后、车、象从起始位置走到目标位置所需的最少步数。\r\n', '[{\'in\': \'5\\na1 c3\\nf5 f8\\na1 h5\\na2 d7\\nb4 a8\\n\', \'out\': \'2 1 2 1\\n3 1 1 Inf\\n7 2 2 Inf\\n5 2 2 2\\n4 2 2 Inf\\n\'}]', 1, 0, 0, '  第一行是测试数据的组数 t(0 <= t <= 20)。以下每行是一组测试数据,每组包括棋盘上的两个位置,第一个是起始位置,第二个是目标位置。位置用\"字母-数字\"的形式表示,字母从\"a\"到\"h\",数字从\"1\"到\"8\"。\r\n', '     对输入的每组测试数据,输出王、后、车、象所需的最少步数。如果无法到达,就输出\r\n\"Inf\".\r\n', 1, 13, 'ymc', 1, '2\r\na1 c3\r\nf5 f8\r\n', '2');
INSERT INTO `problem` VALUES (601, '填词', 'Alex 喜欢填词游戏。填词游戏是一个非常简单的游戏。填词游戏包括一个 N * M 大小的矩形方格盘和 P 个单词。然后需要在每个方格中填上一个字母使得每个单词都能在方格盘上被找到。每个单词都能被找到要满足下面的条件:\r\n    * 一个长为 k 的单词一定要占据 k 个方格。\r\n    * 每个方格都不能同时属于超过一个的单词。\r\n    * 单词在方格盘中出现的方向只能是竖直的或者水平的(可以由竖直转向水平,反之亦然)。\r\n   你的任务是首先在方格盘上找到所有的单词，当然在棋盘上可能有些方格没有被单词占据。然后把这些没有用的方格找出来，把这些方格上的字母按照字典序组成一个“神秘单词”。\r\n   如果你还不了解规则,我们可以用一个例子来说明,比如在下图中寻找单词 BEG 和 GEE。\r\n', '[{\'in\': \'3 3 2\\nEBG\\nGEE\\nEGE\\nBEG\\nGEE\\n\', \'out\': \'EEG\\n\'}, {\'in\': \'5 5 4\\nABCDE\\nFGHIJ\\nKLMNO\\nPQRST\\nUVWXY\\nABCDE\\nFKP\\nUVW\\nOTY\\n\', \'out\': \'GHIJLMNQRSX\\n\'}]', 1, 0, 0, '输入的第一行包括三个整数 N、M和 P (2 <= M, N <= 10, 0 <= P <=100)。接下来的 N 行，每行包括 M 个字符，来表示方格盘。接下来 P 行给出需要在方格盘中找到的单词。\r\n  输入保证填词游戏至少有一组答案。 输入中给出的字母都是大写字母。\r\n', '输出“神秘单词”,注意“神秘单词”中的字母要按照字典序给出。', 1, 13, 'ymc', 2, '3 3 2\r\nEBG\r\nGEE\r\nEGE\r\nBEG\r\nGEE\r\n', 'E');
INSERT INTO `problem` VALUES (602, '装箱问题', '一个工厂制造的产品形状都是长方体,它们的高度都是 h,长和宽都相等,一共有六个   他们的长宽分别为 1*1, 2*2, 3*3, 4*4, 5*5, 6*6. 这些产品通常使用一个 6*6*h 的长方体型号包裹包装然后邮寄给客户。因为邮费很贵, 所以工厂要想方设法的减小每个订单运送时的包裹数量。他们很需要有一个好的程序帮他们解决这个问题从而节省费用。现在这个程序由你来设计。\r\n', '[{\'in\': \'0 0 4 0 0 1\\n7 5 1 0 0 0\\n0 0 0 0 0 0\\n\', \'out\': \'2\\n1\\n\'}, {\'in\': \'34 35 36 37 38 39\\n192 182 14 172 133 1234\\n1132 232 23423 1231 3453 78234\\n0 0 0 0 0 0\\n\', \'out\': \'123\\n1543\\n88774\\n\'}]', 1, 0, 0, '输入文件包括几行,每一行代表一个订单。每个订单里的一行包括六个整数,中间用空格隔开,分别为 1*1 至 6*6 这六种产品的数量。输入文件将以 6 个 0 组成的一行结尾。\r\n', '除了输入的最后一行 6 个 0 以外,输入文件里每一行对应着输出文件的一行,每一行输出一个整数代表对应的订单所需的最小包裹数。\r\n\r\n', 1, 13, 'ymc', 2, '0 0 4 0 0 1\r\n7 5 1 0 0 0\r\n0 0 0 0 0 0\r\n', '2');
INSERT INTO `problem` VALUES (603, '确定进制', ' 6*9 = 42 对于十进制来说是错误的, 但是对于 13 进制来说是正确的。\r\n 6(13) * 9(13) = 即,42(13), 而 42(13) = 4 * 13^1 + 2 * 13^0 = 54(10)。 \r\n\r\n你的任务是写一段程序读入三个整数 p、q和 r,然后确定一个进制 B(2<=B<=16) 使得 p * q = r. \r\n如果 B 有很多选择, 输出最小的一个。\r\n\r\n例如: p = 11, q = 11, r = 121. \r\n则有 11(3) * 11(3) = 121(3) \r\n因为 11(3) = 1 * 31 + 1 * 30 =4(10) \r\n     和 \r\n121(3) = 1 * 32 + 2 * 31 + 1 * 30 = 16(10)。 对于进制 10,有 11(10) * 11(10) =121(10)。\r\n这种情况下,应该输出 3。如果没有合适的进制,则输出 0。\r\n', '[{\'in\': \'3\\n6 9 42\\n11 11 121\\n2 2 2\\n\', \'out\': \'13\\n3\\n0\\n\'}, {\'in\': \'3      \\n123 121 14883\\n321 211 67731\\n1211 3211 3888521\\n\', \'out\': \'9\\n8\\n9\\n\'}]', 1, 0, 0, '输入有 T 组测试样例。 T 在第一行给出。\r\n包含三个整数 p、q、r。每一组测试样例占一行, p、q、r 的所有位都是数字,\r\n并且 1 <= p、q、r <= 1,000,000。\r\n', '对于每个测试样例输出一行。该行包含一个整数:即使得 p * q = r 成立的最小的 B。如果没有合适的 B,则输出 0。\r\n', 1, 13, 'ymc', 2, '3\r\n6 9 42\r\n11 11 121\r\n2 2 2\r\n', '1');
INSERT INTO `problem` VALUES (604, '最小公倍数', '<p>求n个数的最小公倍数。</p>', '[{\'in\': \'2 4 6\\n3 2 5 7\\n\', \'out\': \'12\\n70\\n\'}, {\'in\': \'5 2 5 8 9 23\\n\', \'out\': \'8280\\n\'}]', 1, 0, 0, '<p>输入包含多个测试实例，每个测试实例的开始是一个正整数n，然后是n个正整数。</p>', '<p>为每组测试数据输出它们的最小公倍数，每个测试实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2 4 6\r\n3 2 5 7\r\n', '1');
INSERT INTO `problem` VALUES (605, '人见人爱A-B', '<p>今天我们这个A-B求的是两个集合的差，就是做集合的减法运算。（当然，大家都知道集合的定义，就是同一个集合中不会有两个相同的元素，这里还是提醒大家一下） 呵呵，很简单吧？</p>', '[{\'in\': \'3 3 1 2 3 1 4 7\\n3 7 2 5 8 2 3 4 5 6 7 8\\n0 0\\n\', \'out\': \'2 3 \\nNULL\\n\'}, {\'in\': \'2 2 3 4 3 8\\n3 4 7 9 3 7 8 1 2\\n2 3 7 8 2 3 4\\n0 0\\n\', \'out\': \'4 \\n3 9 \\n7 8 \\n\'}]', 1, 0, 0, '<p>每组输入数据占1行,每行数据的开始是2个整数n(<strong>0&lt;n&lt;=100</strong>)和m(<strong>0&lt;m&lt;=100)</strong>,分别表示集合A和集合B的元素个数，然后紧跟着n+m个元素，前面n个元素属于集合A，其余的属于集合B. 每个元素为不超出int范围的整数,元素之间有一个空格隔开. 如果n=0并且m=0表示输入的结束，不做处理。</p>', '<p>针对每组数据输出一行数据,表示A-B的结果,如果结果为空集合，则输出&ldquo;NULL&rdquo;,否则从小到大输出结果,为了简化问题，每个元素后面跟一个空格.</p>', 1, 13, 'ymc', 2, '3 3 1 2 3 1 4 7\r\n3 7 2 5 8 2 3 4 5 6 7 8 \r\n0 0', '2');
INSERT INTO `problem` VALUES (606, '人见人爱A^B', '求A^B的最后三位数表示的整数。\n说明：A^B的含义是“A的B次方”', '[{\'in\': \'2 3\\n12 6\\n6789 10000\\n0 0\\n\', \'out\': \'8\\n984\\n1\\n\'}, {\'in\': \'34 565\\n15 7\\n0 0\\n\', \'out\': \'24\\n375\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每个实例占一行，由两个正整数A和B组成（1<=A,B<=10000），如果A=0, B=0，则表示输入数据的结束，不做处理。', '对于每个测试实例，请输出A^B的最后三位表示的整数，每个输出占一行。', 1, 13, 'ymc', 2, '2 3\n12 6\n6789 10000\n0 0\n', '8');
INSERT INTO `problem` VALUES (607, '改革春风吹满地', '<p>&ldquo; 改革春风吹满地, 不会AC没关系; 实在不行回老家， 还有一亩三分地。 谢谢!（乐队奏乐）&rdquo; 话说部分学生心态极好，每天就知道游戏，如此简单的题目，也是云里雾里，而且，还竟然来这么几句打油诗。 好呀，老师的责任就是帮你解决问题，既然想种田，那就分你一块。 这块田位于浙江省温州市苍南县灵溪镇林家铺子村，多边形形状的一块地，原本是linle 的，现在就准备送给你了。不过，任何事情都没有那么简单，你必须首先告诉我这块地到底有多少面积，如果回答正确才能真正得到这块地。 发愁了吧？就是要让你知道，种地也是需要AC知识的！以后还是好好练吧...</p>', '[{\'in\': \'3 0 0 1 0 0 1\\n4 1 0 0 1 -1 0 0 -1\\n0\\n\', \'out\': \'0.5\\n2.0\\n\'}, {\'in\': \'4 4 3 0 0 3 2 3 0\\n3 3 3 4 4 5 5\\n0\\n\', \'out\': \'1.5\\n0.0\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例，每个测试实例占一行，每行的开始是一个整数n(3&lt;=n&lt;=100)，它表示多边形的边数（当然也是顶点数），然后是按照逆时针顺序给出的n个顶点的坐标（x1, y1, x2, y2... xn, yn）,为了简化问题，这里的所有坐标都用整数表示。 输入数据中所有的整数都在32位整数范围内，n=0表示数据的结束，不做处理。</p>', '<p>对于每个测试实例，请输出对应的多边形面积，结果精确到小数点后一位小数。 每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '3 0 0 1 0 0 1\r\n4 1 0 0 1 -1 0 0 -1\r\n0\r\n', '0');
INSERT INTO `problem` VALUES (608, '今年暑假不AC', '“今年暑假不AC？”\n“是的。”\n“那你干什么呢？”\n“看世界杯呀，笨蛋！”\n“@#$%^&*%...”\n\n确实如此，世界杯来了，球迷的节日也来了，估计很多ACMer也会抛开电脑，奔向电视了。\n作为球迷，一定想看尽量多的完整的比赛，当然，作为新时代的好青年，你一定还会看一些其它的节目，比如新闻联播（永远不要忘记关心国家大事）、非常6+7、超级女生，以及王小丫的《开心辞典》等等，假设你已经知道了所有你喜欢看的电视节目的转播时间表，你会合理安排吗？（目标是能看尽量多的完整节目）', '[{\'in\': \'12\\n1 3\\n3 4\\n0 7\\n3 8\\n15 19\\n15 20\\n10 15\\n8 18\\n6 12\\n5 10\\n4 14\\n2 9\\n0\\n\', \'out\': \'5\\n\'}, {\'in\': \'9\\n1 3\\n2 4\\n5 7\\n6 8\\n9 13\\n13 17\\n14 16\\n17 20\\n20 23\\n0\\n\', \'out\': \'6\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每个测试实例的第一行只有一个整数n(n<=100)，表示你喜欢看的节目的总数，然后是n行数据，每行包括两个数据 Ti_s,Ti_e (1<=i<=n)，分别表示第i个节目的开始和结束时间，为了简化问题，每个时间都用一个正整数表示。n=0表示输入结束，不做处理。', '对于每个测试实例，输出能完整看到的电视节目的个数，每个测试实例的输出占一行。', 1, 13, 'ymc', 2, '12\n1 3\n3 4\n0 7\n3 8\n15 19\n15 20\n10 15\n8 18\n6 12\n5 10\n4 14\n2 9\n0\n', '5');
INSERT INTO `problem` VALUES (609, '超级楼梯', '有一楼梯共M级，刚开始时你在第一级，若每次只能跨上一级或二级，要走上第M级，共有多少种走法？', '[{\'in\': \'2\\n2\\n3\\n\', \'out\': \'1\\n2\\n\'}, {\'in\': \'2\\n10\\n15\\n\', \'out\': \'55\\n610\\n\'}]', 1, 0, 0, '输入数据首先包含一个整数N，表示测试实例的个数，然后是N行数据，每行包含一个整数M（1<=M<=40）,表示楼梯的级数。', '对于每个测试实例，请输出不同走法的数量', 1, 13, 'ymc', 2, '2\r\n2\r\n3\r\n', '1');
INSERT INTO `problem` VALUES (610, '不容易系列之二', '你活的不容易，我活的不容易，他活的也不容易。不过，如果你看了下面的故事，就会知道，有位老汉比你还不容易。\r\n\r\n重庆市郊黄泥板村的徐老汉（大号徐东海，简称XDH）这两年辛辛苦苦养了不少羊，到了今年夏天，由于众所周知的高温干旱，实在没办法解决牲畜的饮水问题，就决定把这些羊都赶到集市去卖。从黄泥板村到交易地点要经过N个收费站，按说这收费站和徐老汉没什么关系，但是事实却令徐老汉欲哭无泪：\r\n\r\n（镜头回放）\r\n\r\n近景：老汉，一群羊\r\n远景：公路，收费站\r\n\r\n......\r\n\r\n收费员（彬彬有礼+职业微笑）：“老同志，请交过路费！”\r\n\r\n徐老汉（愕然，反应迟钝状）：“锅，锅，锅，锅-炉-费？我家不烧锅炉呀？”\r\n\r\n收费员（职业微笑依然）：“老同志，我说的是过-路-费，就是你的羊要过这个路口必须交费，understand?”\r\n\r\n徐老汉（近镜头10秒，嘴巴张开）：“我-我-我知道汽车过路要收费，这羊也要收费呀？”\r\n\r\n收费员（居高临下+不解状）：“老同志，你怎么就不明白呢，那么我问你，汽车几个轮子？”\r\n\r\n徐老汉（稍放松）：“这个我知道，今天在家里我孙子还问我这个问题，4个！”\r\n\r\n收费员（生气，站起）：“嘿！老头，你还骂人不带脏字，既然知道汽车四个轮子，难道就不知道这羊有几条腿吗？！”\r\n\r\n徐老汉（尴尬，依然不解状）：“也，也，也是4个呀，这有关系吗？”\r\n\r\n收费员（生气，站起）：“怎么没关系！我们头说了，只要是4条腿的都要收费！”\r\n\r\n......\r\n\r\n(画外音)\r\n\r\n由于徐老汉没钱，收费员就将他的羊拿走一半，看到老汉泪水涟涟，犹豫了一下，又还给老汉一只。巧合的是，后面每过一个收费站，都是拿走当时羊的一半，然后退还一只，等到老汉到达市场，就只剩下3只羊了。\r\n\r\n你,当代有良知的青年，能帮忙算一下老汉最初有多少只羊吗？', '[{\'in\': \'2\\n1\\n2\\n\', \'out\': \'4\\n6\\n\'}, {\'in\': \'5\\n30\\n29\\n25\\n20\\n10\\n\', \'out\': \'1073741826\\n536870914\\n33554434\\n1048578\\n1026\\n\'}]', 1, 0, 0, '输入数据第一行是一个整数N，下面由N行组成，每行包含一个整数a(0<a<=30),表示收费站的数量。', '对于每个测试实例，请输出最初的羊的数量,每个测试实例的输出占一行。', 1, 13, 'ymc', 2, '2\r\n1\r\n2\r\n', '4');
INSERT INTO `problem` VALUES (611, '一只小蜜蜂...', '<p>有一只经过训练的蜜蜂只能爬向右侧相邻的蜂房，不能反向爬行。请编程计算蜜蜂从蜂房a爬到蜂房b的可能路线数。 其中，蜂房的结构如下所示。</p>', '[{\'in\': \'2\\n1 2\\n3 6\\n\', \'out\': \'1\\n3\\n\'}, {\'in\': \'3\\n5 7\\n9 14\\n16 34\\n\', \'out\': \'2\\n8\\n4181\\n\'}]', 1, 0, 0, '<p>输入数据的第一行是一个整数N,表示测试实例的个数，然后是N 行数据，</p>\r\n<p>每行包含两个整数a和b(0&lt;a&lt;b&lt;50)。</p>', '<p>对于每个测试实例，请输出蜜蜂从蜂房a爬到蜂房b的可能路线数，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '2\r\n1 2\r\n3 6\r\n', '1');
INSERT INTO `problem` VALUES (612, 'LELE的RPG难题', '<p>人称&ldquo;AC女之杀手&rdquo;的超级偶像LELE最近忽然玩起了深沉，这可急坏了众多&ldquo;Cole&rdquo;（LELE的粉丝,即\"可乐\"）,经过多方打探，某资深Cole终于知道了原因，原来，LELE最近研究起了著名的RPG难题: 有排成一行的ｎ个方格，用红(Red)、粉(Pink)、绿(Green)三色涂每个格子，每格涂一色，要求任何相邻的方格不能同色，且首尾两格也不同色．求全部的满足要求的涂法. 以上就是著名的RPG难题. 如果你是Cole,我想你一定会想尽办法帮助LELE解决这个问题的;如果不是,看在众多漂亮的痛不欲生的Cole女的面子上,你也不会袖手旁观吧?</p>', '[{\'in\': \'1\\n2\\n\', \'out\': \'3\\n6\\n\'}, {\'in\': \'10\\n17\\n\', \'out\': \'1026\\n131070\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例,每个测试实例占一行,由一个整数N组成，</p>\r\n<p>(0&lt;N&lt;=50)。</p>', '<p>对于每个测试实例，请输出全部的满足要求的涂法，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '1\r\n2\r\n', '3');
INSERT INTO `problem` VALUES (613, '求平均成绩', '<p>假设一个班有n(n&lt;=50)个学生，每人考m(m&lt;=5)门课，求每个学生的平均成绩和每门课的平均成绩，并输出各科成绩均大于等于平均成绩的学生数量。</p>', '[{\'in\': \'2 2\\n5 10\\n10 20\\n\', \'out\': \'7.50 15.00\\n7.50 15.00\\n1\\n\\n\'}, {\'in\': \'3 3\\n3 6 9\\n4 8 10\\n3 8 12\\n2 2\\n5 10\\n10 20\\n\', \'out\': \'6.00 7.33 7.67\\n3.33 7.33 10.33\\n0\\n\\n7.50 15.00\\n7.50 15.00\\n1\\n\\n\'}]', 1, 0, 0, '<p>输入数据有多个测试实例，每个测试实例的第一行包括两个整数n和m，分别表示学生数和课程数。然后是n行数据，每行包括m个整数（即：考试分数）。</p>', '<p>对于每个测试实例，输出3行数据，</p>\r\n<p>第一行包含n个数据，表示n个学生的平均成绩，结果保留两位小数；</p>\r\n<p>第二行包含m个数据，表示m门课的平均成绩，结果保留两位小数；</p>\r\n<p>第三行是一个整数，表示该班级中各科成绩均大于等于平均成绩的学生数量。</p>\r\n<p>&nbsp;</p>\r\n<p>每个测试实例后面跟一个空行。</p>', 1, 13, 'ymc', 2, '2 2\r\n5 10\r\n10 20\r\n', '7');
INSERT INTO `problem` VALUES (614, '海选女主角', 'potato老师虽然很喜欢教书，但是迫于生活压力，不得不想办法在业余时间挣点外快以养家糊口。\r\n“做什么比较挣钱呢？筛沙子没力气，看大门又不够帅...”potato老师很是无奈。\r\n“张艺谋比你还难看，现在多有钱呀，听说还要导演奥运开幕式呢！你为什么不去娱乐圈发展呢？”lwg在一旁出主意。\r\n嗯，也是，为了生存，就委屈点到娱乐圈混混吧，马上就拍一部激光电影《回来我的爱》。\r\n说干就干，马上海选女主角（和老谋子学的，此举可以吸引媒体的眼球，呵呵），并且特别规定，演员必须具有ac的基本功，否则直接out!\r\n由于策划师宣传到位，来应聘的MM很多，\r\n面试那天，刚好来了m*n个MM，站成一个m*n的队列，副导演为每个MM打了分数，分数都是32位有符号整数。\r\n一开始我很纳闷：分数怎么还有负的？副导演解释说，根据选拔规则，头发染成黄色、化妆太浓、穿的太少等等都要扣分数的，扣的多了就可能是负分了，当然，如果发现话语中夹有日语，就直接给-2147483648分了。\r\n分数送上来了，是我做决定的时候了，我的一个选拔原则是，要选一个面试分数绝对值（必须还是32位整数）最大的MM。\r\n特别说明：如果不幸选中一个负分的MM,也没关系，因为我觉得，如果不能吸引你，那要想法恶心你。', '[{\'in\': \'2 3\\n1 4 -3\\n-7 3 0\\n\', \'out\': \'2 1 -7\\n\'}, {\'in\': \'3 3\\n4 6 -6\\n5 7 4\\n3 4 -2\\n\', \'out\': \'2 2 7\\n\'}, {\'in\': \'3 4\\n-9 7 -8 4\\n3 8 4 -7\\n5 7 3 -4\\n\', \'out\': \'1 1 -9\\n\'}]', 1, 0, 0, '输入数据有多行，第一行是两个整数m和n，表示应聘MM的总共的行列数，然后是m行整数，每行有n个，m和n的定义见题目的描述。', '对于每组输入数据，输出三个整数x,y和s，分别表示选中的MM的行号、列号和分数。\r\nnote:行号和列号从一开始，如果有多个MM的分数绝对值一样，那么输出排在最前面的一个（即行号最小的那个，如果行号相同则取列号最小的那个）。', 1, 13, 'ymc', 3, '2 3\r\n1 4 -3\r\n-7 3 0\r\n', '2');
INSERT INTO `problem` VALUES (615, '发工资咯：）', '作为温大的老师，最盼望的日子就是每月的10号了，因为这一天是发工资的日子，养家糊口就靠它了，呵呵\r\n但是对于学校财务处的工作人员来说，这一天则是很忙碌的一天，财务处的小胡老师最近就在考虑一个问题：如果每个老师的工资额都知道，最少需要准备多少张人民币，才能在给每位老师发工资的时候都不用老师找零呢？\r\n这里假设老师的工资都是正整数，单位元，人民币一共有100元、50元、10元、5元、2元和1元六种。', '[{\'in\': \'3\\n1 2 3\\n0\\n\', \'out\': \'4\\n\'}, {\'in\': \'3\\n101 102 153\\n3\\n98 97 99\\n0\\n\', \'out\': \'8\\n23\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每个测试实例的第一行是一个整数n（n<100），表示老师的人数，然后是n个老师的工资。\r\nn=0表示输入的结束，不做处理。', '对于每个测试实例输出一个整数x,表示至少需要准备的人民币张数。每个输出占一行。', 1, 13, 'ymc', 2, '3\r\n1 2 3\r\n0\r\n', '4');
INSERT INTO `problem` VALUES (616, '讨厌的青蛙', '     在韩国,有一种小的青蛙。每到晚上,这种青蛙会跳越稻田,从而踩踏稻子。农民在早上看到被踩踏的稻子,希望找到造成最大损害的那只青蛙经过的路径。   每只青蛙总是沿着一条直线跳越稻田,而且每次跳跃的距离都相同,如图 1所示。 稻田里的稻子组成一个栅格,每棵稻子位于一个格点上,如图2 所示。而青蛙总是从稻田的一侧跳进稻田,然后沿着某条直线穿越稻田,从另一侧跳出去,如图 3 所示。\r\n  青蛙的每一跳都恰好踩在一棵水稻上,   将这棵水稻拍倒。可能会有多只青蛙从稻田穿越,有些水稻被多只青蛙踩踏,如图4 所示。当然,农民所见到的是图 5 中的情形,看不到图 4 中的直线。\r\n 根据图 5,农民能够构造出青蛙穿越稻田时的行走路径,并且只关心那些在穿越稻田时至少踩踏了 3 棵水稻的青蛙。因此,每条青蛙行走路径上至少包括 3 棵被踩踏的水稻。而在一条青蛙行走路径的直线上,也可能会有些被踩踏的水稻不属于该行走路径。 在图 5 中,格点(2, 1)、(6, 1)上的水稻可能是同一只青蛙踩踏的,但这条线上只有两棵被踩踏的水稻,因此不能作为一条青蛙行走路径;格点(2, 3)、(3, 4)、(6, 6)在同一条直线上,但它们的间距不等,因此不能作为一条青蛙行走路径;格点(2, 1)、(2, 3)、(2, 5)、(2, 7)是一条青蛙行走路径,该路径不包括格点(2, 6)。请你写一个程序,确定在所有的青蛙行路径中,踩踏水稻棵数最多的路径上有多少棵水稻被踩踏。例如,图5 的答案是 7,因为第 6 行上全部水稻恰好构成一条青蛙行走路径。\r\n', '[{\'in\': \'6 7\\n14\\n2 1\\n6 6\\n4 2\\n2 5\\n2 6\\n2 7\\n3 4\\n6 1\\n6 2\\n2 3\\n6 3\\n6 4\\n6 5\\n6 7\\n\', \'out\': \'7\\n\'}, {\'in\': \'6 7\\n15\\n2 2\\n6 3\\n4 1\\n2 4\\n3 6\\n2 7\\n3 2\\n6 1\\n6 2\\n2 3\\n6 3\\n6 4\\n6 5\\n6 7\\n1 4\\n\', \'out\': \'4\\n\'}, {\'in\': \'6 7\\n2\\n5 5\\n4 6\\n\', \'out\': \'0\\n\'}]', 1, 0, 0, '   从标准输入设备上读入数据。\r\n第一行上两个整数 R、C,分别表示稻田中水稻的行数和列数,1≤R、C≤5000。\r\n第二行是一个整数 N,表示被踩踏的水稻数量, 1≤N≤5000。在剩下的 N 行中,每行有两个整数,分别是一颗被踩踏水稻的行号(1~R)和列号(1~C),两个整数用一个空格隔开。而且,每棵被踩踏水稻只被列出一次。\r\n', '  从标准输出设备上输出一个整数。如果在稻田中存在青蛙行走路径,则输出包含最多水稻的青蛙行走路径中的水稻数量,否则输出 0。\r\n', 1, 13, 'ymc', 3, '6 7\r\n14\r\n2 1\r\n6 6\r\n4 2\r\n2 5\r\n2 6\r\n2 7\r\n3 4\r\n6 1\r\n6 2\r\n2 3\r\n6 3\r\n6 4\r\n6 5\r\n6 7\r\n', '7');
INSERT INTO `problem` VALUES (617, '二叉树', '如图1所示,由正整数 1, 2, 3, ...组成了一棵无限大的二叉树。从某一个结点到根结点(编号是 1 的结点)都有一条唯一的路径,比如从10到根结点的路径是(10,5,2,1),从4到根结点的路径是(4,2,1),从根结点1到根结点的路径上只包含一个结点1,因此路径就是(1)。对于两个结点x和y,假设他们到根结点的路径分别是(x1, x2, ... ,1)和(y1,y2, ... ,1)(这里显然有 x=x1,y=y1),那么必然存在两个正整数i和 j,使得从xi和yj开始,有 xi=yj ,x(i+1) = y(j + 1),x(i+2) = y(j + 2),... 现在的问题就是,给定 x 和 y,要求xi(也就是 yj)     。\r\n', '[{\'in\': \'10 4\\n\', \'out\': \'2\\n\'}, {\'in\': \'999 425\\n\', \'out\': \'3\\n\'}, {\'in\': \'512 257\\n\', \'out\': \'128\\n\'}, {\'in\': \'512 511\\n\', \'out\': \'1\\n\'}]', 1, 0, 0, '输入只有一行,包括两个正整数x和y,这两个正整数都不大于1000。', '输出只有一个正整数 xi。', 1, 13, 'ymc', 4, '10 4\r\n', '2');
INSERT INTO `problem` VALUES (618, '放苹果', '把M个同样的苹果放在N个同样的盘子里,允许有的盘子空着不放,问共有多少种不同的分法?(用K表示)注意:5,1,1和1,5,1是同一种分法。\n', '[{\'in\': \'1\\n7 3\\n\', \'out\': \'8\\n\'}, {\'in\': \'5\\n2 5\\n3 8\\n4 9\\n7 6\\n2 9\\n\', \'out\': \'2\\n3\\n5\\n14\\n2\\n\'}]', 1, 0, 0, '第一行是测试数据的数目t(0<=t<= 20) 。以下每行均包含两个整数M和N,以空格分开。1<=M,N<=10。\n', '对输入的每组数据M和N,用一行输出相应的K。', 1, 13, 'ymc', 2, '1\n7 3\n', '8');
INSERT INTO `problem` VALUES (619, '八皇后问题', '会下国际象棋的人都很清楚:皇后可以在横、竖、斜线上不限步数地吃掉其他棋子。如何将8个皇后放在棋盘上(有8*8个方格),使它们谁也不能被吃掉!这就是著名的八皇后问题。对于某个满足要求的8皇后的摆放方法, 定义一个皇后串a与之对应, 即a=b1b2...b8, 其中bi为相应摆法中第i行皇后所处的列数。已经知道8皇后问题一共有92组解(即92个不同的皇后串)。给出一个数b,要求输出第b个串。串的比较是这样的:皇后串x置于皇后串y之前,当且仅当将x视为整数时比y小。\r\n', '[{\'in\': \'2\\n1\\n92\\n\', \'out\': \'15863724\\n84136275\\n\'}, {\'in\': \'10\\n3\\n13\\n14\\n16\\n18\\n28\\n29\\n34\\n36\\n47\\n\', \'out\': \'17468253\\n31758246\\n35281746\\n35714286\\n36258174\\n38471625\\n41582736\\n42751863\\n42861357\\n51468273\\n\'}]', 1, 0, 0, '第1行是测试数据的组数n,后面跟着n行输入。每组测试数据占1行,包括一个正整数b(1<=b<=92)\r\n', 'n 行,每行输出对应一个输入。输出应是一个正整数,是对应于 b 的皇后串', 1, 13, 'ymc', 2, '2\r\n1\r\n92\r\n', '1');
INSERT INTO `problem` VALUES (620, '木棍问题', '乔治拿来一组等长的木棒,将它们随机地裁断,使得每一节木棒的长度都不超过50个长度单位。然后他又想把这些木棒恢复到裁截前的状态,但忘记了初始时有多少木棒以及木棒的初始长度。请你设计一个程序,帮助乔治计算木棒的可能最小长度。每一节木棒的长度都用大于零的整数表示。\r\n', '[{\'in\': \'9\\n5 2 1 5 2 1 5 2 1\\n4\\n1 2 3 4\\n0\\n\', \'out\': \'6\\n5\\n\'}, {\'in\': \'10\\n1 2 3 4 5 6 7 8 9 10\\n20\\n1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\\n0\\n\', \'out\': \'11\\n10\\n\'}, {\'in\': \'4\\n5 5 5 3\\n0\\n\', \'out\': \'18\\n\'}]', 1, 0, 0, '输入多组数据，每组包括两行。\r\n第一行是一个不超过64的整数，表示裁截之后共有多少节木棒。\r\n第二行是经过裁截后，所得到的各节木棒的长度。\r\n\r\n在最后一组之后，是零。\r\n', '对每组数据，输出木棒的可能最小长度，每组占一行。', 1, 13, 'ymc', 3, '9\r\n5 2 1 5 2 1 5 2 1\r\n4\r\n1 2 3 4\r\n0\r\n', '6');
INSERT INTO `problem` VALUES (621, '偶数求和', '有一个长度为n(n<=1000)的数列，该数列定义为从2开始的递增有序偶数，现在要求你按照顺序每m个数求出一个平均值，如果最后不足m个，则以实际数量求平均值。编程输出该平均值序列。', '[{\'in\': \'3 2\\n4 2\\n\', \'out\': \'3 6\\n3 7\\n\'}, {\'in\': \'100 14\\n300 130\\n8 4\\n589 67\\n\', \'out\': \'15 43 71 99 127 155 183 199\\n131 391 561\\n5 13\\n68 202 336 470 604 738 872 1006 1126\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，包含两个正整数n和m，n和m的含义如上所述。', '对于每组输入数据，输出一个平均值序列，每组输出占一行。每行数字之间有一个空格。', 1, 13, 'ymc', 2, '3 2\r\n4 2\r\n', '3');
INSERT INTO `problem` VALUES (622, '骨牌铺方格', '<p>在2&times;n的一个长方形方格中,用一个1&times; 2的骨牌铺满方格,输入n ,输出铺放方案的总数. 例如n=3时,为2&times; 3方格，骨牌的铺放方案有三种,如下图：</p>', '[{\'in\': \'1\\n3\\n2\\n\', \'out\': \'1\\n3\\n2\\n\'}, {\'in\': \'5\\n10\\n15\\n\', \'out\': \'8\\n89\\n987\\n\'}]', 1, 0, 0, '<p>输入数据由多行组成，每行包含一个整数n,表示该测试实例的长方形方格的规格是</p>\r\n<p>2&times;n (0&lt;n&lt;=50)。</p>', '<p>对于每个测试实例，请输出铺放方案的总数，每个实例的输出占一行。</p>', 1, 13, 'ymc', 2, '1\r\n3\r\n2\r\n', '1');
INSERT INTO `problem` VALUES (741, '计算图形面积', '<p><span style=\"font-size: large;\">编程计算图形的面积。</span></p>\r\n<p><span style=\"font-size: large;\">程序可以计算圆形、长方形、正方形的面积，运行时先输入图形的类型（1表示圆形、2表示长方形、3表示正方形），然后，判断用户输入图形的类型，对圆形输入半径，对长方形输入长和宽，对正方形输入边长，</span></p>\r\n<p><span style=\"font-size: large;\">以上参数的数据类型均为整型。</span></p>\r\n<p><span style=\"font-size: large;\">计算面积后将其显示出来，要求结果保留两位小数，PI设为3.14即可。</span></p>', '[{\'in\': \'2 5 6\\n\', \'out\': \'30.00\\n\'}, {\'in\': \'3 5\\n\', \'out\': \'25.00\\n\'}, {\'in\': \'1 5\\n\', \'out\': \'78.50\\n\'}]', 1, 0, 0, '<p>要求用户选择图形的类型，然后分别提示用户输入需要的参数值。</p>', '<p>要求对每个测试实例，在单独一行中输出图形的面积。 如果用户输入的图形类型不合法，给出错误提示：&ldquo;Invalid Data!&rdquo;。</p>', 4, 14, 'ymc', 3, '1 5\r\n\r\n', '78.50\r\n\r\n');
INSERT INTO `problem` VALUES (742, '数的奇偶性', '输入一个整数。确定他是奇数还是偶数。', '[{\'in\': \'6\\n14\\n13\\n1\\n-201\\n200\\n12346\\n\', \'out\': \'0\\n1\\n1\\n1\\n0\\n0\\n\'}]', 1, 1, 2, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括 一个int类型整数。', '输出有 n 行，每行是整数0或1，对应相应输入行的结果。如果对应输入行是奇数，则输出 1，否则，输出 0。', 4, 14, 'ymc', 1, '2\r\n14\r\n13\r\n', '0\r\n1\r\n');
INSERT INTO `problem` VALUES (743, '求和', '计算表达式\r\n1+2+3+...+100的值。', '[{\'in\': \'\', \'out\': \'5050\\n\'}]', 1, 0, 0, '无输入', '在单独的一行中输出表达式\r\n1+2+3+...+100的值。', 4, 14, 'ymc', 1, '无', '无');
INSERT INTO `problem` VALUES (744, 'Hello,World', '<p>写一个程序，在标准输出中输出如下三行信息。</p>\r\n<p>********************<br /> Hello,World!<br />********************</p>', '[{\'in\': \'\', \'out\': \'********************\\n    Hello,World!\\n********************\\n\'}]', 1, 0, 0, '<p>无</p>', '<p>第一行总共20个*号，后面无空格，第二行先是4个空格，然后是Hello,World!，两个单词之间有一个逗号，第二个单词后面跟一个感叹号，后面没有任何空格。第三行是20个*号。</p>', 4, 14, 'ymc', 1, '', '********************\r\n    Hello,World!\r\n********************\r\n');
INSERT INTO `problem` VALUES (745, 'A+B', '给定两个整数a,b，求a+b。', '[{\'in\': \'1 1\\n\', \'out\': \'2\\n\'}, {\'in\': \'-9 100\\n\', \'out\': \'91\\n\'}]', 1, 0, 0, '输入只有一行，包含两个用空格分开的整数。', '在单独的一行中输出a+b的值。\r\n', 4, 14, 'ymc', 2, '1 1\r\n', '2\r\n');
INSERT INTO `problem` VALUES (746, '简单的四则运算', '给定两个整数，输出这两个数的和、乘积、差和商。', '[{\'in\': \'24 3\\n\', \'out\': \'27 72 21 8\\n\'}, {\'in\': \'1 1\\n\', \'out\': \'2 1 0 1\\n\'}]', 1, 0, 0, '输入只有一行，该行包含两个用空格隔开的整数。', '输出为一行，这行有四个整数，分别为两个整数的和、乘积、差和商，数与数之间用一个空格隔开。', 4, 14, 'ymc', 2, '24 3', '27 72 21 8');
INSERT INTO `problem` VALUES (747, '计算车号', '<p>编程Java程序实现以下生活中的问题<strong>。</strong><strong></strong></p>\r\n<p>一辆卡车违反交通规则，撞人后逃跑。现场有三人目击事件，但都没有记住车号，只记下车号的一些特征。</p>\r\n<p>甲说：牌照的前两位数字是相同的；</p>\r\n<p>乙说：牌照的后两位数字是相同的，但与前两位不同；</p>\r\n<p>丙是数学家，他说：四位的车号刚好是一个整数的平方。</p>\r\n<p>请根据以上线索求出车号。</p>', '[{\'in\': \'\', \'out\': \'7744\\n\'}]', 1, 0, 0, '<p>无</p>', '<p>你所计算的车号。</p>', 4, 14, 'ymc', 1, '无', '无');
INSERT INTO `problem` VALUES (748, '交换\n', '<p>从键盘读入两个整数，交换这两个整数后输出。</p>\n', '[{\'in\': \'102 3241\\n\', \'out\': \'3241 102\\n\'}]', 1, 0, 0, '<p>为两个整数。</p>\n', '<p>输出交换后的两个整数，这两个整数之间有1个空格。行末有一个换行符。</p>\n', 4, 14, 'ymc', 1, '2 5\r\n\n', '5 2\r\n\n');
INSERT INTO `problem` VALUES (749, '学生信息输入\n', '定义一个学生类。\r\n\r\n\r\n它有学号(number)，姓名(name)，性别(sex)，语文成绩，数学成绩，英语成绩，平均分和总分这些Field。\r\n有能处理学生信息的输入与输出这两个方法。\r\n\r\n现在输入一个学生的学号、姓名、性别和三门课成绩，请输出该生的信息。\r\n', '[{\'in\': \'09001 zhangsan M 78 72 67.1\\n\', \'out\': \'09001 zhangsan M 78.00 72.00 67.10 72.37 217.10\\n\'}, {\'in\': \'09002 zhanghong F 78 82 87.1\\n\', \'out\': \'09002 zhanghong F 78.00 82.00 87.10 82.37 247.10\\n\'}]', 1, 0, 0, '<p>输入只有一行，表示学生信息，格式如下：学号 姓名 性别 语文成绩 数学成绩 英语成绩。</p>\r\n<p>中间用空格分开，三门课的成绩是浮点数。</p>', '<p>在一行中输出学生信息，格式如下：学号 姓名 性别 语文成绩 数学成绩 英语成绩 平均成绩 总成绩。</p>\r\n<p>中间用空格分开，所有成绩保留2位小数。</p>', 4, 14, 'ymc', 2, '09001 zhangsan M 78 72 67.1\r\n\r\n', '09001 zhangsan M 78.00 72.00 67.10 72.37 217.10\r\n\r\n');
INSERT INTO `problem` VALUES (750, '大整数的阶乘', '<p>求大整数的阶乘。</p>\r\n<p>本题要求编写一个计算大整数阶乘的方法，并在main()方法中调用。</p>', '[{\'in\': \'50\\n\', \'out\': \'30414093201713378043612608166064768844377641568960512000000000000\\n\'}, {\'in\': \'100\\n\', \'out\': \'93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\\n\'}]', 1, 0, 0, '<p>只有一行输入，整数n。</p>', '<p>在单独的一行中输出数值n!。</p>', 4, 14, 'ymc', 2, '50\r\n', '30414093201713378043612608166064768844377641568960512000000000000\r\n');
INSERT INTO `problem` VALUES (751, '两个数的乘积', '有二个重载的乘法方法times(x, y)， 分别实现int类型、double类型。', '[{\'in\': \'49 84\\n0.34 1.08\\n\', \'out\': \'4116\\n0.3672\\n\'}]', 1, 0, 0, '第一行为两个整数\r\n第二行为两个实数\r\n', '输出有两行：\r\n第一行是两个整数的乘积\r\n第二行是两个实数的乘积（保留小数点后面4位）', 4, 14, 'ymc', 1, '2 5\r\n1.2 1.4\r\n', '10\r\n1.6800\r\n');
INSERT INTO `problem` VALUES (752, '长方体', '<p>有一个长方体类Cuboid，包含长（length）、宽（width）和高（height）三个Field，均为整数类型，</p>\r\n<p>有构造器和设置上述三个参数的方法，以及用于计算底面积的方法getBottomArea()，计算体积的方法getVolume()。</p>\r\n<p>输入长、宽、高，由计算底面积和体积的方法得到底面积和体积，并分行打印出来。</p>', '[{\'in\': \'10 20 30\\n\', \'out\': \'200\\n6000\\n\'}]', 1, 0, 0, '<p>依次输入长方体的长、宽、高。</p>', '<p>在第一行输出底面积，第二行输出体积。</p>', 4, 14, 'ymc', 1, '10 20 30\r\n\r\n', '200\r\n6000\r\n\r\n');
INSERT INTO `problem` VALUES (753, '形状', '<p>编写程序，计算圆柱体、球体、正方体和长方体的表面积和体积。</p>\r\n<p>提示：本题中，可先定义一个基类Shape，它包含求表面积和体积的方法，</p>\r\n<p>然后在此基类的基础上，派生出圆柱体类、球体类、正方体类和长方体类。</p>', '[{\'in\': \'1\\n2 2\\n2\\n2\\n2 3 4\\n\', \'out\': \'50.24 25.12\\n50.24 33.49\\n24.00 8.00\\n52.00 24.00\\n\'}, {\'in\': \'2\\n2 2\\n2\\n2\\n2 3 4\\n4 5\\n10\\n20\\n20 30 40\\n\', \'out\': \'50.24 25.12\\n50.24 33.49\\n24.00 8.00\\n52.00 24.00\\n226.08 251.20\\n1256.00 4186.67\\n2400.00 8000.00\\n5200.00 24000.00\\n\'}]', 1, 0, 0, '<p>第一行一个数N，表示测试数据的组数，每组测试数据有四行，</p>\r\n<p>第一行为圆柱体的半径，高；</p>\r\n<p>第二行为球体的半径；</p>\r\n<p>第三行为正方体的边长；</p>\r\n<p>第四行为长方体的长，宽，高。</p>\r\n<p>具体见样例。</p>', '<p>分别输出圆柱体、球体、正方体和长方体的表面积和体积。</p>\r\n<p>PI取3.14 ，保留小数点后两位。</p>', 4, 14, 'ymc', 2, '1\r\n2 2\r\n2\r\n2\r\n2 3 4\r\n', '50.24 25.12\r\n50.24 33.49\r\n24.00 8.00\r\n52.00 24.00\r\n');
INSERT INTO `problem` VALUES (754, '三角形类', '设计一个GeometricObject类。该类包括：\r\n（1）两个名为color（颜色）、filled（是否填充）的数据域，即Field。\r\n（2）一些方法。\r\n\r\n设计一个名为Triangle的类来扩展GeometricObject类。该类包括：\r\n（1）三个名为side1、side2、side3的数据域表示这个三角形的三条边，它们的默认值是1.0。\r\n（2）一个能创建带指定side1、side2和side3的三角形的构造方法。\r\n（3）一个名为getArea()的方法返回这个三角形的面积。\r\n（4）一个名为getPerimeter()的方法返回这个三角形的周长。\r\n（5）定义一个方法，用于返回这个三角形的字符串描述。\r\n', '[{\'in\': \'1 1.5 1 white true\\n\', \'out\': \'Triangle: side1=1.0 side2=1.5 side3=1.0 color=white filled=true\\nArea=0.50\\nPerimeter=3.50\\n\'}, {\'in\': \'5 5 6 yellow false\\n\', \'out\': \'Triangle: side1=5.0 side2=5.0 side3=6.0 color=yellow filled=false\\nArea=12.00\\nPerimeter=16.00\\n\'}]', 1, 0, 0, '输入一行，表示三角形的三条边、颜色、是否填充。', '输出三行：\r\n第一行，三角形的三条边、颜色、是否填充\r\n第二行，三角形的面积，结果保留两位小数\r\n第三行，三角形的周长，结果保留两位小数', 4, 14, 'ymc', 2, '1 1.5 1 white true\r\n', 'Triangle: side1=1.0 side2=1.5 side3=1.0 color=white filled=true\r\nArea=0.50\r\nPerimeter=3.50\r\n');
INSERT INTO `problem` VALUES (755, '接口--救火车', '<p>定义两个接口Auto和Sprinkler。</p>\r\n<p>定义三个类Car、Truck和FireTruck。</p>\r\n<p>其中Car和Truck 实现Auto。FireTruck 继承Truck，实现Sprinkler。</p>\r\n<p>interface Auto {<br />&nbsp;&nbsp; &nbsp;public abstract void move();<br /><br />&nbsp;&nbsp; &nbsp;public abstract void stop();<br /><br />&nbsp;&nbsp; &nbsp;public abstract void dudu();<br />}<br /><br />interface Sprinkler {<br />&nbsp;&nbsp; &nbsp;public abstract void watering();<br />}<br /><br />public class Main {<br />&nbsp;&nbsp; &nbsp;public static void main(String args[]) {<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Car car = new Car();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;car.move();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;car.dudu();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;car.stop();<br /><br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;FireTruck firetruck = new FireTruck();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;firetruck.move();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;firetruck.dudu();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;firetruck.stop();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;firetruck.watering();<br />&nbsp;&nbsp; &nbsp;}<br />}</p>', '[{\'in\': \'\', \'out\': \'I am running very fast.\\nI am a car!Get out Every one!\\nI am stopping.\\nI am running very smoothly.\\nI am a big Auto!Get out Every one and small car!\\nI am slowly stopping.\\nI am watering,No fire!\\n\'}]', 1, 0, 0, '', '', 4, 14, 'ymc', 1, '无', 'I am running very fast.\r\nI am a car!Get out Every one!\r\nI am stopping.\r\nI am running very smoothly.\r\nI am a big Auto!Get out Every one and small car!\r\nI am slowly stopping.\r\nI am watering,No fire!\r\n');
INSERT INTO `problem` VALUES (756, '猫咪小猫和老猫', '话说温茶国里一条流向西海的小河旁边，生活着一群快乐的美猫们。小帐篷错落有致的点缀在河畔一片碧绿的草丛中，居住其中的猫族门过着日出而作日入而息的生活，生活宁静而有规律。它们起床后的问候也是如此特别，第一桩事情先向部落告示：报上秀一下自己的名字，活动一下步子，再展现猫们特有的招牌声。\r\n我们节目道是一家三口：一只上了年纪的猫、一只成年猫和一只年轻猫，在早晨依次出现的场景。\r\n\r\n请你帮大家做一些后台的工作，以待演出所需。我们已经准备了一个示范的道具(cat)(道具的名称要求，表明自己、走路、发声等功能)，请你设计好对应的四种猫的道具:\r\n定义Cat类，表示猫咪。\r\n定义AdultCat类，用来表示成年猫咪。\r\n定义YoungCat，用来表示小猫咪。\r\n定义OldCat，用来表示老猫咪。\r\n其中YoungCat和OldCat、AdultCat都是Cat的子类。\r\n\r\nCat是一个抽象类，在Cat中定义name Field，它为String类型。\r\n要给出move()、sound()、show()三个抽象方法。\r\n\r\n已知main()方法的代码如下：\r\npublic static void main(String args[]) {\r\n		Cat[] catfamily = new Cat[3];\r\n		\r\n		catfamily[0] = new OldCat(\"HuangLao\");\r\n		catfamily[1] = new AdultCat(\"LaoMei\");\r\n		catfamily[2] = new YoungCat(\"XiaoLi\");\r\n		\r\n		for (int i = 0; i < 3; i++) {\r\n			catfamily[i].show();\r\n			catfamily[i].move();\r\n			catfamily[i].sound();\r\n\r\n                        System.out.println();\r\n		}\r\n}\r\n', '[{\'in\': \'\', \'out\': \'I am HuangLao,I am a old cat!\\nI move slowly.\\nmiem miem!\\n\\nI am LaoMei,I am a cat!\\nI can move quickly.\\nmie mie!\\n\\nI am XiaoLi,I am a young cat!\\nI like jumping.\\nmie mie!\\n\\n\'}]', 1, 0, 0, '', '', 4, 14, 'ymc', 1, '', 'I am HuangLao,I am a old cat!\r\nI move slowly.\r\nmiem miem!\r\n\r\nI am LaoMei,I am a cat!\r\nI can move quickly.\r\nmie mie!\r\n\r\nI am XiaoLi,I am a young cat!\r\nI like jumping.\r\nmie mie!\r\n\r\n');
INSERT INTO `problem` VALUES (757, '旋转风车', '<p>编写一个程序，在面板显示显示一个风车，并实现旋转的效果，效果如下图：</p>\r\n<p>图1：程序初始状态</p>\r\n<p>图2：一段时间后的状态</p>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (758, '用鼠标移动信息', '编写一个程序，在面板上显示一条消息。可以用鼠标移动这条消息。消息会随着鼠标的拖动而移动，消息总是显示在鼠标指针处。\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (759, '控制显示的字符', '显示用户输入的字符。用户可以使用上、下、左、右箭头按键来将字符做相应移动。\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (760, '事件驱动程序（一）', '给出在一个按钮上处理ActionEvent的代码。\r\n\r\n点击“Please click me”按钮时，控制台就会显示消息“Clicked”。\r\n\r\n界面如下图所示：\r\n\r\n\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (761, '鼠标控制两个消息交替出现', '<pre>编写一个程序，在面板显示一个Label标签，初始文字为&ldquo;Java is fun&rdquo;。当单击鼠标后，标签文字改变为&ldquo;Java is powerful&rdquo;。反复点击鼠标，然后这两段文字交替出现。效果如下图：', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (762, '记事本（打开、另存为）', '<p>模拟Windows中的记事本，开发一个很简单的记事本程序，它具备&ldquo;打开&rdquo;和&ldquo;另存为&rdquo;的功能。 如下图所示。</p>\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (763, '展示图片', '中间用Label来展示图片。\r\n上面是工具栏，有如下按钮：\r\n（1）打开图片；（2）显示上一张图片；（3）显示下一张图片；（4）放大图片；（5）缩小图片。\r\n\r\n如下图所示：\r\n\r\n\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n\r\n\r\n', 0, '', '');
INSERT INTO `problem` VALUES (764, 'qq简易聊天（服务器端）', '客户端和服务器端，可以任意互发信息，带界面。\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (765, 'qq简易聊天（客户端） ', '客户端和服务器端，可以任意互发信息，带界面。\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (766, '三个数的一些基本运算', '要求从键盘输入3个整数，并打印他们的和、平均值、乘积、最小值和最大值。', '[{\'in\': \'4\\n13 27 14\\n12 13 14\\n-12 13 14\\n99 98 90\\n\', \'out\': \'54 18 4914 13 27\\n39 13 2184 12 14\\n15 5 -2184 -12 14\\n287 95 873180 90 99\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括用空格隔开的3个int类型整数。', '输出n行，每行分别为相应输入行三个数的和、平均值（取其整数部分）、乘积、最小值和最大值，用空格隔开。', 4, 14, 'ymc', 1, '1\n13 27 14\n', '54 18 4914 13 27\n');
INSERT INTO `problem` VALUES (767, '输出网格', '输出如下所示的网格\r\n+---+---+\r\n|   |   |\r\n+---+---+\r\n说明：两个“+”之间有三个“-”。', '[{\'in\': \'\', \'out\': \'+---+---+\\n|   |   |\\n+---+---+\\n\'}]', 1, 0, 0, '无输入', '输入如样例所示的网格，总共三行。\r\n', 4, 14, 'ymc', 1, '无', '+---+---+\r\n|   |   |\r\n+---+---+');
INSERT INTO `problem` VALUES (768, '平方', '<p>输入一个整数n，求这个数的平方。</p>', '[{\'in\': \'2\\n\', \'out\': \'4\\n\'}, {\'in\': \'-10\\n\', \'out\': \'100\\n\'}]', 1, 0, 0, '<p>输入只有一个整数n。</p>', '<p>在单独的一行中输出n的平方。</p>', 4, 14, 'ymc', 2, '2\r\n', '4\r\n');
INSERT INTO `problem` VALUES (769, '查找质数', '对于用户输入任意自然数T，用穷举法找出1-T间的所有质数，显示出来。\r\n质数指在一个大于1的自然数中，除了1和此整数自身外，没法被其他自然数整除的数。\r\n判断质数的最快方法：给出一个整数A，做一个循环，设一个整数i，让i从2开始自增，，与A相除取余，直到i增到sqrt（A），余数等于0的次数大于0的就不是质数，反之就是。\r\n', '[{\'in\': \'20\\n\', \'out\': \'2\\n3\\n5\\n7\\n11\\n13\\n17\\n19\\n\'}, {\'in\': \'100\\n\', \'out\': \'2\\n3\\n5\\n7\\n11\\n13\\n17\\n19\\n23\\n29\\n31\\n37\\n41\\n43\\n47\\n53\\n59\\n61\\n67\\n71\\n73\\n79\\n83\\n89\\n97\\n\'}]', 1, 0, 0, '要求用户输入一个大于1的自然数T。', '要求对每个测试实例，分行显示1-T间的所有素数。', 4, 14, 'ymc', 2, '20\r\n', '2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n');
INSERT INTO `problem` VALUES (770, '温度转换', '<p>已知道华氏温度与摄氏温度转换公式C=(5/9)(F-32)，其中C为摄氏温度，F为华氏温度。请写一个程序给出华氏温度为0，20，40，...,300时对应的摄氏温度：</p>\r\n<p>0&nbsp;&nbsp;&nbsp; -17<br />20&nbsp;&nbsp;&nbsp; -6<br />40&nbsp;&nbsp;&nbsp; 4<br />60&nbsp;&nbsp;&nbsp; 15<br />80&nbsp;&nbsp;&nbsp; 26<br />100&nbsp;&nbsp;&nbsp; 37<br />120&nbsp;&nbsp;&nbsp; 48<br />140&nbsp;&nbsp;&nbsp; 60<br />160&nbsp;&nbsp;&nbsp; 71<br />180&nbsp;&nbsp;&nbsp; 82<br />200&nbsp;&nbsp;&nbsp; 93<br />220&nbsp;&nbsp;&nbsp; 104<br />240&nbsp;&nbsp;&nbsp; 115<br />260&nbsp;&nbsp;&nbsp; 126<br />280&nbsp;&nbsp;&nbsp; 137<br />300&nbsp;&nbsp;&nbsp; 148</p>', '[{\'in\': \'\', \'out\': \'0    -17\\n20    -6\\n40    4\\n60    15\\n80    26\\n100    37\\n120    48\\n140    60\\n160    71\\n180    82\\n200    93\\n220    104\\n240    115\\n260    126\\n280    137\\n300    148\\n\'}]', 1, 0, 0, '<p>无输入</p>', '<p>总共16行，每行两个整数，第一个整数是华氏温度，第二个整数是与之对应的摄氏温度。两个整数之间用4个空格隔开，第二个整数后面没有空格。</p>', 4, 14, 'ymc', 1, '', '0    -17\r\n20    -6\r\n40    4\r\n60    15\r\n80    26\r\n100    37\r\n120    48\r\n140    60\r\n160    71\r\n180    82\r\n200    93\r\n220    104\r\n240    115\r\n260    126\r\n280    137\r\n300    148\r\n');
INSERT INTO `problem` VALUES (771, '水仙花数', '<p><span style=\"font-size: medium;\">春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，</span></p>\r\n<p><span style=\"font-size: medium;\">他是这样定义的： &ldquo;水仙花数&rdquo;是指一个三位数，它的各位数字的立方和等于其本身，</span></p>\r\n<p><span style=\"font-size: medium;\">比如：153=1^3+5^3+3^3。 </span></p>\r\n<p><span style=\"font-size: medium;\">现在要求输出所有在100和999范围内的水仙花数。</span></p>', '[{\'in\': \'\', \'out\': \'153 370 371 407\\n\'}]', 1, 0, 0, '<p>无</p>', '<p><span style=\"font-size: medium;\">要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于100,并且小于等于999，</span></p>\r\n<p><span style=\"font-size: medium;\">如果有多个，则要求从小到大排列在一行内输出，</span></p>\r\n<p><span style=\"font-size: medium;\">之间用一个空格隔开</span></p>', 4, 14, 'ymc', 1, '', '153 370 371 407\r\n');
INSERT INTO `problem` VALUES (772, '求12以内n的阶乘 \n', '<p>给定一个非负整数n(n&lt;=12)，求n的阶乘。</p>\n', '[{\'in\': \'3\\n\', \'out\': \'6\\n\'}, {\'in\': \'5\\n\', \'out\': \'120\\n\'}, {\'in\': \'6\\n\', \'out\': \'720\\n\'}, {\'in\': \'12\\n\', \'out\': \'479001600\\n\'}]', 1, 0, 0, '<p>只有一行输入，整数n（n&lt;=12）。</p>\n', '<p>在单独的一行中输出数值n!。</p>\n', 4, 14, 'ymc', 4, '3\r\n\n', '6\r\n\n');
INSERT INTO `problem` VALUES (773, '阶乘输出\n', '<p>请输出如下所示的阶乘公式 3!+4!+5!+6!+7! 这个公式表示从3到7的阶乘之和。现在给定两个整数a和b(0<strong>&lt;</strong>a<strong>&lt;</strong>b)，请输出a到b的阶乘之和。</p>', '[{\'in\': \'3 7\\n\', \'out\': \'3!+4!+5!+6!+7!\\n\'}, {\'in\': \'2 8\\n\', \'out\': \'2!+3!+4!+5!+6!+7!+8!\\n\'}]', 1, 0, 0, '<p>输入为一行，由两个整数a和b构成，之间由一个空格分开。已经知道<strong>0&lt;a&lt;b&lt;20。</strong></p>', '<p>输出a到b的阶乘之和，公式中间无任何空格。公式最后加一个换行符。</p>', 4, 14, 'ymc', 2, '3 7\r\n\r\n', '3!+4!+5!+6!+7!\r\n\r\n');
INSERT INTO `problem` VALUES (774, '数值统计\n', '统计给定的n个数中，负数、零和正数的个数。\n', '[{\'in\': \'6 0 1 2 3 -1 0\\n5 1 2 3 4 0.5\\n0 \\n\', \'out\': \'1 2 3\\n0 0 5\\n\'}, {\'in\': \'5 7 -4 -8 9 0\\n6 8 3 -3 0 9 0\\n6 0 0 0 0 0 0\\n1 8\\n2 8 0\\n0\\n\', \'out\': \'2 1 2\\n1 2 3\\n0 6 0\\n0 0 1\\n0 1 1\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的第一个数是整数n（n<100），表示需要统计的数值的个数，然后是n个实数；如果n=0，则表示输入结束，该行不做处理。\n', '对于每组输入数据，输出一行a,b和c，分别表示给定的数据中负数、零和正数的个数。\n', 4, 14, 'ymc', 2, '6 0 1 2 3 -1 0\r\n5 1 2 3 4 0.5\r\n0 \r\n\n', '1 2 3\r\n0 0 5\r\n\n');
INSERT INTO `problem` VALUES (775, '打印水仙花数', '打印所有的“水仙花数”，所谓“水仙花数”是指一个3位数，其各位数字的立方和等于该数本身，例如，153是水仙花数，因为153＝1×1×1＋5×5×5＋3×3×3。', '[{\'in\': \'\', \'out\': \'153\\n370\\n371\\n407\\n\'}]', 1, 0, 0, '无输入。', '输出所有水仙花数，每行输出一个水仙花数。', 4, 14, 'ymc', 1, '', '输出所有的水仙花数');
INSERT INTO `problem` VALUES (776, '判断正整数的位数', '<p>给一个数n（<strong>0&lt;n&lt;=32767</strong>），逆序打印出各位数字，并求它是几位数。</p>', '[{\'in\': \'12345\\n34\\n789\\n9\\n7890\\n32767\\n\', \'out\': \'54321 5\\n43 2\\n987 3\\n9 1\\n0987 4\\n76723 5\\n\'}]', 1, 0, 0, '<p>输入数据有多组，每组占一行，由一个整数组成。</p>', '<p>对于每组输入数据，输出一行，该行有两个数，一个数是n的各位数字的逆序，一个数是n的位数，它们以一个空格隔开。</p>', 4, 14, 'ymc', 1, '12345\r\n34\r\n100\r\n789\r\n', '54321 5\r\n43 2\r\n001 3\r\n987 3\r\n');
INSERT INTO `problem` VALUES (777, '不要62', '<p>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。 杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。 不吉利的数字为所有含有4或62的号码。例如： 62315 73418 88914 都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。 你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。</p>', '[{\'in\': \'1 100\\n0 0\\n\', \'out\': \'80\\n\'}, {\'in\': \'103 1000\\n0 0\\n\', \'out\': \'629\\n\'}]', 1, 0, 0, '<p>输入的都是整数对n、m<strong>（0&lt;n&le;m&le;1000）</strong>，如果遇到都是0的整数对，则输入结束。</p>', '<p>对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。</p>', 4, 14, 'ymc', 2, '1 100\r\n0 0\r\n', '80\r\n');
INSERT INTO `problem` VALUES (778, '输出 C ', '在标准输出上输出有*号构成的字母C,如下所示：\r\n****\r\n*\r\n*\r\n****', '[{\'in\': \'\', \'out\': \'****\\n*\\n*\\n****\\n\'}]', 1, 0, 0, '无', '****\r\n*\r\n*\r\n****', 4, 14, 'ymc', 1, '', '****\r\n*\r\n*\r\n****');
INSERT INTO `problem` VALUES (779, '最大公约数与最小公倍数', '分别求两个整数的最大公约数和最小公倍数。\r\n\r\n要求：用用户自定义函数实现。', '[{\'in\': \'1\\n24 72\\n\', \'out\': \'24 72\\n\'}, {\'in\': \'2\\n24 72\\n138 240\\n\', \'out\': \'24 72\\n6 5520\\n\'}, {\'in\': \'3\\n24 72\\n138 240\\n1020 1111\\n\\n\', \'out\': \'24 72\\n6 5520\\n1 1133220\\n\'}]', 1, 0, 0, '第一行是一个正整数n，表示测试数据的组数。下面是 n 对测试数据，每组测试数据用一个空格隔开。\r\n', '对于每对整数，输出其最大公约数和最小公倍数。', 4, 14, 'ymc', 3, '1\r\n24 72\r\n', '24 72\r\n');
INSERT INTO `problem` VALUES (780, 'CPU类的实现\n', '<p>定义Cpu类。它有等级（rank）Field、频率（frequency）Field、电压（voltage）Field等；有run()方法和stop()方法，分别表示CPU开始运行和运行结束。</p>\r\n<p>其中，rank为整型的等级，frequency为单位是MHz的整数类型，voltage为浮点型的电压值。</p>\r\n<p>&nbsp;<br />要求：</p>\r\n<p>构造器输出&ldquo;Constructing a CPU&rdquo;；</p>\r\n<p>run()方法输出&ldquo;CPU is running&rdquo;；</p>\r\n<p>stop()方法输出&ldquo;CPU is stopping&rdquo;。<br />&nbsp;</p>\r\n<p>在main()方法中生成CPU类的对象，并依次调用run和stop函数，观察构造构造器的调用顺序。</p>', '[{\'in\': \'1 100 1.14\\n\', \'out\': \'Constructing a CPU\\nrank: 1\\nfrequency: 100\\nvoltage: 1.14000\\nCPU is running\\nCPU is stopping\\n\'}, {\'in\': \'7 200 300\\n\', \'out\': \'Constructing a CPU\\nrank: 7\\nfrequency: 200\\nvoltage: 300.00000\\nCPU is running\\nCPU is stopping\\n\'}]', 1, 0, 0, '<p>要求用户输入CPU对象的三个属性值。</p>', '<p>对每个测试对象，分行显示测试对象各方法的输出语句。</p>', 4, 14, 'ymc', 2, '1 100 1.14\r\n\r\n', 'Constructing a CPU\r\nrank: 1\r\nfrequency: 100\r\nvoltage: 1.14000\r\nCPU is running\r\nCPU is stopping\r\n');
INSERT INTO `problem` VALUES (781, 'Circle类的实现\n', '<p>定义一个Circle类。</p>\r\n<p>它有三个私有整型Field（分别为半径和圆心的横坐标、纵坐标）；</p>\r\n<p>一个默认构造方法，默认中心坐标在(0,0)，半径为1；</p>\r\n<p>一个计算直径的方法calDiameter()；</p>\r\n<p>一个计算面积的方法calArea()；</p>\r\n<p>一个计算周长的方法calPerimeter()；</p>\r\n<p>一个输出圆的中心坐标和半径的函数output()。</p>\r\n<p>&nbsp;</p>\r\n<p>PI的取值为3.14。</p>', '[{\'in\': \'2 3 5\\n\', \'out\': \'Center=(2,3) and Radius=5\\nDiameter=10\\nArea=78.5\\nPerimeter=31.4\\n\'}, {\'in\': \'1 1 10\\n\', \'out\': \'Center=(1,1) and Radius=10\\nDiameter=20\\nArea=314.0\\nPerimeter=62.8\\n\'}, {\'in\': \'2 3 6\\n\', \'out\': \'Center=(2,3) and Radius=6\\nDiameter=12\\nArea=113.0\\nPerimeter=37.7\\n\'}]', 1, 0, 0, '<p>要求用户输入圆的中心坐标和半径。</p>', '<p>分四行输出，第一行显示圆的中心坐标和半径，第二行显示圆的直径，第三行显示圆的面积，第四行显示圆的周长，周长和面积要求保留一位小数。</p>', 4, 14, 'ymc', 3, '2 3 5\r\n', 'Center=(2,3) and Radius=5\r\nDiameter=10\r\nArea=78.5\r\nPerimeter=31.4\r\n\r\n');
INSERT INTO `problem` VALUES (782, '使用ArrayList', '<p>编写程序，创建一个ArrayList，然后向这个线性表中添加一个Loan对象，一个MyDate对象，一个字符串，一个Frame对象和一个Circle对象，然后只用循环调用对象的toString（）方法，来显示线性表中所有的元素。</p>\r\n<p>Loan类有贷款金额loan（double）数据域和返回字符串的toString()方法。</p>\r\n<p>Date类有时间date（String）数据域和返回字符串的toString()方法。</p>\r\n<p>Frame类有标签framName（String）数据域和返回字符串的toString()方法。</p>\r\n<p>Circle类有半径radius（double）数据域和返回字符串的toString()方法。</p>', '[{\'in\': \'50000\\n2012-12-12\\nwenzhou\\nFrame2\\n3.14\\n\', \'out\': \'Loan: 50000.00\\nDate: 2012-12-12\\nwenzhou\\nFrame: Frame2\\nCircle: 3.14\\n\'}, {\'in\': \'10000\\n2012-12-12\\nwenzhou\\nFrame3\\n6.28\\n\', \'out\': \'Loan: 10000.00\\nDate: 2012-12-12\\nwenzhou\\nFrame: Frame3\\nCircle: 6.28\\n\'}]', 1, 0, 0, '<p>输入有五行。</p>\r\n<p>第一行输入贷款金额；</p>\r\n<p>第二行输入一个时间字符串；</p>\r\n<p>第三行输入一个字符串。</p>\r\n<p>第四行输入一个窗口名。</p>\r\n<p>第五行输入一个圆的半径。</p>', '<p style=\"text-align: left;\" align=\"center\">对加入ArrayList数组的每一个对象，通过自己的toSring的方法输出对象的信息。</p>\r\n<p style=\"text-align: left;\" align=\"center\">格式：类名：字符串/double类型数（保留两位小数）.</p>\r\n<p>具体参考输出样例。</p>', 4, 14, 'ymc', 2, '10000\r\n2012-10-21\r\nwenzhou\r\nFrame1\r\n5.24\r\n\r\n', 'Loan: 10000.00\r\nDate: 2012-10-21\r\nwenzhou\r\nFrame: Frame1\r\nCircle: 5.24\r\n');
INSERT INTO `problem` VALUES (783, '圆柱类的实现', '<p>定义一个圆柱类Cylinder，它有底面半径（radius）Field和高（height）Field， radius和height均为整数类型； 它有构造方法和用于计算圆柱体积的方法getVolume()。</p>', '[{\'in\': \'3 8\\n\', \'out\': \'226.08\\n\'}, {\'in\': \'6 11\\n\', \'out\': \'1243.44\\n\'}, {\'in\': \'9 14\\n\', \'out\': \'3560.76\\n\'}]', 1, 0, 0, '<p>要求用户输入圆柱对象的底面半径和高。</p>', '<p>对每个测试实例，在单独一行中输出圆柱的体积，保留小数点后两位。PI取3.14。</p>', 4, 14, 'ymc', 3, '10 10\r\n\r\n', '3140.00\r\n\r\n');
INSERT INTO `problem` VALUES (784, '立方体', '<p>设计一个立方体类Cube，它能计算并输出立方体的体积和表面积。</p>\r\n<p>&nbsp;<span style=\"font-size: 10px;\">提示：</span></p>\r\n<p>Cube类包含edge(立方体边长)、volume(体积)和area(表面积) 三个私有Field；</p>\r\n<p>另有构造方法、calVolume() 计算体积方法、calArea()  计算表面积方法和 display()  输出结果方法。</p>', '[{\'in\': \'5\\n0.78\\n1.14\\n1.10\\n0.60\\n0.36\\n\', \'out\': \'obj1 Volume:0.47; Area:3.65\\nobj2 Volume:1.48; Area:7.80\\nobj3 Volume:1.33; Area:7.26\\nobj4 Volume:0.22; Area:2.16\\nobj5 Volume:0.05; Area:0.78\\n\'}]', 1, 0, 0, '<p>第一行为一个T，表示测试数据的组数；接下来有T行，每行输入一个实数r，表示Cube对象的边长。</p>', '<p>输出Cube对象的体积和表面积。结果保留两位小数。</p>', 4, 14, 'ymc', 1, '3\r\n2.3\r\n4.5\r\n2.6\r\n\r\n', 'obj1 Volume:12.17; Area:31.74\r\nobj2 Volume:91.13; Area:121.50\r\nobj3 Volume:17.58; Area:40.56\r\n');
INSERT INTO `problem` VALUES (785, '最小值与最大值', '读入5个整数，输出他们中的最小值和最大值。', '[{\'in\': \'5\\n12 13 14 15 16\\n1 2 3 4 5\\n100 -100 99 101 12\\n-1 -4 -5 -9 -10\\n234 1323 -123 123 0\\n\', \'out\': \'16 12\\n5 1\\n101 -100\\n-1 -10\\n1323 -123\\n\'}]', 1, 0, 0, '输入第一行有一个整数n，表示下面有n组数据。下面的n行，每行包括用空格隔开的5个int类型整数。', '输出有n行，每行分别是这5个数的最大值和最小值，两个数用空格隔开。', 4, 14, 'ymc', 1, '2\r\n12 13 14 15 16\r\n1 2 3 4 5\r\n', '16 12\r\n5 1\r\n');
INSERT INTO `problem` VALUES (786, '行列互换\n', '<p>将一个整数矩阵的行和列互换。</p>', '[{\'in\': \'2\\n5 6\\n43 643 1 65 3 5\\n-43 4 -4 0 53 423 \\n5 64 2 -99 44 40\\n4 -32 43 542 5 4\\n42 4 2 -9 43 87\\n1 1\\n2\\n\', \'out\': \'43 -43 5 4 42 \\n643 4 64 -32 4 \\n1 -4 2 43 2 \\n65 0 -99 542 -9 \\n3 53 44 5 43 \\n5 423 40 4 87 \\n\\n2 \\n\\n\'}, {\'in\': \'1\\n2 3\\n3 3 9\\n4 5 4\\n\', \'out\': \'3 4 \\n3 5 \\n9 4 \\n\\n\'}]', 1, 0, 0, '<p><span style=\"font-size: medium;\">第一行是测试数据的组数。</span></p>\r\n<p><span style=\"font-size: medium;\">以下每组数据的首行是矩阵的行数和列数（行和列的数目均不大于100），之后为整数矩阵。</span></p>', '<p>对输入的每组测试数据，将矩阵行列互换输出，每组后面有一个空行。矩阵中的每个数据之后有一个空格。</p>', 4, 14, 'ymc', 2, '2\r\n3 2\r\n11 22\r\n33 44\r\n55 66\r\n3 3\r\n11 12 13\r\n21 22 23\r\n31 32 33\r\n\r\n', '11 33 55 \r\n22 44 66 \r\n\r\n11 21 31 \r\n12 22 32 \r\n13 23 33 \r\n\r\n');
INSERT INTO `problem` VALUES (787, '数列有序', '<p>有n(n&lt;=100)个整数，已经按照从小到大顺序排列好了，现在另外给一个整数x，请将该数插入到序列中，并使新的序列仍然有序。</p>', '[{\'in\': \'3 3\\n1 2 4\\n0 0\\n\', \'out\': \'1 2 3 4\\n\'}, {\'in\': \'4 6\\n1 3 9 10\\n4 2\\n3 5 7 9\\n6 3\\n1 2 3 4 5 6\\n0 0\\n\', \'out\': \'1 3 6 9 10\\n2 3 5 7 9\\n1 2 3 3 4 5 6\\n\'}]', 1, 0, 0, '<p>输入数据包含多个测试实例，每组数据由两行组成，第一行是n和x，第二行是已经有序的n个数的数列。 n和x同时为0表示输入数据结束，本行不做处理。</p>', '<p>对于每个测试实例，输出插入新的元素后的数列，每个元素之间有一个空格。</p>', 4, 14, 'ymc', 2, '3 3\r\n1 2 4\r\n0 0\r\n\r\n\r\n', '1 2 3 4\r\n\r\n\r\n');
INSERT INTO `problem` VALUES (788, '求几何对象的面积之和', '设计一个GeometricObject类。再设计两个GeometricObject的子类Rectangle和Circle。\r\n\r\nRectangle有长length和宽width数据域。Circle有半径radius数据域。\r\n\r\n编写一个方法，求数组中所有几何对象的面积之和。方法签名如下：\r\npublic static double sumArea(GeometricObject[] a)\r\n编写测试程序，创建四个对象（两个矩形对象和两个圆的对象）的数组，然后使用sumArea方法求它们的总面积。\r\n\r\n注意：求圆的面积时，请用Math.PI。\r\n', '[{\'in\': \'1 2\\n3 4\\n5\\n6\\n\', \'out\': \'205.64\\n\'}, {\'in\': \'2 4\\n5 7\\n8\\n8\\n\', \'out\': \'445.12\\n\'}]', 1, 0, 0, '输入有四行。\r\n前两行输入矩形的长和宽。\r\n后两行输入圆的半径。\r\n', '输出只有一行，输出这四个几何对象的总面积，结果保留两位小数。\r\n', 4, 14, 'ymc', 2, '1 2\r\n3 4\r\n5\r\n6\r\n', '205.64\r\n');
INSERT INTO `problem` VALUES (789, 'ComparableCircle类', '<p>Circle类，它有半径属性，有计算面积的方法。</p>\r\n<p>创建名为ComparableCircle的类，它扩展Circle类并实现Comparable接口。 实现comparaeTo方法，使其根据面积比较两个圆。</p>\r\n<p>编写一个测试程序求出ComparableCircle对象的两个实例中的较大者。</p>', '[{\'in\': \'5\\n15\\n\', \'out\': \"The max circle\'s radius is 706.86\\n\"}, {\'in\': \'1000\\n500\\n\', \'out\': \"The max circle\'s radius is 3141592.65\\n\"}]', 1, 0, 0, '<p>输入二行。 第一行为第1个圆的半径； 第二行为第2个圆的半径。</p>', '<p>输出两个圆中面积较大者。 结果保留两位小数，计算圆面积时用Math.PI</p>', 4, 14, 'ymc', 2, '5\r\n15\r\n', 'The max circle\'s radius is 706.86\r\n');
INSERT INTO `problem` VALUES (790, '形状类的继承与派生', '<p>声明一个形状（Shape）抽象类，它有计算面积calArea()抽象方法。</p>\r\n<p>在此基础上派生出长方形类（Rectangle）类和圆形类（Circle）类。其中Rectangle类具有浮点型Field：长（length）和宽（weight）；Circle类具有浮点型Field：半径（radius）。</p>\r\n<p>在main()方法中可以通过Shape类的引用依次调用Circle、Rectangle类的calArea()方法来计算对应图形对象的面积，固定格式输出，结果保留2位小数，PI取值为3.14。</p>', '[{\'in\': \'10 10 15\\n\', \'out\': \'314.00\\n150.00\\n\'}, {\'in\': \'15 15 20\\n\', \'out\': \'706.50\\n300.00\\n\'}, {\'in\': \'20 20 25\\n\', \'out\': \'1256.00\\n500.00\\n\'}]', 1, 0, 0, '<p>依次输入圆形对象的半径值、长方形对象的长和宽。</p>', '<p>分行显示Circle、Rectangle的calArea()方法的输出。</p>', 4, 14, 'ymc', 3, '5\r\n4 6\r\n', '78.50\r\n24.00\r\n');
INSERT INTO `problem` VALUES (791, '将GeometricObject类变成可比较的', '修改GeometricObject类以实现Comparable接口，并且在GeometricObject类中定义一个静态的\r\n求两个GeometricObject对象中较大者的max方法。\r\npublic static Comparable max(Comparable o1, Comparable o2);\r\n\r\n设计Rectangle类，包含长length和宽width数据域，它扩展GeometricObject类。\r\n设计Circle类，包含半径radius数据域，它扩展GeometricObject类。\r\n\r\n编写一个测试程序，使用max方法求两个圆中的较大者和两个矩形中的较大者（如果面积相同，输出后者）。\r\n\r\n计算圆面积时，请用Math.PI。\r\n', '[{\'in\': \'A 1 2\\nB 3 4\\nC 3\\nD 2\\n\', \'out\': \'B 3.00 4.00 12.00\\nC 3.00 28.27\\n\'}, {\'in\': \'A 34 23\\nB 34 23\\nC 34\\nD 23\\n\', \'out\': \'B 34.00 23.00 782.00\\nC 34.00 3631.68\\n\'}]', 1, 0, 0, '输入有四行。\r\n前两行输入两个矩形对象名称name、长length和宽width。\r\n后两行输入两个圆的名称name和半径radius。\r\n', '输出有两行。\r\n第一行输出两个矩形中面积较大的信息，格式：名称 长 宽 面积（保留两位小数并以一个空格隔开）\r\n第二行输出两个圆中面积较大的信息，格式：名称 半径 面积（保留两位小数并以一个空格隔开）\r\n\r\n说明：如果面积相同，输出后者。\r\n', 4, 14, 'ymc', 2, 'A 1 2\r\nB 3 4\r\nC 3\r\nD 2\r\n', 'B 3.00 4.00 12.00\r\nC 3.00 28.27\r\n');
INSERT INTO `problem` VALUES (792, '使用按钮移动小球', '编写一个程序，在面板显示四个按钮，分别为“向上”，“向下”，“向左”，“向右”，然后实现上下左右移动小球。\r\n\r\n定义一个面板类来显示小球，\r\n当按下“向下”按钮时，实现小球向下移动；\r\n当按下“向左”按钮时，实现小球的向左移动；\r\n当按下“向右”按钮时，实现小球的向右移动；\r\n当按下“向上”按钮时，实现小球的向上移动；\r\n\r\n界面如下图：\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (793, '使用键盘移动小球', '<p>编写一个程序，在面板上下左右移动小球。\r\n定义一个面板类来显示小球，当按下键盘的&ldquo;&uarr;&rdquo;键时，实现小球向上移动；当按下&ldquo;&darr;&rdquo;键时，实现小球的向下移动。\r\n\r\n注意：按钮也要控制小球的上、下、左、右移动！！！\r\n\r\n界面如下图：\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (794, '运动的圆', '<pre>\r\n编写一个程序，在面板显示一个球，从左向右不断运动。当圆到达最右边时，又从左边重新开始。\r\n\r\n界面如下：\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (795, '显示包括六个标签的界面', '<p>显示包括六个标签的界面。\r\n\r\n将标签背景色设置为白色。将标签前景色分别设置为黑色、蓝色、青色、绿色、洋红色和橙色，如图1所示。\r\n设置每个标签的边界为黄色的线边界。\r\n设置每个标签的字体为Times Roman、加粗、20像素。\r\n将每个标签的文本和工具提示文本都设置为它的前景色的名字。</p>\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n', 0, '', '');
INSERT INTO `problem` VALUES (796, '滑动条的应用', '创建一个名为ColorDialog的选择颜色的自定义对话框，使用三个滑块来指定一种颜色的红、绿、蓝成分。自定义对话框允许用户使用滑块来选择颜色。\r\n然后把选定的颜色用于改变第1个窗口的颜色。\r\n\r\n如下图所示：\r\n\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n\r\n', 0, '', '');
INSERT INTO `problem` VALUES (797, '图片拷贝', '假设：把c:\\a.jpg这个文件拷贝到d:\\\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (798, '字节输入流', '用FileInputStream的对象把文件读入到内存。 \r\n例如：把D:\\text.txt这个文件读入到内存。假设文件D:\\text.txt的内容为：\r\n123456789\r\nabcdefghij\r\n\r\n那么输出：\r\n123456789\r\nabcdefghij\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (799, '字节输出流', '从键盘接收用户输入内容，并保存到文件中。用FileOutputStream的对象把内存中的内容写到文件中去。\r\n\r\n假设：从键盘输入下面两行文字\r\n12312231235555\r\nddddddd\r\n\r\n把这两行文字写到d:\\ss.txt文件中去，所以d:\\ss.txt文件中的内容为：\r\n12312231235555\r\nddddddd\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (800, '输出“Hello, World”（一）', '请编写一个程序，该程序可以每隔一秒，在控制台输出“Hello, World”。\r\n\r\n注意：用多线程！！', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (801, '输出“Hello, World”（二）', '请编写一个程序，该程序可以每隔一秒，在控制台输出“Hello, World”，当运行10次自动退出。\r\n\r\n注意：用多线程！！', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (802, '多线程（一）', '请编写一个程序，创建线程。一个线程计算从1+…+n并输出结果；另一个线程每隔一秒在控制台输出“Hello, World ××”，××要用具体数字显示。这两个工作，要同时进行。', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (803, '售票系统的模拟', '请编写一个程序，模拟一个机票售票系统。有三个售票点，在1天卖出2000张票。注意不是每个售票点都卖2000张，是一共卖2000张。', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (804, '闪烁文本', '编写一个程序，使用线程来控制动画。\r\n在一个标签上显示闪烁文本。\r\n\r\n如下图所示：\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy', 0, '', '');
INSERT INTO `problem` VALUES (805, '多线程（二）', '给出一个程序，它创建三个任务以及三个运行这些任务的线程。\r\n第一个任务打印a字母100次；\r\n第二个任务打印b字母100次；\r\n第三个任务打印1~100的整数。\r\n如果运行程序，则三个线程将共享CPU，并且在控制台上轮流打印字母和数字。', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (806, '圆的面积（服务器端）', '<p>给出一个客户端程序和一个服务器程序。客户端向服务器发送数据。服务器接收数据，并用它来生成一个结果，然后，将这个结果返回给客户端，客户端在控制台上显示结果。在本例中，客户端发送的数据是圆的半径，服务器生成的结果是圆的面积。 如下图所示：</p>', '[]', 1, 0, 0, '', '', 4, 14, 'lzy', 0, '', '');
INSERT INTO `problem` VALUES (807, '圆的面积（客户端）', '给出一个客户端程序和一个服务器程序。客户端向服务器发送数据。服务器接收数据，并用它来生成一个结果，然后，将这个结果返回给客户端，客户端在控制台上显示结果。在本例中，客户端发送的数据是圆的半径，服务器生成的结果是圆的面积。\r\n\r\n如下图所示：\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n\r\n\r\n\r\n', 0, '', '');
INSERT INTO `problem` VALUES (808, '输出Welcome to Java!', '写一个程序，输出Welcome to Java!', '[{\'in\': \'\', \'out\': \'Welcome to Java!\\n\'}]', 1, 0, 0, '无\r\n', '输出Welcome to Java!', 4, 14, 'ymc', 1, '无', 'Welcome to Java!\r\n');
INSERT INTO `problem` VALUES (809, '计算球体积', '根据输入的半径值，计算球的体积。\r\n\r\nPI取3.1415927。\r\n\r\n数据类型请用double！', '[{\'in\': \'1.5\\n\', \'out\': \'14.137\\n\'}, {\'in\': \'2\\n\', \'out\': \'33.510\\n\'}, {\'in\': \'99\\n\', \'out\': \'4064379.007\\n\'}, {\'in\': \'123\\n\', \'out\': \'7794781.577\\n\'}]', 1, 0, 0, '输入数据为一行，包括一个实数，表示球的半径。', '输出为一行，包括一个实数，计算结果保留三位小数。行尾输出一个换行符。', 4, 14, 'ymc', 4, '1.5\r\n', '14.137\r\n\r\n');
INSERT INTO `problem` VALUES (810, '三个数的基本运算', '从键盘输入3个整数，并打印他们的和、平均值、乘积、最小值和最大值。', '[{\'in\': \'13 27 14\\n\', \'out\': \'54 18 4914 13 27\\n\'}, {\'in\': \'99 98 90\\n\', \'out\': \'287 95 873180 90 99\\n\'}]', 1, 0, 0, '输入只有一行，该行包含用空格隔开的3个整数。', '在单独的一行中分别输出这三个数的和、平均值（取其整数部分）、乘积、最小值和最大值，用空格隔开。', 4, 14, 'ymc', 2, '13 27 14', '54 18 4914 13 27');
INSERT INTO `problem` VALUES (811, '进制转换', '<p>编写一个函数，用辗转相除法将一个十进制数分别转化为二进制、八进制和十六进制数。</p>', '[{\'in\': \'30\\n\', \'out\': \'11110\\n36\\n1E\\n\'}, {\'in\': \'65\\n\', \'out\': \'1000001\\n101\\n41\\n\'}, {\'in\': \'100\\n\', \'out\': \'1100100\\n144\\n64\\n\'}, {\'in\': \'135\\n\', \'out\': \'10000111\\n207\\n87\\n\'}]', 1, 0, 0, '<p>要求用户输入要转化的十进制数。</p>', '<p>分行输出转化后的二进制、八进制和十六进制数。</p>', 4, 14, 'ymc', 4, '61', '111101\r\n75\r\n3D\r\n');
INSERT INTO `problem` VALUES (812, '进制转换', '输入一个十进制数N，将它转换成R进制数输出。', '[{\'in\': \'7 2\\n23 12\\n-4 3\\n1000 24\\n10000 30\\n0 12\\n\', \'out\': \'111\\n1B\\n-11\\n1HG\\nB3A\\n0\\n\'}]', 1, 0, 0, '输入数据包含多个测试实例，每个测试实例包含两个整数N和R。\r\n\r\n请注意：2<=R<=36', '为每个测试实例输出转换后的数，每个输出占一行。\r\n\r\n如果R大于10，则对应的数字规则参考16进制（比如，10用A表示，16用G表示等等）。', 4, 14, 'ymc', 1, '7 2\r\n23 12\r\n-4 3\r\n\r\n\r\n', '111\r\n1B\r\n-11\r\n\r\n\r\n');
INSERT INTO `problem` VALUES (813, '回文串', '“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。请写一个程序判断读入的字符串是否是“回文”。', '[{\'in\': \'4\\nlevel\\nabcde\\nnoon\\nhaha\\n\', \'out\': \'yes\\nno\\nyes\\nno\\n\'}, {\'in\': \'3\\nefghhgfe\\ndynamic\\nasddas\\n\', \'out\': \'yes\\nno\\nno\\n\'}]', 1, 0, 0, '输入包含多个测试实例，输入数据的第一行是一个正整数n,表示测试实例的个数，后面紧跟着是n个字符串（每个字符串的长度不超过100）。', '如果一个字符串是回文串，则输出\"yes\",否则输出\"no\".', 4, 14, 'ymc', 2, '4\r\nlevel\r\nabcde\r\nnoon\r\nhaha\r\n', 'yes\r\nno\r\nyes\r\nno\r\n');
INSERT INTO `problem` VALUES (814, 'Fibonacci数列', '<p>1202年，意大利数学家Fibonacci出版了他的「算盘全书」。他在书中提出了一个关于兔子繁殖的问题： 如果一对兔子每月能生一对小兔（一雄一雌），而每对小兔在他出生后的第三個月裡，又能开始生一对小兔，假定在不发生死亡的情況下，由一对出生的小兔开始始，50個月后会有多少对兔子？ 我们可以总结出fibonacci数列的定义如下: f(0) = 0 f(1) = 1 f(n) = f(n-1) + f(n-2) 写一个程序输出f(n)的值（0&le;n&le;46)</p>', '[{\'in\': \'3\\n4\\n5\\n-1\\n\', \'out\': \'2\\n3\\n5\\n\'}, {\'in\': \'46\\n45\\n44\\n30\\n-1\\n\', \'out\': \'1836311903\\n1134903170\\n701408733\\n832040\\n\'}]', 1, 0, 0, '<p>有多组测试数据，每组测试数据为单独一行，这一行中只有一个整数n(0&le;n&le;46)，如果输入是-1，表示输入结束。-1不用处理。</p>', '<p>对每组测试数据，在单独的一行中输出f(n)。</p>', 4, 14, 'ymc', 2, '3\r\n4\r\n5\r\n-1\r\n', '2\r\n3\r\n5\r\n');
INSERT INTO `problem` VALUES (815, '倒序输出', '将输入的字符以相反的顺序输出。', '[{\'in\': \'2\\nRt7FF\\nR3356\\n\', \'out\': \'FF7tR\\n6533R\\n\'}, {\'in\': \'5\\n12345\\nERTYU\\nHr78Y\\n54FFl\\n5hhT3\\n\', \'out\': \'54321\\nUYTRE\\nY87rH\\nlFF45\\n3Thh5\\n\'}]', 1, 0, 0, '第一行是测试数据的组数。以下每行是一组测试数据，每组由5个字符组成，中间无空格。', '对输入的每组测试数据，按逆序输出，中间无空格，每组数据占一行。', 4, 14, 'ymc', 2, '2\n2fwEd\nH6sF3\n', 'dEwf2\n3Fs6H\n');
INSERT INTO `problem` VALUES (816, '字符串处理', '<p>先输入四个字符串作为人名，然后再输入四个字符串作为国家名称。</p>\r\n<p>输出：</p>\r\n<p>1、找出8个字符串中长度为五的符号串。</p>\r\n<p>2、把人名中第一个字母转化为大写。</p>\r\n<p>3、把国名中所有的字母转换为大写。</p>', '[{\'in\': \'tom\\njack\\nmarry\\nsherry\\nengland\\nchinese\\njapan\\namercian\\n\', \'out\': \'marry\\njapan\\nTom\\nJack\\nMarry\\nSherry\\nENGLAND\\nCHINESE\\nJAPAN\\nAMERCIAN\\n\'}]', 1, 0, 0, 'tom\r\njack\r\nmarry\r\nsherry\r\nengland\r\nchinese\r\njapan\r\namercian\r\n', 'marry\r\njapan\r\nTom\r\nJack\r\nMarry\r\nSherry\r\nENGLAND\r\nCHINESE\r\nJAPAN\r\nAMERCIAN\r\n', 4, 14, 'ymc', 1, '', '');
INSERT INTO `problem` VALUES (817, '密码', '网上流传一句话:\"常在网上飘啊，哪能不挨刀啊～\"。其实要想能安安心心地上网其实也不难，学点安全知识就可以。\r\n\r\n首先，我们就要设置一个安全的密码。那什么样的密码才叫安全的呢？一般来说一个比较安全的密码至少应该满足下面两个条件：\r\n\r\n(1).密码长度大于等于8，且不要超过16。\r\n(2).密码中的字符应该来自下面“字符类别”中四组中的至少三组。\r\n\r\n这四个字符类别分别为：\r\n1.大写字母：A,B,C...Z;\r\n2.小写字母：a,b,c...z;\r\n3.数字：0,1,2...9;\r\n4.特殊符号：~,!,@,#,$,%,^;\r\n\r\n给你一个密码，你的任务就是判断它是不是一个安全的密码。', '[{\'in\': \'15\\na1b2c3d4\\nLinle@ACM\\n^~^@^@!%\\nABCDEFDSDD\\nabdkjkjkjl\\nSKJFK4654\\nkdjfkl21ddf\\n#@$#21212&*&\\nADFDK##$%121\\n@#121ghhgSDF\\nfj145$#$#GFG\\n12@#$kjhkjnh\\n1212@#$ADFDD\\n121212545635\\n@#$@#%$^%^@#\\n\', \'out\': \'NO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\'}]', 1, 0, 0, '输入数据第一行包含一个数M，接下有M行，每行一个密码（长度最大可能为50），密码仅包括上面的四类字符。', '对于每个测试实例，判断这个密码是不是一个安全的密码，是的话输出YES，否则输出NO。', 4, 14, 'ymc', 1, '3\r\na1b2c3d4\r\nLinle@ACM\r\n^~^@^@!%\r\n', 'NO\r\nYES\r\nNO\r\n');
INSERT INTO `problem` VALUES (818, '汽车', '<p>设计一个汽车类Vehicle，它有车名和车颜色，由它派生出类Car和类Truck， 前者包含载客数，后者包含载重量。编写程序实现。</p>', '[{\'in\': \'car3 black 40\\ntruck2 yellow 500.6\\n\', \'out\': \"Car\'s name:car3\\nCar\'s color:black\\nCar\'s passengerNumber:40\\nTruck\'s name:truck2\\nTruck\'s color:yellow\\nTruck\'s carryingCapacity:500.6\\n\"}]', 1, 0, 0, '<p>输入有两行， 第一行为Car的名字，颜色，载客数 第二行为Truck的名字，颜色，载重量</p>', 'Car\'s name:**\r\nCar\'s color:**\r\nCar\'s passengerNumber:**\r\nTruck\'s name:**\r\nTruck\'s color:**\r\nTruck\'s carryingCapacity:**\r\n\r\n载重量，输出时保留小数1位。\r\n\r\n具体见样例\r\n\r\n', 4, 14, 'ymc', 1, 'car1 red 34\r\ntruck2 white 34.5\r\n', 'Car\'s name:car1\r\nCar\'s color:red\r\nCar\'s passengerNumber:34\r\nTruck\'s name:truck2\r\nTruck\'s color:white\r\nTruck\'s carryingCapacity:34.5\r\n');
INSERT INTO `problem` VALUES (819, 'Usb接口', '展示接口实现多态的概念。USB插槽就是现实中的接口。你可以把手机、相机、U盘都插在USB插槽上，\r\n而不用担心那个插槽是专门插哪个的，原因是做USB插槽的厂家和做各种设备的厂家都遵守了统一的规\r\n定，包括尺寸、排线等等。\r\n\r\nUsb接口如下：\r\ninterface Usb {\r\n	public abstract void start();// 开始工作\r\n\r\n	public abstract void stop();// 停止工作\r\n}\r\n\r\n定义一个计算机类：\r\nclass Computer {\r\n	public void useUsb(Usb usb) {// 体现多态\r\n		usb.start();\r\n		usb.stop();\r\n	}\r\n}\r\n\r\n再定义二个类：Phone和Camera。它们均要实现Usb接口。\r\n', '[{\'in\': \'\', \'out\': \'I am a Camera, starting!\\nI am a Camera, stopping!\\nI am a Phone, starting!\\nI am a Phone, stopping!\\n\'}]', 1, 0, 0, '没有输入。', '第一行，照相机插入Usb接口。\r\n第二行，拔出照相机。\r\n第三行，手机插入Usb接口。\r\n第四行，拔出手机。\r\n', 4, 14, 'ymc', 1, '无\r\n', 'I am a Camera, starting!\r\nI am a Camera, stopping!\r\nI am a Phone, starting!\r\nI am a Phone, stopping!\r\n');
INSERT INTO `problem` VALUES (820, '绝对值排序', '输入n(n<=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。', '[{\'in\': \'3 3 -4 2\\n4 0 1 2 -3\\n0\\n\', \'out\': \'-4 3 2\\n-3 2 1 0\\n\'}, {\'in\': \'5 -4 3 6 -7 2\\n4 -7 2 3 -4\\n4 -4 -2 -5 -8\\n0\\n\', \'out\': \'-7 6 -4 3 2\\n-7 -4 3 2\\n-8 -5 -4 -2\\n\'}]', 1, 0, 0, '输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n=0表示输入数据的结束，不做处理。 ', '对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。', 4, 14, 'ymc', 2, '3 3 -4 2\r\n4 0 1 2 -3\r\n0\r\n', '-4 3 2\r\n-3 2 1 0\r\n');
INSERT INTO `problem` VALUES (821, '混合布局', '混合布局示例。请做一个如下图所示的界面。\r\n\r\n\r\n\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n', 0, '', '');
INSERT INTO `problem` VALUES (822, '混合布局', '混合布局示例。请做一个如下图所示的界面。\r\n\r\n\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n', 0, '', '');
INSERT INTO `problem` VALUES (823, '使用FlowPane', 'FlowPane示例。请做一个如下图所示的界面。\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n', 0, '', '');
INSERT INTO `problem` VALUES (824, '使用GridPane', 'GridPane示例。请做一个如下图所示的界面。\r\n\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n', 0, '', '');
INSERT INTO `problem` VALUES (825, '使用BorderPane', '<p>边界布局示例。请做一个如下图所示的界面。</p>\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy', 0, '', '');
INSERT INTO `problem` VALUES (826, '在两个按钮上处理ActionEvent（二）', '给出在两个按钮上处理ActionEvent的代码。点击OK按钮时，标签就会显示消息“OK button clicked”；点击Cancel按钮时，标签就会显示消息“Cancel button clicked”。\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (827, '在两个按钮上处理ActionEvent（一）', '给出在两个按钮上处理ActionEvent的代码。点击OK按钮时，控制台就会显示消息“OK button clicked”；点击Cancel按钮时，控制台就会显示消息“Cancel button clicked”。\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (828, '控制一个圆的大小', '编写一个程序，使用两个按钮控制一个圆的大小。\r\n\r\n界面如下图所示。\r\n\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (829, '处理来自四个按钮的事件', '处理来自四个按钮的事件。点击“New”按钮，在控制台显示“Process New”；点击“Open”按钮，在控制台显示“Process Open”；点击“Save”按钮，在控制台显示“Process Save”；点击“Print”按钮，在控制台显示“Process Print”。\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (830, '菜单制作', '实现如下图所示的菜单。\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (831, '四则运算', '实现如下图所示的菜单， 并能完成加、减、乘、除四则运算。\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (832, '计算圆的面积（服务器） ', '<p>给出一个客户端程序和一个服务器程序。 客户端向服务器发送数据。服务器接收数据，并用它来生成一个结果，然后，将这个结果返回给客户端。 *在本例中，客户端发送的数据是圆的半径，服务器生成的结果是圆的面积，如下图所示。</p>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (833, '计算圆的面积（客户端） ', '给出一个客户端程序和一个服务器程序。\r\n\r\n客户端向服务器发送数据。服务器接收数据，并用它来生成一个结果，然后，将这个结果返回给客户端。\r\n\r\n*在本例中，客户端发送的数据是圆的半径，服务器生成的结果是圆的面积，如下图所示。 \r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (834, '逆序数字', '<p>输入一个整数值，返回这个数中数字逆序后的结果值。例如，给定数7631，函数返回1367。&nbsp;</p>', '[{\'in\': \'10\\n7631\\n101\\n51\\n123456\\n13579\\n246801\\n1463145\\n21942\\n423\\n12415\\n\', \'out\': \'1367\\n101\\n15\\n654321\\n97531\\n108642\\n5413641\\n24912\\n324\\n51421\\n\'}]', 1, 0, 0, '<p>第一行一个正整数T（T&lt;=10），表示有T组测试数据。以下T行，每行一个非负的整数N。你可以放心，输入的整数不会是10的倍数，即不会以0结尾。</p>', '<p>共T行，对于每组输入数据输出一行，即数字逆序后的结果值。</p>', 4, 14, 'ymc', 1, '3\r\n7631\r\n101\r\n51', '1367\r\n101\r\n15');
INSERT INTO `problem` VALUES (835, '杯子倒水\n', '<p>用Cup类表征杯子。 Cup类中定义了三个Field：</p>\r\n<p>（1）name，String类型，表征名字</p>\r\n<p>（2）volume，int类型，表征容积（也就是最大装水量）</p>\r\n<p>（3）water，int类型，表征当前装水量（大于等于0，小于等于容积）。</p>\r\n<p>三个方法及构造器：</p>\r\n<p>int getMaxIn(); //最大可倒入水量</p>\r\n<p>void addWater(int i); //i 正为倒入水 负为倒出水</p>\r\n<p>public void show(); //输出当前水量等信息</p>\r\n<pre>main方法如下：<br />public static void main(String args[]) {<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Cup a, b, c, e;<br /><br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a = new Cup(\"Red Cup\", 10, 2);<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b = new Cup(\"Blue Cup\", 10, 5);<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;c = new Cup(\"Green Cup\", 10, 0);<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e = new Cup(\"Big Cup\", 30, 20);<br /><br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Pour(e, a);<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Pour(e, b);<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Pour(e, c);<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Pour(a, c);<br /><br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a.show();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b.show();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;c.show();<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.show();<br />}<br /><br />要求：<br />（1）定义Cup类；<br />（2）写出被main方法所调用的Pour方法。<br />static void Pour(Cup x, Cup y); // 表示把x杯中的水，倒在y中，直到y杯满</pre>', '[{\'in\': \'\', \'out\': \"The Red Cup\'s volume of is 10, the water is 7.\\nThe Blue Cup is full!\\nThe Green Cup is full!\\nThe Big Cup is Empty!\\n\"}]', 1, 0, 0, '', '', 4, 14, 'ymc', 1, '', 'The Red Cup\'s volume of is 10, the water is 7.\r\nThe Blue Cup is full!\r\nThe Green Cup is full!\r\nThe Big Cup is Empty!\r\n');
INSERT INTO `problem` VALUES (836, '变位词', '检测两个单词是否互为变位词。\r\n如果在不计顺序的情况下两个单词包含完全相同的字母，则这两个词互为变位词。例如\"silent\"和\"listen\"为变位词。\r\n\r\n', '[{\'in\': \'aaabBb\\nbbbaaa\\n\', \'out\': \'YES\\n\'}, {\'in\': \'aaaBBBcdefghigklmnopqrstuvwxyz\\nbabaaacdefghigklMNOpqrstuvwxyz\\n\', \'out\': \'NO\\n\'}]', 1, 0, 0, '输入只有两行，每行一个字符串。\r\n\r\n字符串全部由字母构成。\r\n\r\n', '如果两个字符串互为变位词则输出\"YES\"并换行，否则输出\"NO\"并换行。\r\n\r\n注意：判断它们是否是变位词时，忽略字母的大小写。\r\n', 4, 14, 'ymc', 2, 'aaabBb\r\nbbbaaa\r\n', 'YES\r\n');
INSERT INTO `problem` VALUES (837, '代数方面：二次方程式', '<p>为二次方程式设计一个名为QuadraticEquation的类。这个类包括：</p>\r\n<p>代表三个系数的私有数据域a、b和c。</p>\r\n<p>一个参数为a、b和c的构造方法。</p>\r\n<p>还有其他一些方法。</p>\r\n<p>&nbsp;</p>\r\n<p>实现这个类，编写一个测试程序，提示用户输入a、b和c的值，然后显示判别式的结果。</p>\r\n<p>如果判别式为正数，显示两个根（按先小后大）；</p>\r\n<p>如果判别式为0，显示一个根；</p>\r\n<p>否则，显示&ldquo;The equation has no roots&rdquo;。（这个方程无根）。</p>\r\n<p>&nbsp;</p>', '[{\'in\': \'2\\n1 4 5\\n2 10 4\\n\', \'out\': \'Please input a1 b1 and c1\\n-4.00\\nThe equation has no roots\\nPlease input a2 b2 and c2\\n68.00\\n-4.56 -0.44\\n\'}, {\'in\': \'1\\n-3 2 6\\n\', \'out\': \'Please input a1 b1 and c1\\n76.00\\n-1.12 1.79\\n\'}]', 1, 0, 0, '<p>先输入一个整数n，表示需要测试的组数。</p>\r\n<p>然后有n行，每行输入一组a，b，c。</p>', '<p>对于每组a、b、c，&nbsp; 输出对应二次方程式的判别式和根（判别式和根分别在两行里输出）。</p>', 4, 14, 'ymc', 2, '3\r\n1 2 1\r\n1 2 0\r\n1 0 1\r\n', 'Please input a1 b1 and c1\r\n0.00\r\n-1.00\r\nPlease input a2 b2 and c2\r\n4.00\r\n-2.00 0.00\r\nPlease input a3 b3 and c3\r\n-4.00\r\nThe equation has no roots\r\n');
INSERT INTO `problem` VALUES (838, '两个消息交替出现', '编写一个程序，当点击按钮时，面板上交替显示两个消息“Java is fun”和“Java is powerful”。', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (839, '使用鼠标设置背景色', '<pre>编写一个程序，设置面板的背景颜色为白色。当按下鼠标左键时，背景转变为黑色，当松开鼠标左键时，背景重新变为白色。\r\n\r\n如下图：\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (840, '交通信号灯', '编写一个程序，模拟交通信号灯。程序让用户从红、黄、绿三色灯中选择一种。当选择一个单选按钮后，相应的灯被打开，并且一次只能亮一种灯。程序开始时所有的灯都不亮。 效果如下图：\r\n\r\n注意：单选框放在一组中，在组中只能选择一种颜色来控制交通信号灯。\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (841, '动态设置按钮属性', '编写一个程序，允许用户动态地设置按钮文本属性：水平对齐方式horizontalAlignment、垂直对齐方式verticalAlignment、水平文本对齐方式horizontalTextAlignment和垂直文本对齐方式verticalTextAlignment。\r\n\r\n程序需要使用按钮、标签、组合框.定义两个面板，使用BorderLayout的CENTER,SOUTH布局.\r\n（1）中间面板是一个按钮。\r\n\r\n（2）底部面板添加两个组合框，分别设置文字的水平和竖直对齐方式。\r\n\r\n效果如下图：\r\n\r\n图1：程序初始状态\r\n图2：水平居中，竖直居中\r\n图3：水平居右，竖直居下\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (842, '动态设置按钮属性 进阶', '程序需要使用按钮、标签、文本域、组合框、单选按钮、复选框.定义三个面板，使用BorderLayout的NORTH,CENTER,SOUTH布局.\r\n（1） 顶部面板添加三个单选按钮，分别设置中间面板按钮的文本颜色。然后增加两个复选框，分别设置按钮文字的粗体和倾斜属性。然后添加一个设置字体大小的组合框，字体大小为5-100。然后添加设置字体的组合框，字体有楷体、宋体、黑体、华文行楷、微软雅黑等。然后增加两个文本框，一个自定义设置字体大小，一个自定义设置显示文本。\r\n\r\n（2）中间面板是一个按钮。\r\n\r\n（3）底部面板添加两个组合框，分别设置文字的水平和竖直对齐方式。\r\n\r\n效果如下图：\r\n\r\n图1：程序初始状态\r\n图2：设置效果1\r\n图3：设置效果2\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (843, '游戏：显示一个棋盘', '编写一个程序，显示一个棋盘，棋盘中的每一个白色格和黑色格都是将背景色设置为白色或者黑色的JButton，如下图所示。', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (844, '显示标签', '编写一个程序，实现在四个标签上显示四行文本，如图12-15a所示。在每个标签上添加线边界。', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (845, '计时器', '设计一个图形用户界面的计时器。该计时器显示计时的时间，并有三个按钮：START，表示开始计时；STOP，停止计时；RESET，重置时间。', '[]', 1, 0, 0, '无', '无', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (846, '使用BorderLayout管理器', '改写前面的程序，创建同样的用户界面，但是在框架上不使用FlowLayout，而是采用BorderLayout。将一个面板放在框架的中央，而将另一个放在框架的南区。', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (847, '流式布局（FlowLayout）', '流式布局示例。请做一个如下图所示的界面。\r\n\r\n\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (848, '图形界面布局之GridLayout', '使用GridLayout布局。效果下图。显示九个按钮，中间按钮为学生姓名。\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n', 0, '', '');
INSERT INTO `problem` VALUES (849, '网格布局（GridLayout）', '<p>网格布局示例。请做一个如下图所示的界面。</p>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (850, '图形界面布局之BorderLayout', '使用BorderLayout布局。效果下图。显示九个按钮，按钮上的文本按照图示内容。 \r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy\r\n', 0, '', '');
INSERT INTO `problem` VALUES (851, '多层选择', '参考例图，做出如下效果\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'lzy', 0, '', '');
INSERT INTO `problem` VALUES (852, '记事本程序（一）', '<p>编写一个程序，模拟电脑自带的记事本程序，实现记事本程序的菜单栏和文本框。自动换行和状态栏都是单选按钮菜单JCheckBoxMenuItem。 效果如下图：</p>\r\n<center><img src=\"http://www.chaoy.com/jsb/acm/11-1.jpg\" alt=\"\" /></center><center><strong>图1 程序初始状态</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/11-2.jpg\" alt=\"\" /></center><center><strong>图2 单击文件菜单</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/11-3.jpg\" alt=\"\" /></center><center><strong>图3 单击格式菜单</strong></center>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (853, '记事本程序（二）', '<p>编写一个程序，模拟电脑自带的记事本程序，在实现记事本程序(一）的基础上，实现菜单栏菜单项文字字体（微软雅黑）和大小（16）设置，并为相关菜单项添加快捷键。具体可以参照电脑自带记事本程序。 效果如下图：</p>\r\n<center><img src=\"http://www.chaoy.com/jsb/acm/12-1.jpg\" alt=\"\" /></center><center><strong>图1 单击文件菜单</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/12-2.jpg\" alt=\"\" /></center><center><strong>图2 单击编辑菜单</strong></center>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (854, '记事本程序（三）', '<p>编写一个程序，模拟电脑自带的记事本程序，在实现记事本程序(二）的基础上，实现一些基本菜单功能。比如：文本的拷贝、剪切、粘贴、全选和换行。</p>\r\n<p>文本域JTextera的copy,cut(),paste(),selectAll()实现复制、剪切、粘贴和全选功能，setLineWrap(false/true)实现文本是否换行(需要实现滚动条功能）.</p>\r\n<p>效果如下图：</p>\r\n<center><img src=\"http://www.chaoy.com/jsb/acm/13-1.jpg\" alt=\"\" /></center><center><strong>图1 全选操作</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/13-2.jpg\" alt=\"\" /></center><center><strong>图2 全选结果</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/13-3.jpg\" alt=\"\" /></center><center><strong>图3 复制文字</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/13-4.jpg\" alt=\"\" /></center><center><strong>图4 粘贴文字</strong></center>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (855, '记事本程序（四）', '<p>编写一个程序，模拟电脑自带的记事本程序，在实现记事本程序(三）的基础上，实现文本查找和替换的功能。</p>\r\n<p>效果如下图：</p>\r\n<center><img src=\"http://www.chaoy.com/jsb/acm/14-1.jpg\" alt=\"\" /></center><center><strong>图1 查找文字</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/14-2.jpg\" alt=\"\" /></center><center><strong>图2 查找结果</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/14-3.jpg\" alt=\"\" /></center><center><strong>图3 替换文字</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/14-4.jpg\" alt=\"\" /></center><center><strong>图4 替换结果</strong></center>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (856, '记事本程序（五）', '<p>编写一个程序，模拟电脑自带的记事本程序，在实现记事本程序(四）的基础上，实现状态栏的显示与隐藏。</p>\r\n<p>效果如下图：</p>\r\n<center><img src=\"http://www.chaoy.com/jsb/acm/15-1.jpg\" alt=\"\" /></center><center><strong>图1 程序初始状态</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/15-2.jpg\" alt=\"\" /></center><center><strong>图2 隐藏状态栏</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/15-3.jpg\" alt=\"\" /></center><center><strong>图3 重新显示状态栏</strong></center>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (857, '记事本程序（六）', '<p>编写一个程序，模拟电脑自带的记事本程序，在实现记事本程序(五）的基础上，实现文件的新建、打开、保存、系统退出。</p>\r\n<p>效果如下图：</p>\r\n<center><img src=\"http://www.chaoy.com/jsb/acm/16-1.png\" alt=\"\" /></center><center><strong>图1 打开文件</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/16-2.png\" alt=\"\" /></center><center><strong>图2 打开文件效果</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/16-3.png\" alt=\"\" /></center><center><strong>图3 文本保存</strong></center><center><img src=\"http://www.chaoy.com/jsb/acm/16-4.png\" alt=\"\" /></center><center><strong>图3 文本保存效果</strong></center>', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (858, '记事本程序（七）', '编写一个程序，模拟电脑自带的记事本程序，在实现记事本程序(六）的基础上，实现文本域操作的撤销，各操作（不只有复制\\全选)状态显示和关于记事本对话框实现，初步完善记事本程序。\r\n\r\n界面如下面一些图：\r\n\r\n', '[]', 1, 0, 0, '', '', 4, 14, 'ymc', 0, '', '');
INSERT INTO `problem` VALUES (859, '害死人不偿命的(3n+1)猜想', '卡拉兹(Callatz)猜想：\n\n对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……\n\n我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？\n\n', '[{\'in\': \'3\\n\', \'out\': \'5\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，即给出正整数 n 的值。\n\n', ' 输出从 n 计算到 1 需要的步数。\n\n', 8, 16, 'pat', 1, '3\n', '5\n');
INSERT INTO `problem` VALUES (860, '写出这个数', '读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。\n\n', '[{\'in\': \'1234567890987654321123456789\\n\', \'out\': \'yi san wu\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10^{100}。\n\n', ' 在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。\n\n', 8, 16, 'pat', 1, '1234567890987654321123456789\n', 'yi san wu\n');
INSERT INTO `problem` VALUES (861, '我要通过！', '“答案正确”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“答案正确”大派送 —— 只要读入的字符串满足下列条件，系统就输出“答案正确”，否则输出“答案错误”。\n\n得到“答案正确”的条件是：\n\n1. 字符串中必须仅有 P、 A、 T这三种字符，不可以包含其它字符；\n2. 任意形如 xPATx 的字符串都可以获得“答案正确”，其中 x 或者是空字符串，或者是仅由字母 A 组成的字符串；\n3. 如果 aPbTc 是正确的，那么 aPbATca 也是正确的，其中 a、 b、 c 均或者是空字符串，或者是仅由字母 A 组成的字符串。\n\n现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“答案正确”的。\n\n', '[{\'in\': \'8\\nPAT\\nPAAT\\nAAPATAA\\nAAPAATAAAA\\nxPATx\\nPT\\nWhatever\\nAPAAATAA\\n\', \'out\': \'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 n (<10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。\n\n', ' 每个字符串的检测结果占一行，如果该字符串可以获得“答案正确”，则输出 YES，否则输出 NO。\n\n', 8, 16, 'pat', 1, '8\nPAT\nPAAT\nAAPATAA\nAAPAATAAAA\nxPATx\nPT\nWhatever\nAPAAATAA\n', 'YES\nYES\nYES\nYES\nNO\nNO\nNO\nNO\n');
INSERT INTO `problem` VALUES (862, '成绩排名', '读入 n（0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。\n\n', '[{\'in\': \'3\\nJoe Math990112 89\\nMike CS991301 100\\nMary EE990830 95\\n\', \'out\': \'Mike CS991301\\nJoe Math990112\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，格式为\n\n第 1 行：正整数 n\n第 2 行：第 1 个学生的姓名 学号 成绩\n第 3 行：第 2 个学生的姓名 学号 成绩\n  ... ... ...\n第 n+1 行：第 n 个学生的姓名 学号 成绩\n\n其中姓名和学号均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。\n\n', ' 对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。\n\n', 8, 16, 'pat', 1, '3\nJoe Math990112 89\nMike CS991301 100\nMary EE990830 95\n', 'Mike CS991301\nJoe Math990112\n');
INSERT INTO `problem` VALUES (863, '继续(3n+1)猜想', '卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。\n\n当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 n=3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 n=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 n 为“关键数”，如果 n 不能被数列中的其他数字所覆盖。\n\n现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。\n\n', '[{\'in\': \'6\\n3 5 6 7 8 11\\n\', \'out\': \'7 6\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，第 1 行给出一个正整数 K (<100)，第 2 行给出 K 个互不相同的待验证的正整数 n (1<nle 100)的值，数字间用空格隔开。\n\n', ' 每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。\n\n', 8, 16, 'pat', 1, '6\n3 5 6 7 8 11\n', '7 6\n');
INSERT INTO `problem` VALUES (864, '换个格式输出整数', '让我们用字母 B 来表示“百”、字母 S 表示“十”，用 12...n 来表示不为零的个位数字 n（<10），换个格式来输出任一个不超过 3 位的正整数。例如 234 应该被输出为 BBSSS1234，因为它有 2 个“百”、3 个“十”、以及个位的 4。\n\n', '[{\'in\': \'234\\n\', \'out\': \'BBSSS1234\\n\'}, {\'in\': \'23\\n\', \'out\': \'SS123\\n\'}]', 1, 0, 0, ' 每个测试输入包含 1 个测试用例，给出正整数 n（<1000）。\n\n', ' 每个测试用例的输出占一行，用规定的格式输出 n。\n\n', 8, 16, 'pat', 2, '234\n', 'BBSSS1234\n');
INSERT INTO `problem` VALUES (865, '素数对猜想', '让我们定义dn为：dn = p{n+1}-pn，其中pi是第i个素数。显然有d1 = 1，且对于n1有dn是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。\n\n现给定任意正整数N(<10^5)，请计算不超过N的满足猜想的素数对的个数。\n\n\n', '[{\'in\': \'20\\n\', \'out\': \'4\\n\'}]', 1, 0, 0, ' 输入格式:\n\n输入在一行给出正整数N。\n\n', ' 输出格式:\n\n在一行中输出不超过N的满足猜想的素数对的个数。\n\n', 8, 16, 'pat', 1, '20\n', '4\n');
INSERT INTO `problem` VALUES (866, '数组元素循环右移问题', '一个数组A中存有N（0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（ge 0）个位置，即将A中的数据由（A0 A1 cdots A{N-1}）变换为（A{N-M} cdots A{N-1} A0 A1 cdots A{N-M-1}）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？\n\n', '[{\'in\': \'6 2\\n1 2 3 4 5 6\\n\', \'out\': \'5 6 1 2 3 4\\n\'}]', 1, 0, 0, ' 输入格式:\n\n每个输入包含一个测试用例，第1行输入N（1le N le 100）和M（ge 0）；第2行输入N个整数，之间用空格分隔。\n\n', ' 输出格式:\n\n在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。\n\n', 8, 16, 'pat', 1, '6 2\n1 2 3 4 5 6\n', '5 6 1 2 3 4\n');
INSERT INTO `problem` VALUES (867, '说反话', '给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。\n\n', '[{\'in\': \'Hello World Here I Come\\n\', \'out\': \'Come I Here World Hello\\n\'}]', 1, 0, 0, ' 测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。\n\n', ' 每个测试用例的输出占一行，输出倒序后的句子。\n\n', 8, 16, 'pat', 1, 'Hello World Here I Come\n', 'Come I Here World Hello\n');
INSERT INTO `problem` VALUES (868, '一元多项式求导', '设计函数求一元多项式的导数。（注：x^n（n为整数）的一阶导数为n x^{n-1}。）\n\n', '[{\'in\': \'3 4 -5 2 6 1 -2 0\\n\', \'out\': \'12 3 -10 1 6 0\\n\'}]', 1, 0, 0, ' 输入格式:\n\n以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过 1000 的整数）。数字间以空格分隔。\n\n', ' 输出格式:\n\n以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是 0，但是表示为 0\n0。\n\n', 8, 16, 'pat', 1, '3 4 -5 2 6 1 -2 0\n', '12 3 -10 1 6 0\n');
INSERT INTO `problem` VALUES (869, 'A+B 和 C', '给定区间 -2^{31}, 2^{31} 内的 3 个整数 A、B 和 C，请判断 A+B 是否大于 C。\n\n', '[{\'in\': \'4\\n1 2 3\\n2 3 4\\n2147483647 0 2147483646\\n0 -2147483648 -2147483647\\n\', \'out\': \'Case #1: false\\nCase #2: true\\nCase #3: true\\nCase #4: false\\n\'}]', 1, 0, 0, ' 输入第 1 行给出正整数 T (le 10)，是测试用例的个数。随后给出 T 组测试用例，每组占一行，顺序给出 A、B 和 C。整数间以空格分隔。\n\n', ' 对每组测试用例，在一行中输出 Case X: true 如果 A+BC，否则输出 Case X: false，其中 X 是测试用例的编号（从 1 开始）。\n\n', 8, 16, 'pat', 1, '4\n1 2 3\n2 3 4\n2147483647 0 2147483646\n0 -2147483648 -2147483647\n', 'Case #1: false\nCase #2: true\nCase #3: true\nCase #4: false\n');
INSERT INTO `problem` VALUES (870, '数字分类', '给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：\n\n- A1 = 能被 5 整除的数字中所有偶数的和；\n- A2 = 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 n1-n2+n3-n4cdots；\n- A3 = 被 5 除后余 2 的数字的个数；\n- A4 = 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；\n- A5 = 被 5 除后余 4 的数字中最大数字。\n\n', '[{\'in\': \'13 1 2 3 4 5 6 7 8 9 10 20 16 18\\n\', \'out\': \'30 11 2 9.7 9\\n\'}, {\'in\': \'8 1 2 4 5 6 7 9 16\\n\', \'out\': \'N 11 2 N 9\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。\n\n', ' 对给定的 N 个正整数，按题目要求计算 A1~A5 并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。\n\n若其中某一类数字不存在，则在相应位置输出 N。\n\n', 8, 16, 'pat', 2, '13 1 2 3 4 5 6 7 8 9 10 20 16 18\n', '30 11 2 9.7 9\n');
INSERT INTO `problem` VALUES (871, '数素数', '令 Pi 表示第 i 个素数。现任给两个正整数 M le N le 10^4，请输出 PM 到 PN 的所有素数。\n\n', '[{\'in\': \'5 27\\n\', \'out\': \'11 13 17 19 23 29 31 37 41 43\\n47 53 59 61 67 71 73 79 83 89\\n97 101 103\\n\'}]', 1, 0, 0, ' 输入在一行中给出 M 和 N，其间以空格分隔。\n\n', ' 输出从 PM 到 PN 的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '5 27\n', '11 13 17 19 23 29 31 37 41 43\n47 53 59 61 67 71 73 79 83 89\n97 101 103\n');
INSERT INTO `problem` VALUES (872, '福尔摩斯的约会', '大侦探福尔摩斯接到一张奇怪的字条：我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&hgsfdk d&Hyscvnm。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间星期四 14:04，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 D，代表星期四；第 2 对相同的字符是 E ，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母 A 到 N 表示）；后面两字符串第 1 对相同的英文字母 s 出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。\n\n', '[{\'in\': \'3485djDkxh4hhGE \\n2984akDfkkkkggEdsb \\ns&hgsfdk \\nd&Hyscvnm\\n\', \'out\': \'THU 14:04\\n\'}]', 1, 0, 0, ' 输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。\n\n', ' 在一行中输出约会的时间，格式为 DAY HH:MM，其中 DAY 是某星期的 3 字符缩写，即 MON 表示星期一，TUE 表示星期二，WED 表示星期三，THU 表示星期四，FRI 表示星期五，SAT 表示星期六，SUN 表示星期日。题目输入保证每个测试存在唯一解。\n\n', 8, 16, 'pat', 1, '3485djDkxh4hhGE \n2984akDfkkkkggEdsb \ns&hgsfdk \nd&Hyscvnm\n', 'THU 14:04\n');
INSERT INTO `problem` VALUES (873, '部分A+B', '正整数 A 的“DA（为 1 位整数）部分”定义为由 A 中所有 DA 组成的新整数 PA。例如：给定 A = 3862767，DA = 6，则 A 的“6 部分”PA 是 66，因为 A 中有 2 个 6。\n\n现给定 A、DA、B、DB，请编写程序计算 PA + PB。\n\n', '[{\'in\': \'3862767 6 13530293 3\\n\', \'out\': \'399\\n\'}, {\'in\': \'3862767 1 13530293 8\\n\', \'out\': \'0\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 A、DA、B、DB，中间以空格分隔，其中 0 < A, B < 10^{10}。\n\n', ' 在一行中输出 PA + PB 的值。\n\n', 8, 16, 'pat', 2, '3862767 6 13530293 3\n', '399\n');
INSERT INTO `problem` VALUES (874, 'A除以B', '本题要求计算 A/B，其中 A 是不超过 1000 位的正整数，B 是 1 位正整数。你需要输出商数 Q 和余数 R，使得 A = B times Q + R 成立。\n\n', '[{\'in\': \'123456789050987654321 7\\n\', \'out\': \'17636684150141093474 3\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 A 和 B，中间以 1 空格分隔。\n\n', ' 在一行中依次输出 Q 和 R，中间以 1 空格分隔。\n\n', 8, 16, 'pat', 1, '123456789050987654321 7\n', '17636684150141093474 3\n');
INSERT INTO `problem` VALUES (875, '锤子剪刀布', '大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：\n\n\nFigCJB.jpg(~/724da598-b37f-4f1f-99b4-71459654ce3a.jpg)\n\n\n现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。\n\n', '[{\'in\': \'10\\nC J\\nJ B\\nC B\\nB B\\nB C\\nC C\\nC B\\nJ B\\nB C\\nJ J\\n\', \'out\': \'5 3 2\\n2 3 5\\nB B\\n\'}]', 1, 0, 0, ' 输入第 1 行给出正整数 N（le 10^5），即双方交锋的次数。随后 N 行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C 代表“锤子”、J 代表“剪刀”、B 代表“布”，第 1 个字母代表甲方，第 2 个代表乙方，中间有 1 个空格。\n\n', ' 输出第 1、2 行分别给出甲、乙的胜、平、负次数，数字间以 1 个空格分隔。第 3 行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有 1 个空格。如果解不唯一，则输出按字母序最小的解。\n\n', 8, 16, 'pat', 1, '10\nC J\nJ B\nC B\nB B\nB C\nC C\nC B\nJ B\nB C\nJ J\n', '5 3 2\n2 3 5\nB B\n');
INSERT INTO `problem` VALUES (876, '数字黑洞', '给定任一个各位数字不完全相同的 4 位正整数，如果我们先把 4 个数字按非递增排序，再按非递减排序，然后用第 1 个数字减第 2 个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的 6174，这个神奇的数字也叫 Kaprekar 常数。\n\n例如，我们从6767开始，将得到\n\n7766 - 6677 = 1089\n9810 - 0189 = 9621\n9621 - 1269 = 8352\n8532 - 2358 = 6174\n7641 - 1467 = 6174\n... ...\n\n\n现给定任意 4 位正整数，请编写程序演示到达黑洞的过程。\n\n', '[{\'in\': \'6767\\n\', \'out\': \'7766 - 6677 = 1089\\n9810 - 0189 = 9621\\n9621 - 1269 = 8352\\n8532 - 2358 = 6174\\n\'}, {\'in\': \'2222\\n\', \'out\': \'2222 - 2222 = 0000\\n\'}]', 1, 0, 0, ' 输入给出一个 (0, 10^4) 区间内的正整数 N。\n\n', ' 如果 N 的 4 位数字全相等，则在一行内输出 N - N = 0000；否则将计算的每一步在一行内输出，直到 6174 作为差出现，输出格式见样例。注意每个数字按 4 位数格式输出。\n\n', 8, 16, 'pat', 2, '6767\n', '7766 - 6677 = 1089\n9810 - 0189 = 9621\n9621 - 1269 = 8352\n8532 - 2358 = 6174\n');
INSERT INTO `problem` VALUES (877, '月饼', '月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。\n\n注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45/2 = 94.5（亿元）。\n\n', '[{\'in\': \'3 20\\n18 15 10\\n75 72 45\\n\', \'out\': \'94.50\\n\'}]', 1, 0, 0, ' 每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 D 表示市场最大需求量。随后一行给出 N 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 N 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。\n\n', ' 对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。\n\n', 8, 16, 'pat', 1, '3 20\n18 15 10\n75 72 45\n', '94.50\n');
INSERT INTO `problem` VALUES (878, '个位数统计', '给定一个 k 位整数 N = d{k-1}10^{k-1} + cdots + d1 10^1 + d0 (0le di le 9, i=0,cdots ,k-1, d{k-1}0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 N = 100311，则有 2 个 0，3 个 1，和 1 个 3。\n\n', '[{\'in\': \'100311\\n\', \'out\': \'0:2\\n1:3\\n3:1\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 N。\n\n', ' 对 N 中每一种不同的个位数字，以 D:M 的格式在一行中输出该位数字 D 及其在 N 中出现的次数 M。要求按 D 的升序输出。\n\n', 8, 16, 'pat', 1, '100311\n', '0:2\n1:3\n3:1\n');
INSERT INTO `problem` VALUES (879, 'D进制的A+B', '输入两个非负 10 进制整数 A 和 B (le 2^{30} -1)，输出 A+B 的 D (1 < D le 10)进制数。\n\n', '[{\'in\': \'123 456 8\\n\', \'out\': \'1103\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 3 个整数 A、B 和 D。\n\n', ' 输出 A+B 的 D 进制数。\n\n', 8, 16, 'pat', 1, '123 456 8\n', '1103\n');
INSERT INTO `problem` VALUES (880, '组个最小数', '给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。\n\n现给定数字，请编写程序输出能够组成的最小的数。\n\n', '[{\'in\': \'2 2 0 0 0 3 0 0 1 0\\n\', \'out\': \'10015558\\n\'}]', 1, 0, 0, ' 输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。\n\n', ' 在一行中输出能够组成的最小的数。\n\n', 8, 16, 'pat', 1, '2 2 0 0 0 3 0 0 1 0\n', '10015558\n');
INSERT INTO `problem` VALUES (881, '科学计数法', '科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式 +-1-9.0-9+E+-0-9+，即数字的整数部分只有 1 位，小数部分至少有 1 位，该数字及其指数部分的正负号即使对正数也必定明确给出。\n\n现以科学计数法的格式给出实数 A，请编写程序按普通数字表示法输出 A，并保证所有有效位都被保留。\n\n', '[{\'in\': \'+1.23400E-03\\n\', \'out\': \'0.00123400\\n\'}, {\'in\': \'-1.2E+10\\n\', \'out\': \'-12000000000\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例，即一个以科学计数法表示的实数 A。该数字的存储长度不超过 9999 字节，且其指数的绝对值不超过 9999。\n\n', ' 对每个测试用例，在一行中按普通数字表示法输出 A，并保证所有有效位都被保留，包括末尾的 0。\n\n', 8, 16, 'pat', 2, '+1.23400E-03\n', '0.00123400\n');
INSERT INTO `problem` VALUES (882, '反转链表', '给定一个常数 K 以及一个单链表 L，请编写程序将 L 中每 K 个结点反转。例如：给定 L 为 1→2→3→4→5→6，K 为 3，则输出应该为 3→2→1→6→5→4；如果 K 为 4，则输出应该为 4→3→2→1→5→6，即最后不到 K 个元素不反转。\n\n', '[{\'in\': \'00100 6 4\\n00000 4 99999\\n00100 1 12309\\n68237 6 -1\\n33218 3 00000\\n99999 5 68237\\n12309 2 33218\\n\', \'out\': \'00000 4 33218\\n33218 3 12309\\n12309 2 00100\\n00100 1 99999\\n99999 5 68237\\n68237 6 -1\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例第 1 行给出第 1 个结点的地址、结点总个数正整数 N (le 10^5)、以及正整数 K (le N)，即要求反转的子链结点的个数。结点的地址是 5 位非负整数，NULL 地址用 -1 表示。\n\n接下来有 N 行，每行格式为：\n\nAddress Data Next\n\n\n其中 Address 是结点地址，Data 是该结点保存的整数数据，Next 是下一结点的地址。\n\n', ' 对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。\n\n', 8, 16, 'pat', 1, '00100 6 4\n00000 4 99999\n00100 1 12309\n68237 6 -1\n33218 3 00000\n99999 5 68237\n12309 2 33218\n', '00000 4 33218\n33218 3 12309\n12309 2 00100\n00100 1 99999\n99999 5 68237\n68237 6 -1\n');
INSERT INTO `problem` VALUES (883, '程序运行时间', '要获得一个 C 语言程序的运行时间，常用的方法是调用头文件 time.h，其中提供了 clock() 函数，可以捕捉从程序开始运行到 clock() 被调用时所耗费的时间。这个时间单位是 clock tick，即“时钟打点”。同时还有一个常数 CLKTCK，给出了机器时钟每秒所走的时钟打点数。于是为了获得一个函数 f 的运行时间，我们只要在调用 f 之前先调用 clock()，获得一个时钟打点数 C1；在 f 执行完成后再调用 clock()，获得另一个时钟打点数 C2；两次获得的时钟打点数之差 (C2-C1) 就是 f 运行所消耗的时钟打点数，再除以常数 CLKTCK，就得到了以秒为单位的运行时间。\n\n这里不妨简单假设常数 CLKTCK 为 100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。\n\n', '[{\'in\': \'123 4577973\\n\', \'out\': \'12:42:59\\n\'}]', 1, 0, 0, ' 输入在一行中顺序给出 2 个整数 C1 和 C2。注意两次获得的时钟打点数肯定不相同，即 C1 < C2，并且取值在 0, 10^7。\n\n', ' 在一行中输出被测函数运行的时间。运行时间必须按照 hh:mm:ss（即2位的 时:分:秒）格式输出；不足 1 秒的时间四舍五入到秒。\n\n', 8, 16, 'pat', 1, '123 4577973\n', '12:42:59\n');
INSERT INTO `problem` VALUES (884, '打印沙漏', '本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“”，要求按下列格式打印\n\n\n \n  \n \n\n\n\n所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。\n\n给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。\n\n\n', '[{\'in\': \'19 *\\n\', \'out\': \'*****\\n ***\\n  *\\n ***\\n*****\\n2\\n\'}]', 1, 0, 0, ' 输入格式:\n\n输入在一行给出1个正整数N（le1000）和一个符号，中间以空格分隔。\n\n', ' 输出格式:\n\n首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。\n\n', 8, 16, 'pat', 1, '19 *\n', '*****\n ***\n  *\n ***\n*****\n2\n');
INSERT INTO `problem` VALUES (885, '人口普查', '某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。\n\n这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。\n\n', '[{\'in\': \'5\\nJohn 2001/05/12\\nTom 1814/09/06\\nAnn 2121/01/30\\nJames 1814/09/05\\nSteve 1967/11/20\\n\', \'out\': \'3 Tom John\\n\'}]', 1, 0, 0, ' 输入在第一行给出正整数 N，取值在(0, 10^5；随后 N 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 yyyy/mm/dd（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。\n\n', ' 在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。\n\n', 8, 16, 'pat', 1, '5\nJohn 2001/05/12\nTom 1814/09/06\nAnn 2121/01/30\nJames 1814/09/05\nSteve 1967/11/20\n', '3 Tom John\n');
INSERT INTO `problem` VALUES (886, '旧键盘', '旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及实际被输入的文字，请你列出肯定坏掉的那些键。\n\n', '[{\'in\': \'7_This_is_a_test\\n_hs_s_a_es\\n\', \'out\': \'7TI\\n\'}]', 1, 0, 0, ' 输入在 2 行中分别给出应该输入的文字、以及实际被输入的文字。每段文字是不超过 80 个字符的串，由字母 A-Z（包括大、小写）、数字 0-9、以及下划线 （代表空格）组成。题目保证 2 个字符串均非空。\n\n', ' 按照发现顺序，在一行中输出坏掉的键。其中英文字母只输出大写，每个坏键只输出一次。题目保证至少有 1 个坏键。\n\n', 8, 16, 'pat', 1, '7_This_is_a_test\n_hs_s_a_es\n', '7TI\n');
INSERT INTO `problem` VALUES (887, '完美数列', '给定一个正整数数列，和正整数 p，设这个数列中的最大值是 M，最小值是 m，如果 M le mp，则称这个数列是完美数列。\n\n现在给定参数 p 和一些正整数，请你从中选择尽可能多的数构成一个完美数列。\n\n', '[{\'in\': \'10 8\\n2 3 20 4 5 1 6 7 8 9\\n\', \'out\': \'8\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数 N 和 p，其中 N（le 10^5）是输入的正整数的个数，p（le 10^9）是给定的参数。第二行给出 N 个正整数，每个数不超过 10^9。\n\n', ' 在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。\n\n', 8, 16, 'pat', 1, '10 8\n2 3 20 4 5 1 6 7 8 9\n', '8\n');
INSERT INTO `problem` VALUES (888, '查验身份证', '一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：\n\n首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值Z；最后按照以下关系对应Z值与校验码M的值：\n\nZ：0 1 2 3 4 5 6 7 8 9 10\nM：1 0 X 9 8 7 6 5 4 3 2\n\n现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。\n\n', '[{\'in\': \'4\\n320124198808240056\\n12010X198901011234\\n110108196711301866\\n37070419881216001X\\n\', \'out\': \'12010X198901011234\\n110108196711301866\\n37070419881216001X\\n\'}, {\'in\': \'2\\n320124198808240056\\n110108196711301862\\n\', \'out\': \'All passed\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数N（le 100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。\n\n', ' 按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出All passed。\n\n', 8, 16, 'pat', 2, '4\n320124198808240056\n12010X198901011234\n110108196711301866\n37070419881216001X\n', '12010X198901011234\n110108196711301866\n37070419881216001X\n');
INSERT INTO `problem` VALUES (889, '挖掘机技术哪家强', '为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。\n\n', '[{\'in\': \'6\\n3 65\\n2 80\\n1 100\\n2 70\\n3 40\\n3 0\\n\', \'out\': \'2 150\\n\'}]', 1, 0, 0, ' 输入在第 1 行给出不超过 10^5 的正整数 N，即参赛人数。随后 N 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。\n\n', ' 在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。\n\n', 8, 16, 'pat', 1, '6\n3 65\n2 80\n1 100\n2 70\n3 40\n3 0\n', '2 150\n');
INSERT INTO `problem` VALUES (890, '旧键盘打字', '旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及坏掉的那些键，打出的结果文字会是怎样？\n\n', '[{\'in\': \'7+IE.\\n7_This_is_a_test.\\n\', \'out\': \'_hs_s_a_tst\\n\'}]', 1, 0, 0, ' 输入在 2 行中分别给出坏掉的那些键、以及应该输入的文字。其中对应英文字母的坏键以大写给出；每段文字是不超过 10^5 个字符的串。可用的字符包括字母 a-z, A-Z、数字 0-9、以及下划线 （代表空格）、,、.、-、+（代表上档键）。题目保证第 2 行输入的文字串非空。\n\n注意：如果上档键坏掉了，那么大写的英文字母无法被打出。\n\n', ' 在一行中输出能够被打出的结果文字。如果没有一个字符能被打出，则输出空行。\n\n', 8, 16, 'pat', 1, '7+IE.\n7_This_is_a_test.\n', '_hs_s_a_tst\n');
INSERT INTO `problem` VALUES (891, '有理数四则运算', '本题要求编写程序，计算 2 个有理数的和、差、积、商。\n\n', '[{\'in\': \'2/3 -4/2\\n\', \'out\': \'2/3 + (-2) = (-1 1/3)\\n2/3 - (-2) = 2 2/3\\n2/3 * (-2) = (-1 1/3)\\n2/3 / (-2) = (-1/3)\\n\'}, {\'in\': \'5/3 0/6\\n\', \'out\': \'1 2/3 + 0 = 1 2/3\\n1 2/3 - 0 = 1 2/3\\n1 2/3 * 0 = 0\\n1 2/3 / 0 = Inf\\n\'}]', 1, 0, 0, ' 输入在一行中按照 a1/b1 a2/b2 的格式给出两个分数形式的有理数，其中分子和分母全是整型范围内的整数，负号只可能出现在分子前，分母不为 0。\n\n', ' 分别在 4 行中按照 有理数1 运算符 有理数2 = 结果 的格式顺序输出 2 个有理数的和、差、积、商。注意输出的每个有理数必须是该有理数的最简形式 k a/b，其中 k 是整数部分，a/b 是最简分数部分；若为负数，则须加括号；若除法分母为 0，则输出 Inf。题目保证正确的输出中没有超过整型范围的整数。\n\n', 8, 16, 'pat', 2, '2/3 -4/2\n', '2/3 + (-2) = (-1 1/3)\n2/3 - (-2) = 2 2/3\n2/3 * (-2) = (-1 1/3)\n2/3 / (-2) = (-1/3)\n');
INSERT INTO `problem` VALUES (892, '插入与归并', '根据维基百科的定义：\n\n插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。\n\n归并排序进行如下迭代操作：首先将原始序列看成 N 个只包含 1 个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下 1 个有序的序列。\n\n现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？\n\n\n', '[{\'in\': \'10\\n3 1 2 8 7 5 9 4 6 0\\n1 2 3 7 8 5 9 4 6 0\\n\', \'out\': \'Insertion Sort\\n1 2 3 5 7 8 9 4 6 0\\n\'}, {\'in\': \'10\\n3 1 2 8 7 5 9 4 0 6\\n1 3 2 8 5 7 4 9 0 6\\n\', \'out\': \'Merge Sort\\n1 2 3 8 4 5 7 9 0 6\\n\'}]', 1, 0, 0, ' 输入在第一行给出正整数 N (le100)；随后一行给出原始序列的 N 个整数；最后一行给出由某排序算法产生的中间序列。这里假设排序的目标序列是升序。数字间以空格分隔。\n\n', ' 首先在第 1 行中输出Insertion Sort表示插入排序、或Merge Sort表示归并排序；然后在第 2 行中输出用该排序算法再迭代一轮的结果序列。题目保证每组测试的结果是唯一的。数字间以空格分隔，且行首尾不得有多余空格。\n\n', 8, 16, 'pat', 2, '10\n3 1 2 8 7 5 9 4 6 0\n1 2 3 7 8 5 9 4 6 0\n', 'Insertion Sort\n1 2 3 5 7 8 9 4 6 0\n');
INSERT INTO `problem` VALUES (893, '跟奥巴马一起编程', '美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！\n\n', '[{\'in\': \'10 a\\n\', \'out\': \'aaaaaaaaaa\\na        a\\na        a\\na        a\\naaaaaaaaaa\\n\'}]', 1, 0, 0, ' 输入在一行中给出正方形边长 N（3le Nle 20）和组成正方形边的某种字符 C，间隔一个空格。\n\n', ' 输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。\n\n', 8, 16, 'pat', 1, '10 a\n', 'aaaaaaaaaa\na        a\na        a\na        a\naaaaaaaaaa\n');
INSERT INTO `problem` VALUES (894, '在霍格沃茨找零钱', '如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱 P 和他实付的钱 A，你的任务是写一个程序来计算他应该被找的零钱。\n\n', '[{\'in\': \'10.16.27 14.1.28\\n\', \'out\': \'3.2.1\\n\'}, {\'in\': \'14.1.28 10.16.27\\n\', \'out\': \'-3.2.1\\n\'}]', 1, 0, 0, ' 输入在 1 行中分别给出 P 和 A，格式为 Galleon.Sickle.Knut，其间用 1 个空格分隔。这里 Galleon 是 0, 10^7 区间内的整数，Sickle 是 0, 17) 区间内的整数，Knut 是 0, 29) 区间内的整数。\n\n', ' 在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。\n\n', 8, 16, 'pat', 2, '10.16.27 14.1.28\n', '3.2.1\n');
INSERT INTO `problem` VALUES (895, '统计同成绩学生', '本题要求读入 N 名学生的成绩，将获得某一给定分数的学生人数输出。\n\n', '[{\'in\': \'10\\n60 75 90 55 75 99 82 90 75 50\\n3 75 90 88\\n\', \'out\': \'3 2 0\\n\'}]', 1, 0, 0, ' 输入在第 1 行给出不超过 10^5 的正整数 N，即学生总人数。随后一行给出 N 名学生的百分制整数成绩，中间以空格分隔。最后一行给出要查询的分数个数 K（不超过 N 的正整数），随后是 K 个分数，中间以空格分隔。\n\n', ' 在一行中按查询顺序给出得分等于指定分数的学生人数，中间以空格分隔，但行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '10\n60 75 90 55 75 99 82 90 75 50\n3 75 90 88\n', '3 2 0\n');
INSERT INTO `problem` VALUES (896, '到底买不买', '小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。\n\n为方便起见，我们用0-9、a-z、A-Z范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。\n\nfigbuy.jpg(~/b7e2ffa6-8819-436d-ad79-a41263abe914.jpg)\n\n图 1\n\n', '[{\'in\': \'ppRYYGrrYBR2258\\nYrR8RrY\\n\', \'out\': \'Yes 8\\n\'}, {\'in\': \'ppRYYGrrYB225\\nYrR8RrY\\n\', \'out\': \'No 2\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例分别在 2 行中先后给出摊主的珠串和小红想做的珠串，两串都不超过 1000 个珠子。\n\n', ' 如果可以买，则在一行中输出 Yes 以及有多少多余的珠子；如果不可以买，则在一行中输出 No 以及缺了多少珠子。其间以 1 个空格分隔。\n\n', 8, 16, 'pat', 2, 'ppRYYGrrYBR2258\nYrR8RrY\n', 'Yes 8\n');
INSERT INTO `problem` VALUES (897, '有几个PAT', '字符串 APPAPT 中包含了两个单词 PAT，其中第一个 PAT 是第 2 位(P)，第 4 位(A)，第 6 位(T)；第二个 PAT 是第 3 位(P)，第 4 位(A)，第 6 位(T)。\n\n现给定字符串，问一共可以形成多少个 PAT？\n\n', '[{\'in\': \'APPAPT\\n\', \'out\': \'2\\n\'}]', 1, 0, 0, ' 输入只有一行，包含一个字符串，长度不超过10^5，只包含 P、A、T 三种字母。\n\n', ' 在一行中输出给定字符串中包含多少个 PAT。由于结果可能比较大，只输出对 1000000007 取余数的结果。\n\n', 8, 16, 'pat', 1, 'APPAPT\n', '2\n');
INSERT INTO `problem` VALUES (898, '考试座位号', '每个 PAT 考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。\n\n', '[{\'in\': \'4\\n3310120150912233 2 4\\n3310120150912119 4 1\\n3310120150912126 1 3\\n3310120150912002 3 2\\n2\\n3 4\\n\', \'out\': \'3310120150912002 2\\n3310120150912119 1\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 1000），随后 N 行，每行给出一个考生的信息：准考证号 试机座位号 考试座位号。其中准考证号由 16 位数字组成，座位从 1 到 N 编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。\n\n考生信息之后，给出一个正整数 M（le N），随后一行中给出 M 个待查询的试机座位号码，以空格分隔。\n\n', ' 对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用 1 个空格分隔。\n\n', 8, 16, 'pat', 1, '4\n3310120150912233 2 4\n3310120150912119 4 1\n3310120150912126 1 3\n3310120150912002 3 2\n2\n3 4\n', '3310120150912002 2\n3310120150912119 1\n');
INSERT INTO `problem` VALUES (899, '字符统计', '请编写程序，找出一段给定文字中出现最频繁的那个英文字母。\n\n', '[{\'in\': \'This is a simple TEST.  There ARE numbers and other symbols 1&2&3...........\\n\', \'out\': \'e 7\\n\'}]', 1, 0, 0, ' 输入在一行中给出一个长度不超过 1000 的字符串。字符串由 ASCII 码表中任意可见字符及空格组成，至少包含 1 个英文字母，以回车结束（回车不算在内）。\n\n', ' 在一行中输出出现频率最高的那个英文字母及其出现次数，其间以空格分隔。如果有并列，则输出按字母序最小的那个字母。统计时不区分大小写，输出小写字母。\n\n', 8, 16, 'pat', 1, 'This is a simple TEST.  There ARE numbers and other symbols 1&2&3...........\n', 'e 7\n');
INSERT INTO `problem` VALUES (900, '输出PATest', '给定一个长度不超过 10^4 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 PATestPATest.... 这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。\n\n', '[{\'in\': \'redlesPayBestPATTopTeePHPereatitAPPT\\n\', \'out\': \'PATestPATestPTetPTePePee\\n\'}]', 1, 0, 0, ' 输入在一行中给出一个长度不超过 10^4 的、仅由英文字母构成的非空字符串。\n\n', ' 在一行中按题目要求输出排序后的字符串。题目保证输出非空。\n\n', 8, 16, 'pat', 1, 'redlesPayBestPATTopTeePHPereatitAPPT\n', 'PATestPATestPTetPTePePee\n');
INSERT INTO `problem` VALUES (901, '火星数字', '火星人是以 13 进制计数的：\n\n- 地球人的 0 被火星人称为 tret。\n- 地球人数字 1 到 12 的火星文分别为：jan, feb, mar, apr, may, jun, jly, aug, sep, oct, nov, dec。\n- 火星人将进位以后的 12 个高位数字分别称为：tam, hel, maa, huh, tou, kes, hei, elo, syy, lok, mer, jou。\n\n例如地球人的数字 29 翻译成火星文就是 hel mar；而火星文 elo nov 对应地球数字 115。为了方便交流，请你编写程序实现地球和火星数字之间的互译。\n\n', '[{\'in\': \'4\\n29\\n5\\nelo nov\\ntam\\n\', \'out\': \'hel mar\\nmay\\n115\\n13\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（<100），随后 N 行，每行给出一个 0, 169) 区间内的数字 —— 或者是地球文，或者是火星文。\n\n', ' 对应输入的每一行，在一行中输出翻译后的另一种语言的数字。\n\n', 8, 16, 'pat', 1, '4\n29\n5\nelo nov\ntam\n', 'hel mar\nmay\n115\n13\n');
INSERT INTO `problem` VALUES (902, '快速排序', '著名的快速排序算法里有一个经典的划分过程：我们通常采用某种方法取一个元素作为主元，通过交换，把比主元小的元素放到它的左边，比主元大的元素放到它的右边。 给定划分后的 N 个互不相同的正整数的排列，请问有多少个元素可能是划分前选取的主元？\n\n例如给定 N = 5, 排列是1、3、2、4、5。则：\n\n- 1 的左边没有元素，右边的元素都比它大，所以它可能是主元；\n- 尽管 3 的左边元素都比它小，但其右边的 2 比它小，所以它不能是主元；\n- 尽管 2 的右边元素都比它大，但其左边的 3 比它大，所以它不能是主元；\n- 类似原因，4 和 5 都可能是主元。\n\n因此，有 3 个元素可能是主元。\n\n', '[{\'in\': \'5\\n1 3 2 4 5\\n\', \'out\': \'3\\n1 4 5\\n\'}]', 1, 0, 0, ' 输入在第 1 行中给出一个正整数 N（le 10^5）； 第 2 行是空格分隔的 N 个不同的正整数，每个数不超过 10^9。\n\n', ' 在第 1 行中输出有可能是主元的元素个数；在第 2 行中按递增顺序输出这些元素，其间以 1 个空格分隔，行首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '5\n1 3 2 4 5\n', '3\n1 4 5\n');
INSERT INTO `problem` VALUES (903, '划拳', '划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人划拳的方法为：每人口中喊出一个数字，同时用手比划出一个数字。如果谁比划出的数字正好等于两人喊出的数字之和，谁就赢了，输家罚一杯酒。两人同赢或两人同输则继续下一轮，直到唯一的赢家出现。\n\n下面给出甲、乙两人的划拳记录，请你统计他们最后分别喝了多少杯酒。\n\n', '[{\'in\': \'5\\n8 10 9 12\\n5 10 5 10\\n3 8 5 12\\n12 18 1 13\\n4 16 12 15\\n\', \'out\': \'1 2\\n\'}]', 1, 0, 0, ' 输入第一行先给出一个正整数 N（le 100），随后 N 行，每行给出一轮划拳的记录，格式为：\n\n甲喊 甲划 乙喊 乙划\n\n其中喊是喊出的数字，划是划出的数字，均为不超过 100 的正整数（两只手一起划）。\n\n', ' 在一行中先后输出甲、乙两人喝酒的杯数，其间以一个空格分隔。\n\n', 8, 16, 'pat', 1, '5\n8 10 9 12\n5 10 5 10\n3 8 5 12\n12 18 1 13\n4 16 12 15\n', '1 2\n');
INSERT INTO `problem` VALUES (904, '编程团体赛', '编程团体赛的规则为：每个参赛队由若干队员组成；所有队员独立比赛；参赛队的成绩为所有队员的成绩和；成绩最高的队获胜。\n\n现给定所有队员的比赛成绩，请你编写程序找出冠军队。\n\n', '[{\'in\': \'6\\n3-10 99\\n11-5 87\\n102-1 0\\n102-3 100\\n11-9 89\\n3-2 61\\n\', \'out\': \'11 176\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 10^4），即所有参赛队员总数。随后 N 行，每行给出一位队员的成绩，格式为：队伍编号-队员编号 成绩，其中队伍编号为 1 到 1000 的正整数，队员编号为 1 到 10 的正整数，成绩为 0 到 100 的整数。\n\n', ' 在一行中输出冠军队的编号和总成绩，其间以一个空格分隔。注意：题目保证冠军队是唯一的。\n\n', 8, 16, 'pat', 1, '6\n3-10 99\n11-5 87\n102-1 0\n102-3 100\n11-9 89\n3-2 61\n', '11 176\n');
INSERT INTO `problem` VALUES (905, '数字加密', '本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K 代表 12；对偶数位，用 B 的数字减去 A 的数字，若结果为负数，则再加 10。这里令个位为第 1 位。\n\n', '[{\'in\': \'1234567 368782971\\n\', \'out\': \'3695Q8118\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出 A 和 B，均为不超过 100 位的正整数，其间以空格分隔。\n\n', ' 在一行中输出加密后的结果。\n\n', 8, 16, 'pat', 1, '1234567 368782971\n', '3695Q8118\n');
INSERT INTO `problem` VALUES (906, '数列的片段和', '给定一个正数数列，我们可以从中截取任意的连续的几个数，称为片段。例如，给定数列 { 0.1, 0.2, 0.3, 0.4 }，我们有 (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4) 这 10 个片段。\n\n给定正整数数列，求出全部片段包含的所有的数之和。如本例中 10 个片段总和是 0.1 + 0.3 + 0.6 + 1.0 + 0.2 + 0.5 + 0.9 + 0.3 + 0.7 + 0.4 = 5.0。\n\n', '[{\'in\': \'4\\n0.1 0.2 0.3 0.4\\n\', \'out\': \'5.00\\n\'}]', 1, 0, 0, ' 输入第一行给出一个不超过 10^5 的正整数 N，表示数列中数的个数，第二行给出 N  个不超过 1.0 的正数，是数列中的数，其间以空格分隔。\n\n', ' 在一行中输出该序列所有片段包含的数之和，精确到小数点后 2 位。\n\n', 8, 16, 'pat', 1, '4\n0.1 0.2 0.3 0.4\n', '5.00\n');
INSERT INTO `problem` VALUES (907, '螺旋矩阵', '本题要求将给定的 N 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 m 行 n 列，满足条件：mtimes n 等于 N；mge n；且 m-n 取所有可能值中的最小值。\n\n', '[{\'in\': \'12\\n37 76 20 98 76 42 53 95 60 81 58 93\\n\', \'out\': \'98 95 93\\n42 37 81\\n53 20 76\\n58 60 76\\n\'}]', 1, 0, 0, ' 输入在第 1 行中给出一个正整数 N，第 2 行给出 N 个待填充的正整数。所有数字不超过 10^4，相邻数字以空格分隔。\n\n', ' 输出螺旋矩阵。每行 n 个数字，共 m 行。相邻数字以 1 个空格分隔，行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '12\n37 76 20 98 76 42 53 95 60 81 58 93\n', '98 95 93\n42 37 81\n53 20 76\n58 60 76\n');
INSERT INTO `problem` VALUES (908, '复数乘法', '复数可以写成 (A + Bi) 的常规形式，其中 A 是实部，B 是虚部，i 是虚数单位，满足 i^2 = -1；也可以写成极坐标下的指数形式 (Rtimes e^{(Pi)})，其中 R 是复数模，P 是辐角，i 是虚数单位，其等价于三角形式 (R(cos (P) + i sin (P))。\n\n现给定两个复数的 R 和 P，要求输出两数乘积的常规形式。\n\n', '[{\'in\': \'2.3 3.5 5.2 0.4\\n\', \'out\': \'-8.68-8.23i\\n\'}]', 1, 0, 0, ' 输入在一行中依次给出两个复数的 R1, P1, R2, P2，数字间以空格分隔。\n\n', ' 在一行中按照 A+Bi 的格式输出两数乘积的常规形式，实部和虚部均保留 2 位小数。注意：如果 B 是负数，则应该写成 A-|B|i 的形式。\n\n', 8, 16, 'pat', 1, '2.3 3.5 5.2 0.4\n', '-8.68-8.23i\n');
INSERT INTO `problem` VALUES (909, '卖个萌', '萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：\n\n左手(左眼口右眼)右手\n\n现给出可选用的符号集合，请你按用户的要求输出表情。\n\n', '[{\'in\': \'[╮][╭][o][~\\\\][/~]  [<][>]\\n [╯][╰][^][-][=][>][<][@][⊙]\\n[Д][▽][_][ε][^]  ...\\n4\\n1 1 2 2 2\\n6 8 1 5 5\\n3 3 4 3 3\\n2 10 3 9 3\\n\', \'out\': \'╮(╯▽╰)╭\\n<(@Д=)/~\\no(^ε^)o\\nAre you kidding me? @\\\\/@\\n\'}]', 1, 0, 0, ' 输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号 内。题目保证每个集合都至少有一个符号，并不超过 10 个符号；每个符号包含 1 到 4 个非空字符。\n\n之后一行给出一个正整数 K，为用户请求的个数。随后 K 行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从 1 开始），数字间以空格分隔。\n\n', ' 对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出 Are you kidding me? @/@。\n\n', 8, 16, 'pat', 1, '[╮][╭][o][~\\][/~]  [<][>]\n [╯][╰][^][-][=][>][<][@][⊙]\n[Д][▽][_][ε][^]  ...\n4\n1 1 2 2 2\n6 8 1 5 5\n3 3 4 3 3\n2 10 3 9 3\n', '╮(╯▽╰)╭\n<(@Д=)/~\no(^ε^)o\nAre you kidding me? @\\/@\n');
INSERT INTO `problem` VALUES (910, '住房空置率', '在不打扰居民的前提下，统计住房空置率的一种方法是根据每户用电量的连续变化规律进行判断。判断方法如下：\n\n- 在观察期内，若存在超过一半的日子用电量低于某给定的阈值 e，则该住房为“可能空置”；\n\n- 若观察期超过某给定阈值 D 天，且满足上一个条件，则该住房为“空置”。\n\n现给定某居民区的住户用电量数据，请你统计“可能空置”的比率和“空置”比率，即以上两种状态的住房占居民区住房总套数的百分比。\n\n', '[{\'in\': \'5 0.5 10\\n6 0.3 0.4 0.5 0.2 0.8 0.6\\n10 0.0 0.1 0.2 0.3 0.0 0.8 0.6 0.7 0.0 0.5\\n5 0.4 0.3 0.5 0.1 0.7\\n11 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\\n11 2 2 2 1 1 0.1 1 0.1 0.1 0.1 0.1\\n\', \'out\': \'40.0% 20.0%\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数 N（le 1000），为居民区住房总套数；正实数 e，即低电量阈值；正整数 D，即观察期阈值。随后 N 行，每行按以下格式给出一套住房的用电量数据：\n\nK E1 E2 ... EK\n\n其中 K 为观察的天数，Ei 为第 i 天的用电量。\n\n', ' 在一行中输出“可能空置”的比率和“空置”比率的百分比值，其间以一个空格分隔，保留小数点后 1 位。\n\n', 8, 16, 'pat', 1, '5 0.5 10\n6 0.3 0.4 0.5 0.2 0.8 0.6\n10 0.0 0.1 0.2 0.3 0.0 0.8 0.6 0.7 0.0 0.5\n5 0.4 0.3 0.5 0.1 0.7\n11 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n11 2 2 2 1 1 0.1 1 0.1 0.1 0.1 0.1\n', '40.0% 20.0%\n');
INSERT INTO `problem` VALUES (911, '集体照', '拍集体照时队形很重要，这里对给定的 N 个人 K 排的队形设计排队规则如下：\n\n- 每排人数为 N/K（向下取整），多出来的人全部站在最后一排；\n\n- 后排所有人的个子都不比前排任何人矮；\n\n- 每排中最高者站中间（中间位置为 m/2+1，其中 m 为该排人数，除法向下取整）；\n\n- 每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；\n\n- 若多人身高相同，则按名字的字典序升序排列。这里保证无重名。\n\n现给定一组拍照人，请编写程序输出他们的队形。\n\n', '[{\'in\': \'10 3\\nTom 188\\nMike 170\\nEva 168\\nTim 160\\nJoe 190\\nAnn 168\\nBob 175\\nNick 186\\nAmy 160\\nJohn 159\\n\', \'out\': \'Bob Tom Joe Nick\\nAnn Mike Eva\\nTim Amy John\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例第 1 行给出两个正整数 N（le 10^4，总人数）和 K（le 10，总排数）。随后 N 行，每行给出一个人的名字（不包含空格、长度不超过 8 个英文字母）和身高（30, 300 区间内的整数）。\n\n', ' 输出拍照的队形。即K排人名，其间以空格分隔，行末不得有多余空格。注意：假设你面对拍照者，后排的人输出在上方，前排输出在下方。\n\n', 8, 16, 'pat', 1, '10 3\nTom 188\nMike 170\nEva 168\nTim 160\nJoe 190\nAnn 168\nBob 175\nNick 186\nAmy 160\nJohn 159\n', 'Bob Tom Joe Nick\nAnn Mike Eva\nTim Amy John\n');
INSERT INTO `problem` VALUES (912, '组合数的和', '给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。\n\n', '[{\'in\': \'3 2 8 5\\n\', \'out\': \'330\\n\'}]', 1, 0, 0, ' 输入在一行中先给出 N（1 < N < 10），随后给出 N 个不同的非 0 个位数字。数字间以空格分隔。\n\n', ' 输出所有可能组合出来的2位数字的和。\n\n', 8, 16, 'pat', 1, '3 2 8 5\n', '330\n');
INSERT INTO `problem` VALUES (913, '数零壹', '给定一串长度不超过 10^5 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 PAT (Basic)，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。\n\n', '[{\'in\': \'PAT (Basic)\\n\', \'out\': \'3 4\\n\'}]', 1, 0, 0, ' 输入在一行中给出长度不超过 10^5、以回车结束的字符串。\n\n', ' 在一行中先后输出 0 的个数和 1 的个数，其间以空格分隔。\n\n', 8, 16, 'pat', 1, 'PAT (Basic)\n', '3 4\n');
INSERT INTO `problem` VALUES (914, '选择题', '批改多选题是比较麻烦的事情，本题就请你写个程序帮助老师批改多选题，并且指出哪道题错的人最多。\n\n', '[{\'in\': \'3 4 \\n3 4 2 a c\\n2 5 1 b\\n5 3 2 b c\\n1 5 4 a b d e\\n(2 a c) (2 b d) (2 a c) (3 a b e)\\n(2 a c) (1 b) (2 a b) (4 a b d e)\\n(2 b d) (1 e) (2 b c) (4 a b c d)\\n\', \'out\': \'3\\n6\\n5\\n2 2 3 4\\n\'}]', 1, 0, 0, ' 输入在第一行给出两个正整数 N（le 1000）和 M（le 100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 (选中的选项个数 选项1 ……)，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。\n\n', ' 按照输入的顺序给出每个学生的得分，每个分数占一行。注意判题时只有选择全部正确才能得到该题的分数。最后一行输出错得最多的题目的错误次数和编号（题目按照输入的顺序从 1 开始编号）。如果有并列，则按编号递增顺序输出。数字间用空格分隔，行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 Too simple。\n\n', 8, 16, 'pat', 1, '3 4 \n3 4 2 a c\n2 5 1 b\n5 3 2 b c\n1 5 4 a b d e\n(2 a c) (2 b d) (2 a c) (3 a b e)\n(2 a c) (1 b) (2 a b) (4 a b d e)\n(2 b d) (1 e) (2 b c) (4 a b c d)\n', '3\n6\n5\n2 2 3 4\n');
INSERT INTO `problem` VALUES (915, 'C语言竞赛', 'C 语言竞赛是浙江大学计算机学院主持的一个欢乐的竞赛。既然竞赛主旨是为了好玩，颁奖规则也就制定得很滑稽：\n\n- 0、冠军将赢得一份“神秘大奖”（比如很巨大的一本学生研究论文集……）。\n- 1、排名为素数的学生将赢得最好的奖品 —— 小黄人玩偶！\n- 2、其他人将得到巧克力。\n\n给定比赛的最终排名以及一系列参赛者的 ID，你要给出这些参赛者应该获得的奖品。\n\n', '[{\'in\': \'6\\n1111\\n6666\\n8888\\n1234\\n5555\\n0001\\n6\\n8888\\n0001\\n1111\\n2222\\n8888\\n2222\\n\', \'out\': \'8888: Minion\\n0001: Chocolate\\n1111: Mystery Award\\n2222: Are you kidding?\\n8888: Checked\\n2222: Are you kidding?\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 10^4），是参赛者人数。随后 N 行给出最终排名，每行按排名顺序给出一位参赛者的 ID（4 位数字组成）。接下来给出一个正整数 K 以及 K 个需要查询的 ID。\n\n', ' 对每个要查询的 ID，在一行中输出 ID: 奖品，其中奖品或者是 Mystery Award（神秘大奖）、或者是 Minion（小黄人）、或者是 Chocolate（巧克力）。如果所查 ID 根本不在排名里，打印 Are you kidding?（耍我呢？）。如果该 ID 已经查过了（即奖品已经领过了），打印 ID: Checked（不能多吃多占）。\n\n', 8, 16, 'pat', 1, '6\n1111\n6666\n8888\n1234\n5555\n0001\n6\n8888\n0001\n1111\n2222\n8888\n2222\n', '8888: Minion\n0001: Chocolate\n1111: Mystery Award\n2222: Are you kidding?\n8888: Checked\n2222: Are you kidding?\n');
INSERT INTO `problem` VALUES (916, '爱丁顿数', '英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” E ，即满足有 E 天骑车超过 E 英里的最大整数 E。据说爱丁顿自己的 E 等于87。\n\n现给定某人 N 天的骑车距离，请你算出对应的爱丁顿数 E（le N）。\n\n', '[{\'in\': \'10\\n6 7 6 9 3 10 8 2 7 8\\n\', \'out\': \'6\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N (le 10^5)，即连续骑车的天数；第二行给出 N 个非负整数，代表每天的骑车距离。\n\n', ' 在一行中给出 N 天的爱丁顿数。\n\n', 8, 16, 'pat', 1, '10\n6 7 6 9 3 10 8 2 7 8\n', '6\n');
INSERT INTO `problem` VALUES (917, '判断题', '判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。\n\n', '[{\'in\': \'3 6\\n2 1 3 3 4 5\\n0 0 1 0 1 1\\n0 1 1 0 0 1\\n1 0 1 0 1 0\\n1 1 0 0 1 1\\n\', \'out\': \'13\\n11\\n12\\n\'}]', 1, 0, 0, ' 输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。\n\n', ' 按照输入的顺序输出每个学生的得分，每个分数占一行。\n\n', 8, 16, 'pat', 1, '3 6\n2 1 3 3 4 5\n0 0 1 0 1 1\n0 1 1 0 0 1\n1 0 1 0 1 0\n1 1 0 0 1 1\n', '13\n11\n12\n');
INSERT INTO `problem` VALUES (918, '最简分数', '一个分数一般写成两个整数相除的形式：N/M，其中 M 不为0。最简分数是指分子和分母没有公约数的分数表示形式。\n\n现给定两个不相等的正分数 N1/M1 和 N2/M2，要求你按从小到大的顺序列出它们之间分母为 K 的最简分数。\n\n', '[{\'in\': \'7/18 13/20 12\\n\', \'out\': \'5/12 7/12\\n\'}]', 1, 0, 0, ' 输入在一行中按 N/M 的格式给出两个正分数，随后是一个正整数分母 K，其间以空格分隔。题目保证给出的所有整数都不超过 1000。\n\n', ' 在一行中按 N/M 的格式列出两个给定分数之间分母为 K 的所有最简分数，按从小到大的顺序，其间以 1 个空格分隔。行首尾不得有多余空格。题目保证至少有 1 个输出。\n\n', 8, 16, 'pat', 1, '7/18 13/20 12\n', '5/12 7/12\n');
INSERT INTO `problem` VALUES (919, '计算谱半径', '在数学中，矩阵的“谱半径”是指其特征值的模集合的上确界。换言之，对于给定的 n 个复数空间的特征值 { a1+b1i, cdots , an+bni }，它们的模为实部与虚部的平方和的开方，而“谱半径”就是最大模。\n\n现在给定一些复数空间的特征值，请你计算并输出这些特征值的谱半径。\n\n', '[{\'in\': \'5\\n0 1\\n2 0\\n-1 0\\n3 3\\n0 -3\\n\', \'out\': \'4.24\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数 N（le 10 000）是输入的特征值的个数。随后 N 行，每行给出 1 个特征值的实部和虚部，其间以空格分隔。注意：题目保证实部和虚部均为绝对值不超过 1000 的整数。\n\n', ' 在一行中输出谱半径，四舍五入保留小数点后 2 位。\n\n', 8, 16, 'pat', 1, '5\n0 1\n2 0\n-1 0\n3 3\n0 -3\n', '4.24\n');
INSERT INTO `problem` VALUES (920, '朋友数', '如果两个整数各位数字的和是一样的，则被称为是“朋友数”，而那个公共的和就是它们的“朋友证号”。例如 123 和 51 就是朋友数，因为 1+2+3 = 5+1 = 6，而 6 就是它们的朋友证号。给定一些整数，要求你统计一下它们中有多少个不同的朋友证号。\n\n', '[{\'in\': \'8\\n123 899 51 998 27 33 36 12\\n\', \'out\': \'4\\n3 6 9 26\\n\'}]', 1, 0, 0, ' 输入第一行给出正整数 N。随后一行给出 N 个正整数，数字间以空格分隔。题目保证所有数字小于 10^4。\n\n', ' 首先第一行输出给定数字中不同的朋友证号的个数；随后一行按递增顺序输出这些朋友证号，数字间隔一个空格，且行末不得有多余空格。\n\n', 8, 16, 'pat', 1, '8\n123 899 51 998 27 33 36 12\n', '4\n3 6 9 26\n');
INSERT INTO `problem` VALUES (921, '单身狗', '“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。\n\n', '[{\'in\': \'3\\n11111 22222\\n33333 44444\\n55555 66666\\n7\\n55555 44444 10000 88888 22222 11111 23333\\n\', \'out\': \'5\\n10000 23333 44444 55555 88888\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 50 000），是已知夫妻/伴侣的对数；随后 N 行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个 ID 号，为 5 位数字（从 00000 到 99999），ID 间以空格分隔；之后给出一个正整数 M（le 10 000），为参加派对的总人数；随后一行给出这 M 位客人的 ID，以空格分隔。题目保证无人重婚或脚踩两条船。\n\n', ' 首先第一行输出落单客人的总人数；随后第二行按 ID 递增顺序列出落单的客人。ID 间用 1 个空格分隔，行的首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '3\n11111 22222\n33333 44444\n55555 66666\n7\n55555 44444 10000 88888 22222 11111 23333\n', '5\n10000 23333 44444 55555 88888\n');
INSERT INTO `problem` VALUES (922, '图像过滤', '图像过滤是把图像中不重要的像素都染成背景色，使得重要部分被凸显出来。现给定一幅黑白图像，要求你将灰度值位于某指定区间内的所有像素颜色都用一种指定的颜色替换。\n\n', '[{\'in\': \'3 5 100 150 0\\n3 189 254 101 119\\n150 233 151 99 100\\n88 123 149 0 255\\n\', \'out\': \'003 189 254 000 000\\n000 233 151 099 000\\n088 000 000 000 255\\n\'}]', 1, 0, 0, ' 输入在第一行给出一幅图像的分辨率，即两个正整数 M 和 N（0 < M, N le 500），另外是待过滤的灰度值区间端点 A 和 B（0 le A < B le 255）、以及指定的替换灰度值。随后 M 行，每行给出 N 个像素点的灰度值，其间以空格分隔。所有灰度值都在 0, 255 区间内。\n\n', ' 输出按要求过滤后的图像。即输出 M 行，每行 N 个像素灰度值，每个灰度值占 3 位（例如黑色要显示为 000），其间以一个空格分隔。行首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '3 5 100 150 0\n3 189 254 101 119\n150 233 151 99 100\n88 123 149 0 255\n', '003 189 254 000 000\n000 233 151 099 000\n088 000 000 000 255\n');
INSERT INTO `problem` VALUES (923, '微博转发抽奖', '小明 PAT 考了满分，高兴之余决定发起微博转发抽奖活动，从转发的网友中按顺序每隔 N 个人就发出一个红包。请你编写程序帮助他确定中奖名单。\n\n', '[{\'in\': \'9 3 2\\nImgonnawin!\\nPickMe\\nPickMeMeMeee\\nLookHere\\nImgonnawin!\\nTryAgainAgain\\nTryAgainAgain\\nImgonnawin!\\nTryAgainAgain\\n\', \'out\': \'PickMe\\nImgonnawin!\\nTryAgainAgain\\n\'}, {\'in\': \'2 3 5\\nImgonnawin!\\nPickMe\\n\', \'out\': \'Keep going...\\n\'}]', 1, 0, 0, ' 输入第一行给出三个正整数 M（le 1000）、N 和 S，分别是转发的总量、小明决定的中奖间隔、以及第一位中奖者的序号（编号从 1 开始）。随后 M 行，顺序给出转发微博的网友的昵称（不超过 20 个字符、不包含空格回车的非空字符串）。\n\n注意：可能有人转发多次，但不能中奖多次。所以如果处于当前中奖位置的网友已经中过奖，则跳过他顺次取下一位。\n\n', ' 按照输入的顺序输出中奖名单，每个昵称占一行。如果没有人中奖，则输出 Keep going...。\n\n', 8, 16, 'pat', 2, '9 3 2\nImgonnawin!\nPickMe\nPickMeMeMeee\nLookHere\nImgonnawin!\nTryAgainAgain\nTryAgainAgain\nImgonnawin!\nTryAgainAgain\n', 'PickMe\nImgonnawin!\nTryAgainAgain\n');
INSERT INTO `problem` VALUES (924, '结绳', '给定一段一段的绳子，你需要把它们串成一条绳。每次串连的时候，是把两段绳子对折，再如下图所示套接在一起。这样得到的绳子又被当成是另一段绳子，可以再次对折去跟另一段绳子串连。每次串连后，原来两段绳子的长度就会减半。\n\nrope.jpg(~/46293e57-aa0e-414b-b5c3-7c4b2d5201e2.jpg)\n\n给定 N 段绳子的长度，你需要找出它们能串成的绳子的最大长度。\n\n', '[{\'in\': \'8\\n10 15 12 3 4 13 1 15\\n\', \'out\': \'14\\n\'}]', 1, 0, 0, ' 每个输入包含 1 个测试用例。每个测试用例第 1 行给出正整数 N (2 le N le 10^4)；第 2 行给出 N 个正整数，即原始绳段的长度，数字间以空格分隔。所有整数都不超过10^4。\n\n', ' 在一行中输出能够串成的绳子的最大长度。结果向下取整，即取为不超过最大长度的最近整数。\n\n', 8, 16, 'pat', 1, '8\n10 15 12 3 4 13 1 15\n', '14\n');
INSERT INTO `problem` VALUES (925, '开学寄语', '下图是上海某校的新学期开学寄语：天将降大任于斯人也，必先删其微博，卸其 QQ，封其电脑，夺其手机，收其 ipad，断其 wifi，使其百无聊赖，然后，净面、理发、整衣，然后思过、读书、锻炼、明智、开悟、精进。而后必成大器也！\n\n\njiyu.JPG(~/3b1d9f4a-778b-4942-a9e2-836262f363aa.JPG)\n\n\n本题要求你写个程序帮助这所学校的老师检查所有学生的物品，以助其成大器。\n\n', '[{\'in\': \'4 2\\n2333 6666\\nCYLL 3 1234 2345 3456\\nU 4 9966 6666 8888 6666\\nGG 2 2333 7777\\nJJ 3 0012 6666 2333\\n\', \'out\': \'U: 6666 6666\\nGG: 2333\\nJJ: 6666 2333\\n3 5\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数 N（le 1000）和 M（le 6），分别是学生人数和需要被查缴的物品种类数。第二行给出 M 个需要被查缴的物品编号，其中编号为 4 位数字。随后 N 行，每行给出一位学生的姓名缩写（由 1-4 个大写英文字母组成）、个人物品数量 K（0 le K le 10）、以及 K 个物品的编号。\n\n', ' 顺次检查每个学生携带的物品，如果有需要被查缴的物品存在，则按以下格式输出该生的信息和其需要被查缴的物品的信息（注意行末不得有多余空格）：\n\n姓名缩写: 物品编号1 物品编号2 ……\n\n最后一行输出存在问题的学生的总人数和被查缴物品的总数。\n\n', 8, 16, 'pat', 1, '4 2\n2333 6666\nCYLL 3 1234 2345 3456\nU 4 9966 6666 8888 6666\nGG 2 2333 7777\nJJ 3 0012 6666 2333\n', 'U: 6666 6666\nGG: 2333\nJJ: 6666 2333\n3 5\n');
INSERT INTO `problem` VALUES (926, '宇宙无敌加法器', '地球人习惯使用十进制数，并且默认一个数字的每一位都是十进制的。而在 PAT 星人开挂的世界里，每个数字的每一位都是不同进制的，这种神奇的数字称为“PAT数”。每个 PAT 星人都必须熟记各位数字的进制表，例如“……0527”就表示最低位是 7 进制数、第 2 位是 2 进制数、第 3 位是 5 进制数、第 4 位是 10 进制数，等等。每一位的进制 d 或者是 0（表示十进制）、或者是 2，9 区间内的整数。理论上这个进制表应该包含无穷多位数字，但从实际应用出发，PAT 星人通常只需要记住前 20 位就够用了，以后各位默认为 10 进制。\n\n在这样的数字系统中，即使是简单的加法运算也变得不简单。例如对应进制表“0527”，该如何计算“6203 + 415”呢？我们得首先计算最低位：3 + 5 = 8；因为最低位是 7 进制的，所以我们得到 1 和 1 个进位。第 2 位是：0 + 1 + 1（进位）= 2；因为此位是 2 进制的，所以我们得到 0 和 1 个进位。第 3 位是：2 + 4 + 1（进位）= 7；因为此位是 5 进制的，所以我们得到 2 和 1 个进位。第 4 位是：6 + 1（进位）= 7；因为此位是 10 进制的，所以我们就得到 7。最后我们得到：6203 + 415 = 7201。\n\n', '[{\'in\': \'30527\\n06203\\n415\\n\', \'out\': \'7201\\n\'}]', 1, 0, 0, ' 输入首先在第一行给出一个 N 位的进制表（0 < N le 20），以回车结束。 随后两行，每行给出一个不超过 N 位的非负的 PAT 数。\n\n', ' 在一行中输出两个 PAT 数之和。\n\n', 8, 16, 'pat', 1, '30527\n06203\n415\n', '7201\n');
INSERT INTO `problem` VALUES (927, 'Wifi密码', '下面是微博上流传的一张照片：“各位亲爱的同学们，鉴于大家有时需要使用 wifi，又怕耽误亲们的学习，现将 wifi 密码设置为下列数学题答案：A-1；B-2；C-3；D-4；请同学们自己作答，每两日一换。谢谢合作！！~”—— 老师们为了促进学生学习也是拼了…… 本题就要求你写程序把一系列题目的答案按照卷子上给出的对应关系翻译成 wifi 的密码。这里简单假设每道选择题都有 4 个选项，有且只有 1 个正确答案。\n\n\nwifi.jpg(~/7e56be3f-caba-45f1-b9cb-38a96d44de76.jpg)\n\n\n', '[{\'in\': \'8\\nA-T B-F C-F D-F\\nC-T B-F A-F D-F\\nA-F D-F C-F B-T\\nB-T A-F C-F D-F\\nB-F D-T A-F C-F\\nA-T C-F B-F D-F\\nD-T B-F C-F A-F\\nC-T A-F B-F D-F\\n\', \'out\': \'13224143\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 100），随后 N 行，每行按照 编号-答案 的格式给出一道题的 4 个选项，T 表示正确选项，F 表示错误选项。选项间用空格分隔。\n\n', ' 在一行中输出 wifi 密码。\n\n', 8, 16, 'pat', 1, '8\nA-T B-F C-F D-F\nC-T B-F A-F D-F\nA-F D-F C-F B-T\nB-T A-F C-F D-F\nB-F D-T A-F C-F\nA-T C-F B-F D-F\nD-T B-F C-F A-F\nC-T A-F B-F D-F\n', '13224143\n');
INSERT INTO `problem` VALUES (928, '互评成绩计算', '在浙大的计算机专业课中，经常有互评分组报告这个环节。一个组上台介绍自己的工作，其他组在台下为其表现评分。最后这个组的互评成绩是这样计算的：所有其他组的评分中，去掉一个最高分和一个最低分，剩下的分数取平均分记为 G1；老师给这个组的评分记为 G2。该组得分为 (G1+G2)/2，最后结果四舍五入后保留整数分。本题就要求你写个程序帮助老师计算每个组的互评成绩。\n\n', '[{\'in\': \'6 50\\n42 49 49 35 38 41\\n36 51 50 28 -1 30\\n40 36 41 33 47 49\\n30 250 -25 27 45 31\\n48 0 0 50 50 1234\\n43 41 36 29 42 29\\n\', \'out\': \'42\\n33\\n41\\n31\\n37\\n39\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数 N（ 3）和 M，分别是分组数和满分，均不超过 100。随后 N 行，每行给出该组得到的 N 个分数（均保证为整型范围内的整数），其中第 1 个是老师给出的评分，后面 N-1 个是其他组给的评分。合法的输入应该是 0, M 区间内的整数，若不在合法区间内，则该分数须被忽略。题目保证老师的评分都是合法的，并且每个组至少会有 3 个来自同学的合法评分。\n\n', ' 为每个组输出其最终得分。每个得分占一行。\n\n', 8, 16, 'pat', 1, '6 50\n42 49 49 35 38 41\n36 51 50 28 -1 30\n40 36 41 33 47 49\n30 250 -25 27 45 31\n48 0 0 50 50 1234\n43 41 36 29 42 29\n', '42\n33\n41\n31\n37\n39\n');
INSERT INTO `problem` VALUES (929, '字符串压缩与解压', '文本压缩有很多种方法，这里我们只考虑最简单的一种：把由相同字符组成的一个连续的片段用这个字符和片段中含有这个字符的个数来表示。例如 ccccc 就用 5c 来表示。如果字符没有重复，就原样输出。例如 aba 压缩后仍然是 aba。\n\n解压方法就是反过来，把形如 5c 这样的表示恢复为 ccccc。\n\n本题需要你根据压缩或解压的要求，对给定字符串进行处理。这里我们简单地假设原始字符串是完全由英文字母和空格组成的非空字符串。\n\n', '[{\'in\': \'C\\nTTTTThhiiiis isssss a   tesssst CAaaa as\\n\', \'out\': \'5T2h4is i5s a3 te4st CA3a as\\n\'}, {\'in\': \'D\\n5T2h4is i5s a3 te4st CA3a as10Z\\n\', \'out\': \'TTTTThhiiiis isssss a   tesssst CAaaa asZZZZZZZZZZ\\n\'}]', 1, 0, 0, ' 输入第一行给出一个字符，如果是 C 就表示下面的字符串需要被压缩；如果是 D 就表示下面的字符串需要被解压。第二行给出需要被压缩或解压的不超过 1000 个字符的字符串，以回车结尾。题目保证字符重复个数在整型范围内，且输出文件不超过 1MB。\n\n', ' 根据要求压缩或解压字符串，并在一行中输出结果。\n\n', 8, 16, 'pat', 2, 'C\nTTTTThhiiiis isssss a   tesssst CAaaa as\n', '5T2h4is i5s a3 te4st CA3a as\n');
INSERT INTO `problem` VALUES (930, '检查密码', '本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。该网站要求用户设置的密码必须由不少于6个字符组成，并且只能有英文字母、数字和小数点 .，还必须既有字母也有数字。\n\n\n', '[{\'in\': \'5\\n123s\\nzheshi.wodepw\\n1234.5678\\nWanMei23333\\npass*word.6\\n\', \'out\': \'Your password is tai duan le.\\nYour password needs shu zi.\\nYour password needs zi mu.\\nYour password is wan mei.\\nYour password is tai luan le.\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 100），随后 N 行，每行给出一个用户设置的密码，为不超过 80 个字符的非空字符串，以回车结束。\n\n', ' 对每个用户的密码，在一行中输出系统反馈信息，分以下5种：\n\n- 如果密码合法，输出Your password is wan mei.；\n- 如果密码太短，不论合法与否，都输出Your password is tai duan le.；\n- 如果密码长度合法，但存在不合法字符，则输出Your password is tai luan le.；\n- 如果密码长度合法，但只有字母没有数字，则输出Your password needs shu zi.；\n- 如果密码长度合法，但只有数字没有字母，则输出Your password needs zi mu.。\n\n', 8, 16, 'pat', 1, '5\n123s\nzheshi.wodepw\n1234.5678\nWanMei23333\npass*word.6\n', 'Your password is tai duan le.\nYour password needs shu zi.\nYour password needs zi mu.\nYour password is wan mei.\nYour password is tai luan le.\n');
INSERT INTO `problem` VALUES (931, '射击比赛', '本题目给出的射击比赛的规则非常简单，谁打的弹洞距离靶心最近，谁就是冠军；谁差得最远，谁就是菜鸟。本题给出一系列弹洞的平面坐标(x,y)，请你编写程序找出冠军和菜鸟。我们假设靶心在原点(0,0)。\n\n', '[{\'in\': \'3\\n0001 5 7\\n1020 -1 3\\n0233 0 -1\\n\', \'out\': \'0233 0001\\n\'}]', 1, 0, 0, ' 输入在第一行中给出一个正整数 N（le 10 000）。随后 N 行，每行按下列格式给出：\n\n\nID x y\n\n\n其中 ID 是运动员的编号（由 4 位数字组成）；x 和 y 是其打出的弹洞的平面坐标(x,y)，均为整数，且 0 le |x|, |y| le 100。题目保证每个运动员的编号不重复，且每人只打 1 枪。\n\n', ' 输出冠军和菜鸟的编号，中间空 1 格。题目保证他们是唯一的。\n\n', 8, 16, 'pat', 1, '3\n0001 5 7\n1020 -1 3\n0233 0 -1\n', '0233 0001\n');
INSERT INTO `problem` VALUES (932, '是否存在相等的差', '给定 N 张卡片，正面分别写上 1、2、……、N，然后全部翻面，洗牌，在背面分别写上 1、2、……、N。将每张牌的正反两面数字相减（大减小），得到 N 个非负差值，其中是否存在相等的差？\n\n', '[{\'in\': \'8\\n3 5 8 6 2 1 4 7\\n\', \'out\': \'5 2\\n3 3\\n2 2\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（2 le N le 10 000），随后一行给出 1 到 N 的一个洗牌后的排列，第 i 个数表示正面写了 i 的那张卡片背面的数字。\n\n', ' 按照“差值 重复次数”的格式从大到小输出重复的差值及其重复的次数，每行输出一个结果。\n\n', 8, 16, 'pat', 1, '8\n3 5 8 6 2 1 4 7\n', '5 2\n3 3\n2 2\n');
INSERT INTO `problem` VALUES (933, '外观数列', '外观数列是指具有以下特点的整数序列：\n\n\nd, d1, d111, d113, d11231, d112213111, ...\n\n\n它从不等于 1 的数字 d 开始，序列的第 n+1 项是对第 n 项的描述。比如第 2 项表示第 1 项有 1 个 d，所以就是 d1；第 2 项是 1 个 d（对应 d1）和 1 个 1（对应 11），所以第 3 项就是 d111。又比如第 4 项是 d113，其描述就是 1 个 d，2 个 1，1 个 3，所以下一项就是 d11231。当然这个定义对 d = 1 也成立。本题要求你推算任意给定数字 d 的外观数列的第 N 项。\n\n', '[{\'in\': \'1 8\\n\', \'out\': \'1123123111\\n\'}]', 1, 0, 0, ' 输入第一行给出 0,9 范围内的一个整数 d、以及一个正整数 N（le 40），用空格分隔。\n\n', ' 在一行中给出数字 d 的外观数列的第 N 项。\n\n', 8, 16, 'pat', 1, '1 8\n', '1123123111\n');
INSERT INTO `problem` VALUES (934, 'PAT单位排行', '每次 PAT 考试结束后，考试中心都会发布一个考生单位排行榜。本题就请你实现这个功能。\n\n', '[{\'in\': \'10\\nA57908 85 Au\\nB57908 54 LanX\\nA37487 60 au\\nT28374 67 CMU\\nT32486 24 hypu\\nA66734 92 cmu\\nB76378 71 AU\\nA47780 45 lanx\\nA72809 100 pku\\nA03274 45 hypu\\n\', \'out\': \'5\\n1 cmu 192 2\\n1 au 192 3\\n3 pku 100 1\\n4 hypu 81 2\\n4 lanx 81 2\\n\'}]', 1, 0, 0, ' 输入第一行给出一个正整数 N（le 10^5），即考生人数。随后 N 行，每行按下列格式给出一个考生的信息：\n\n\n准考证号 得分 学校\n\n\n其中准考证号是由 6 个字符组成的字符串，其首字母表示考试的级别：B代表乙级，A代表甲级，T代表顶级；得分是 0, 100 区间内的整数；学校是由不超过 6 个英文字母组成的单位码（大小写无关）。注意：题目保证每个考生的准考证号是不同的。\n\n', ' 首先在一行中输出单位个数。随后按以下格式非降序输出单位的排行榜：\n\n\n排名 学校 加权总分 考生人数\n\n\n其中排名是该单位的排名（从 1 开始）；学校是全部按小写字母输出的单位码；加权总分定义为乙级总分/1.5 + 甲级总分 + 顶级总分1.5的整数部分；考生人数是该属于单位的考生的总人数。\n\n学校首先按加权总分排行。如有并列，则应对应相同的排名，并按考生人数升序输出。如果仍然并列，则按单位码的字典序输出。\n\n', 8, 16, 'pat', 1, '10\nA57908 85 Au\nB57908 54 LanX\nA37487 60 au\nT28374 67 CMU\nT32486 24 hypu\nA66734 92 cmu\nB76378 71 AU\nA47780 45 lanx\nA72809 100 pku\nA03274 45 hypu\n', '5\n1 cmu 192 2\n1 au 192 3\n3 pku 100 1\n4 hypu 81 2\n4 lanx 81 2\n');
INSERT INTO `problem` VALUES (935, '就不告诉你', '做作业的时候，邻座的小盆友问你：“五乘以七等于多少？”你应该不失礼貌地围笑着告诉他：“五十三。”本题就要求你，对任何一对给定的正整数，倒着输出它们的乘积。\n\n53.jpg(~/0c3a4497-27c3-45ea-9c8e-5a1ab2df48af.jpg)\n\n\n', '[{\'in\': \'5 7\\n\', \'out\': \'53\\n\'}]', 1, 0, 0, ' 输入在第一行给出两个不超过 1000 的正整数 A 和 B，其间以空格分隔。\n\n', ' 在一行中倒着输出 A 和 B 的乘积。\n\n', 8, 16, 'pat', 1, '5 7\n', '53\n');
INSERT INTO `problem` VALUES (936, '有多少不同的值', '当自然数 n 依次取 1、2、3、……、N 时，算式 lfloor n/2rfloor +lfloor n/3rfloor +lfloor n/5rfloor  有多少个不同的值？（注：lfloor xrfloor 为取整函数，表示不超过 x 的最大自然数，即 x 的整数部分。）\n\n', '[{\'in\': \'2017\\n\', \'out\': \'1480\\n\'}]', 1, 0, 0, ' 输入给出一个正整数 N（2 le N le 10^4）。\n\n', ' 在一行中输出题面中算式取到的不同值的个数。\n\n', 8, 16, 'pat', 1, '2017\n', '1480\n');
INSERT INTO `problem` VALUES (937, '三人行', '子曰：“三人行，必有我师焉。择其善者而从之，其不善者而改之。”\n\n本题给定甲、乙、丙三个人的能力值关系为：甲的能力值确定是 2 位正整数；把甲的能力值的 2 个数字调换位置就是乙的能力值；甲乙两人能力差是丙的能力值的 X 倍；乙的能力值是丙的 Y 倍。请你指出谁比你强应“从之”，谁比你弱应“改之”。\n\n', '[{\'in\': \'48 3 7\\n\', \'out\': \'48 Ping Cong Gai\\n\'}, {\'in\': \'48 11 6\\n\', \'out\': \'No Solution\\n\'}]', 1, 0, 0, ' 输入在一行中给出三个数，依次为：M（你自己的能力值）、X 和 Y。三个数字均为不超过 1000 的正整数。\n\n', ' 在一行中首先输出甲的能力值，随后依次输出甲、乙、丙三人与你的关系：如果其比你强，输出 Cong；平等则输出 Ping；比你弱则输出 Gai。其间以 1 个空格分隔，行首尾不得有多余空格。\n\n注意：如果解不唯一，则以甲的最大解为准进行判断；如果解不存在，则输出 No Solution。\n\n', 8, 16, 'pat', 2, '48 3 7\n', '48 Ping Cong Gai\n');
INSERT INTO `problem` VALUES (938, '狼人杀-简单版', '以下文字摘自《灵机一动·好玩的数学》：“狼人杀”游戏分为狼人、好人两大阵营。在一局“狼人杀”游戏中，1 号玩家说：“2 号是狼人”，2 号玩家说：“3 号是好人”，3 号玩家说：“4 号是狼人”，4 号玩家说：“5 号是好人”，5 号玩家说：“4 号是好人”。已知这 5 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。扮演狼人角色的是哪两号玩家？\n\n本题是这个问题的升级版：已知 N 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。要求你找出扮演狼人角色的是哪几号玩家？\n\n', '[{\'in\': \'5\\n-2\\n+3\\n-4\\n+5\\n+4\\n\', \'out\': \'1 4\\n\'}, {\'in\': \'6\\n+6\\n+3\\n+1\\n-5\\n-2\\n+4\\n\', \'out\': \'1 5\\n\'}, {\'in\': \'5\\n-2\\n-3\\n-4\\n-5\\n-1\\n\', \'out\': \'No Solution\\n\'}]', 1, 0, 0, ' 输入在第一行中给出一个正整数 N（5 le N le 100）。随后 N 行，第 i 行给出第 i 号玩家说的话（1 le i le N），即一个玩家编号，用正号表示好人，负号表示狼人。\n\n', ' 如果有解，在一行中按递增顺序输出 2 个狼人的编号，其间以空格分隔，行首尾不得有多余空格。如果解不唯一，则输出最小序列解 —— 即对于两个序列 A = { a1, ..., aM } 和 B = { b1, ..., bM }，若存在 0 le k < M 使得 ai=bi （i le k），且 ak+1<bk+1，则称序列 A 小于序列 B。若无解则输出 No Solution。\n\n', 8, 16, 'pat', 3, '5\n-2\n+3\n-4\n+5\n+4\n', '1 4\n');
INSERT INTO `problem` VALUES (939, '危险品装箱', '集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。\n\n本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。\n\n', '[{\'in\': \'6 3\\n20001 20002\\n20003 20004\\n20005 20006\\n20003 20001\\n20005 20004\\n20004 20006\\n4 00001 20004 00002 20003\\n5 98823 20002 20003 20006 10010\\n3 12345 67890 23333\\n\', \'out\': \'No\\nYes\\nYes\\n\'}]', 1, 0, 0, ' 输入第一行给出两个正整数：N (le 10^4) 是成对的不相容物品的对数；M (le 100) 是集装箱货品清单的单数。\n\n随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：\n\nK G1 G2 ... GK\n\n其中 K (le 1000) 是物品件数，Gi 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。\n\n', ' 对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 Yes，否则输出 No。\n\n', 8, 16, 'pat', 1, '6 3\n20001 20002\n20003 20004\n20005 20006\n20003 20001\n20005 20004\n20004 20006\n4 00001 20004 00002 20003\n5 98823 20002 20003 20006 10010\n3 12345 67890 23333\n', 'No\nYes\nYes\n');
INSERT INTO `problem` VALUES (940, 'N-自守数', '如果某个数 K 的平方乘以 N 以后，结果的末尾几位数等于 K，那么就称这个数为“N-自守数”。例如 3times 92^2 = 25 392，而 25 392 的末尾两位正好是 92，所以 92 是一个 3-自守数。\n\n本题就请你编写程序判断一个给定的数字是否关于某个 N 是 N-自守数。\n\n', '[{\'in\': \'3\\n92 5 233\\n\', \'out\': \'3 25392\\n1 25\\nNo\\n\'}]', 1, 0, 0, ' 输入在第一行中给出正整数 M（le 20），随后一行给出 M 个待检测的、不超过 1000 的正整数。\n\n', ' 对每个需要检测的数字，如果它是 N-自守数就在一行中输出最小的 N 和 NK^2 的值，以一个空格隔开；否则输出 No。注意题目保证 N < 10。\n\n', 8, 16, 'pat', 1, '3\n92 5 233\n', '3 25392\n1 25\nNo\n');
INSERT INTO `problem` VALUES (941, '最好吃的月饼', '月饼是久负盛名的中国传统糕点之一，自唐朝以来，已经发展出几百品种。\n\nmk.jpg(~/fcb325a0-7090-4bf4-acb0-d4d7ea832f27.jpg)\n\n\n若想评比出一种“最好吃”的月饼，那势必在吃货界引发一场腥风血雨…… 在这里我们用数字说话，给出全国各地各种月饼的销量，要求你从中找出销量冠军，认定为最好吃的月饼。\n\n', '[{\'in\': \'5 3\\n1001 992 0 233 6\\n8 0 2018 0 2008\\n36 18 0 1024 4\\n\', \'out\': \'2018\\n3 5\\n\'}]', 1, 0, 0, ' 输入首先给出两个正整数 N（le 1000）和 M（le 100），分别为月饼的种类数（于是默认月饼种类从 1 到 N 编号）和参与统计的城市数量。\n\n接下来 M 行，每行给出 N 个非负整数（均不超过 1 百万），其中第 i 个整数为第 i 种月饼的销量（块）。数字间以空格分隔。\n\n', ' 在第一行中输出最大销量，第二行输出销量最大的月饼的种类编号。如果冠军不唯一，则按编号递增顺序输出并列冠军。数字间以 1 个空格分隔，行首尾不得有多余空格。\n\n', 8, 16, 'pat', 1, '5 3\n1001 992 0 233 6\n8 0 2018 0 2008\n36 18 0 1024 4\n', '2018\n3 5\n');
INSERT INTO `problem` VALUES (942, '字符串A+B', '给定两个字符串 A 和 B，本题要求你输出 A+B，即两个字符串的并集。要求先输出 A，再输出 B，但重复的字符必须被剔除。\n\n', '[{\'in\': \'This is a sample test\\nto show you_How it works\\n\', \'out\': \'This ampletowyu_Hrk\\n\'}]', 1, 0, 0, ' 输入在两行中分别给出 A 和 B，均为长度不超过 10^6的、由可见 ASCII 字符 (即码值为32~126)和空格组成的、由回车标识结束的非空字符串。\n\n', ' 在一行中输出题面要求的 A 和 B 的和。\n\n', 8, 16, 'pat', 1, 'This is a sample test\nto show you_How it works\n', 'This ampletowyu_Hrk\n');
INSERT INTO `problem` VALUES (943, '谷歌的招聘', '2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步。\n\nprime.jpg(~/57148679-d574-4f49-b048-775c6c07791c.jpg)\n\n\n自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e = 2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466391932003059921... 其中粗体标出的 10 位数就是答案。\n\n本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。\n\n', '[{\'in\': \'20 5\\n23654987725541023819\\n\', \'out\': \'49877\\n\'}, {\'in\': \'10 3\\n2468024680\\n\', \'out\': \'404\\n\'}]', 1, 2, 0, ' 输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。\n\n', ' 在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 404。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。\n\n', 8, 16, 'pat', 2, '20 5\n23654987725541023819\n', '49877\n');

-- ----------------------------
-- Table structure for user_code
-- ----------------------------
DROP TABLE IF EXISTS `user_code`;
CREATE TABLE `user_code`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userid` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `problemid` int(11) NULL DEFAULT NULL,
  `language` int(11) NULL DEFAULT NULL,
  `code` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `statu` int(11) NULL DEFAULT NULL,
  `time` datetime(0) NULL DEFAULT NULL,
  `runtime` int(11) NULL DEFAULT NULL,
  `runmemory` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 243 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_code
-- ----------------------------
INSERT INTO `user_code` VALUES (123, '16211134123', 45, 1, '#include<stdio.h>\nint main(){\n  	printf(\"Hello,World.\\n\");\n	return 0;\n}', 4, '2019-06-08 04:55:29', NULL, NULL);
INSERT INTO `user_code` VALUES (124, '16211134123', 45, 1, '#include<stdio.h>\nint main(){\n  	printf(\"Hello,World.\\\");\n	return 0;\n}', 7, '2019-06-08 04:55:33', NULL, NULL);
INSERT INTO `user_code` VALUES (125, '16211134123', 45, 1, '#include<stdio.h>\nint main(){\n  	printf(\"Hello,World.\\n\");\n	return 0;\n}', 4, '2019-06-08 04:56:03', NULL, NULL);
INSERT INTO `user_code` VALUES (126, '16211134123', 45, 1, '#include<stdio.h>\n int main(){\n  printf(\"Hello,World.\\n\");\n	return 0;\n}', 4, '2019-06-08 05:22:30', NULL, NULL);
INSERT INTO `user_code` VALUES (127, '16211134123', 45, 1, '#include<stdio.h>\n int main(){\n  printf(\"Hello,World.\");\n	return 0;\n}', 4, '2019-06-08 05:22:56', NULL, NULL);
INSERT INTO `user_code` VALUES (128, '16211134123', 45, 1, '#include<stdio.h>\n  int main()\n  {  \n		printf(\"Hello,World.\");\n	    return 0;\n  }', 4, '2019-06-08 05:24:04', NULL, NULL);
INSERT INTO `user_code` VALUES (129, 'admin', 44, 1, '#include<stdio.h>\n  int main(){\n	printf(\"0\\n1\");\n  return 0;\n}\n', 1, '2019-06-09 09:19:19', NULL, NULL);
INSERT INTO `user_code` VALUES (130, '18211160106', 44, 1, '#include<stdio.h>\nint main(){\n	int t,n;\n	scanf(\"%d\",&t);\n	while(t--){\n		scanf(\"%d\",&n);\n		if(n%2==0){\n			printf(\"0\\n\");\n		}\n		else{\n			printf(\"1\\n\");\n		}\n	}\n	return 0;\n} \n', 8, '2019-06-09 09:38:58', NULL, NULL);
INSERT INTO `user_code` VALUES (131, '18211160106', 44, 1, '#include<stdio.h>\nint main(){\n	int t,n;\n	scanf(\"%d\",&t);\n	while(t--){\n		scanf(\"%d\",&n);\n		if(n%2==0){\n			printf(\"0\\n\");\n		}\n		else{\n			printf(\"1\\n\");\n		}\n	}\n	return 0;\n} ', 8, '2019-06-09 09:39:10', NULL, NULL);
INSERT INTO `user_code` VALUES (132, 'admin', 44, 1, '#include<stdio.h>\n  int main(){\n  int n,x;\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++){\n  	scanf(\"%d\",&x);\n    printf(\"%d\\n\",x*x);\n  }\n	return 0;\n}\n  ', 7, '2019-06-09 09:47:31', NULL, NULL);
INSERT INTO `user_code` VALUES (133, 'admin', 44, 1, '#include<stdio.h>\n  int main(){\n  int n,i,x;\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++){\n  	scanf(\"%d\",&x);\n    printf(\"%d\\n\",x*x);\n  }\n	return 0;\n}\n  ', 4, '2019-06-09 09:47:49', NULL, NULL);
INSERT INTO `user_code` VALUES (134, 'admin', 44, 1, '#include<stdio.h>\n  int main(){\n  int n,i,x;\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++){\n  	scanf(\"%d\",&x);\n  }\n   printf(\"0\\n1\",x*x);\n	return 0;\n}\n  ', 1, '2019-06-09 09:48:42', NULL, NULL);
INSERT INTO `user_code` VALUES (135, '16211134122', 45, 1, '#include<stdio.h>\n  int main(){\n  	printf(\"Hello,World.\");\n	return 0;\n}', 4, '2019-06-09 10:19:00', NULL, NULL);
INSERT INTO `user_code` VALUES (136, '16211134122', 45, 1, '#include<stdio.h>\n  int main(){\n  	printf(\"Hello,World.\\n\");\n	return 0;\n}', 4, '2019-06-09 10:19:16', NULL, NULL);
INSERT INTO `user_code` VALUES (137, '001', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"    Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}', 8, '2019-06-09 10:23:06', NULL, NULL);
INSERT INTO `user_code` VALUES (138, '001', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}', 8, '2019-06-09 10:25:14', NULL, NULL);
INSERT INTO `user_code` VALUES (139, '001', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"    Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}', 8, '2019-06-09 10:30:29', NULL, NULL);
INSERT INTO `user_code` VALUES (140, '001', 56, 8, 'class Cuboid(object):\n    def __init__(self, length, width, height):\n        self.length = length\n        self.width = width\n        self.height = height\n\n    def getBottomArea(self):\n        print(self.length * self.width)\n\n    def getVolume(self):\n        print(self.length * self.width * self.height)\n\n\nlength, width, height = map(int, input().split())\ncuboid = Cuboid(length, width, height)\ncuboid.getBottomArea()\ncuboid.getVolume()', 8, '2019-06-09 10:39:24', NULL, NULL);
INSERT INTO `user_code` VALUES (141, 'admin', 45, 1, '#include<stdio.h>\n  int main(){\n  printf(\"Hello,World.\\n\");\n	return 0;\n}\n', 1, '2019-06-09 10:44:47', NULL, NULL);
INSERT INTO `user_code` VALUES (142, 'admin', 56, 8, 'print(\"200\\n6000\")', 8, '2019-06-09 11:12:13', NULL, NULL);
INSERT INTO `user_code` VALUES (143, 'admin', 56, 8, 'printf(\"200\\n6000\")', 4, '2019-06-09 11:12:26', NULL, NULL);
INSERT INTO `user_code` VALUES (144, 'admin', 56, 8, 'print(\"200\\n6000\")', 1, '2019-06-09 11:13:29', NULL, NULL);
INSERT INTO `user_code` VALUES (145, 'admin', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:14:50', NULL, NULL);
INSERT INTO `user_code` VALUES (146, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y;\n	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n	return 0;\n}', 4, '2019-06-09 11:20:27', NULL, NULL);
INSERT INTO `user_code` VALUES (147, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y;\n	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n	return 0;\n}', 4, '2019-06-09 11:21:29', NULL, NULL);
INSERT INTO `user_code` VALUES (148, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y;\n	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n	return 0;\n}', 4, '2019-06-09 11:22:20', NULL, NULL);
INSERT INTO `user_code` VALUES (149, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y,n,i;\n	scanf(\"%d\",&n);\n   for(i=0;i<n;i++){\n     	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n   }\n	return 0;\n}', 1, '2019-06-09 11:27:54', NULL, NULL);
INSERT INTO `user_code` VALUES (150, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y,n,i;\n	scanf(\"%d\",&n);\n   for(i=0;i<n;i++){\n     	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n   }\n	return 0;\n}', 1, '2019-06-09 11:28:35', NULL, NULL);
INSERT INTO `user_code` VALUES (151, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y,n,i;\n	scanf(\"%d\",&n);\n   for(i=0;i<n;i++){\n     	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n   }\n	return 0;\n}', 1, '2019-06-09 11:28:36', NULL, NULL);
INSERT INTO `user_code` VALUES (152, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y,n,i;\n	scanf(\"%d\",&n);\n   for(i=0;i<n;i++){\n     	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n   }\n	return 0;\n}', 1, '2019-06-09 11:28:37', NULL, NULL);
INSERT INTO `user_code` VALUES (153, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y,n,i;\n	scanf(\"%d\",&n);\n   for(i=0;i<n;i++){\n     	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n   }\n	return 0;\n}', 1, '2019-06-09 11:28:39', NULL, NULL);
INSERT INTO `user_code` VALUES (154, '16211134123', 44, 1, '  #include<stdio.h>\nint main()\n{  \n	int x,y,n,i;\n	scanf(\"%d\",&n);\n   for(i=0;i<n;i++){\n     	scanf(\"%d\",&x);\n	y=x%2;\n	if(y==0){\n		printf(\"0\\n\");\n	}\n	else{\n		printf(\"1\\n\");\n	}\n   }\n	return 0;\n}', 1, '2019-06-09 11:28:40', NULL, NULL);
INSERT INTO `user_code` VALUES (155, '16211134123', 45, 1, '#include<stdio.h>\n  int main()\n  {  \n		printf(\"Hello,World.\\n\");\n	    return 0;\n  }', 1, '2019-06-09 11:29:14', NULL, NULL);
INSERT INTO `user_code` VALUES (156, '16211134123', 46, 1, '#include<stdio.h>\n  int main()\n  {  \n	    printf(\"****\\n*\\n*\\n****\\n\");\n	    return 0;\n  }', 1, '2019-06-09 11:32:17', NULL, NULL);
INSERT INTO `user_code` VALUES (157, '16211134123', 47, 1, '#include<stdio.h>\n  int main()\n  {  \n		int n;\n		scanf(\"%d\",&n);\n		printf(\"%d\\n\",n*n);\n	    return 0;\n  }', 6, '2019-06-09 11:32:52', NULL, NULL);
INSERT INTO `user_code` VALUES (158, '16211134123', 48, 1, '#include<stdio.h>\n  int main()\n  {  \n	    printf(\"+---+---+\\n|   |   |\\n+---+---+\\n\");\n	    return 0;\n  }', 1, '2019-06-09 11:33:36', NULL, NULL);
INSERT INTO `user_code` VALUES (159, '16211134123', 49, 1, '#include<stdio.h>\nint main()\n{	\n	double a;\n	a=1.47*(32.54-32.1);\n	printf(\"%.4f\\n\",a);\n	return 0;\n}\n', 1, '2019-06-09 11:34:05', NULL, NULL);
INSERT INTO `user_code` VALUES (160, '16211134123', 52, 8, 'class Tree:\n    def __init__(self,ages,years):\n        self.ages = ages\n        self.grow(years)\n    def grow(self,years):\n        self.ages += years\n    def showAge(self):\n        print(\'The ages:%d\' % self.ages)\nwhile True:\n    a,b = map(int,input().split())\n    if a==0 and b == 0:\n        break\n    tree = Tree(a,b)\n    tree.showAge()', 4, '2019-06-09 11:34:58', NULL, NULL);
INSERT INTO `user_code` VALUES (161, '16211134123', 52, 8, 'class Tree:\n    def __init__(self,ages,years):\n        self.ages = ages\n        self.grow(years)\n    def grow(self,years):\n        self.ages += years\n    def showAge(self):\n        print(\'The ages:%d\' % self.ages)\nwhile True:\n    a,b = map(int,input().split())\n    if a==0 and b == 0:\n        break\n    tree = Tree(a,b)\n    tree.showAge()', 4, '2019-06-09 11:36:03', NULL, NULL);
INSERT INTO `user_code` VALUES (162, '16211134123', 52, 8, 'print(\'Tree ages:50\\nTree ages:70\\nTree ages:45\')\n', 1, '2019-06-09 11:39:56', NULL, NULL);
INSERT INTO `user_code` VALUES (163, '16211134123', 53, 8, 'print(\"Center=(2,3) and Radius=5\\nDiameter=10\\nArea=78.5\\nPerimeter=31.4\\n\")', 8, '2019-06-09 11:44:05', NULL, NULL);
INSERT INTO `user_code` VALUES (164, '16211134123', 53, 8, 'print(\"Center=(2,3) and Radius=5\\nDiameter=10\\nArea=78.5\\nPerimeter=31.4\\n\")', 8, '2019-06-09 11:46:51', NULL, NULL);
INSERT INTO `user_code` VALUES (165, '16211134123', 53, 8, 'print(\"Center=(2,3) and Radius=5\\nDiameter=10\\nArea=78.5\\nPerimeter=31.4\")', 1, '2019-06-09 11:46:57', NULL, NULL);
INSERT INTO `user_code` VALUES (166, '16211134123', 56, 8, 'class Cuboid:\n    def __init__(self,length,width,height):\n        self.length = length\n        self.width = width\n        self.height = height\n    def getButtomArea(self):\n        print(self.width*self.length)\n    def getVolume(self):\n        print(self.width*self.height*self.length)\na,b,c = map(int,input().split())\ncuboid  = Cuboid(a,b,c)\ncuboid.getButtomArea()\ncuboid.getVolume()', 4, '2019-06-09 11:47:28', NULL, NULL);
INSERT INTO `user_code` VALUES (167, '16211134123', 56, 8, 'print(\"200\\n6000\")\n', 1, '2019-06-09 11:48:11', NULL, NULL);
INSERT INTO `user_code` VALUES (168, '16211134123', 56, 8, 'print(\"200\\n6000\\n\")\n', 8, '2019-06-09 11:48:25', NULL, NULL);
INSERT INTO `user_code` VALUES (169, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:00', NULL, NULL);
INSERT INTO `user_code` VALUES (170, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:14', NULL, NULL);
INSERT INTO `user_code` VALUES (171, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:15', NULL, NULL);
INSERT INTO `user_code` VALUES (172, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:16', NULL, NULL);
INSERT INTO `user_code` VALUES (173, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:18', NULL, NULL);
INSERT INTO `user_code` VALUES (174, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:19', NULL, NULL);
INSERT INTO `user_code` VALUES (175, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:20', NULL, NULL);
INSERT INTO `user_code` VALUES (176, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:21', NULL, NULL);
INSERT INTO `user_code` VALUES (177, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:22', NULL, NULL);
INSERT INTO `user_code` VALUES (178, '16211134123', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-09 11:49:23', NULL, NULL);
INSERT INTO `user_code` VALUES (179, '16211134123', 58, 8, 'class Tree:\n    def __init__(self,ages,years):\n        self.ages = ages\n        self.grow(years)\n    def grow(self,years):\n        self.ages += years\n    def showAge(self):\n        print(\'The ages:%d\' % self.ages)\nwhile True:\n    a,b = map(int,input().split())\n    if a==0 and b == 0:\n        break\n    tree = Tree(a,b)\n    tree.showAge()', 4, '2019-06-09 11:50:47', NULL, NULL);
INSERT INTO `user_code` VALUES (180, '16211134123', 58, 8, 'print(\'Tree ages:50\\nTree ages:70\\nTree ages:45\')\n', 1, '2019-06-09 11:51:18', NULL, NULL);
INSERT INTO `user_code` VALUES (204, '16211134123', 45, 1, 'int main(){\n  	printf(\"Hello,World.\\n\")\n	return 0;\n}', 7, '2019-06-09 14:20:55', NULL, NULL);
INSERT INTO `user_code` VALUES (205, '16211134123', 45, 1, 'int main(){\n  	printf(\"Hello,World.\\n\");\n	return 0;\n}', 1, '2019-06-09 14:22:42', NULL, NULL);
INSERT INTO `user_code` VALUES (206, '16211134123', 45, 1, '#include<stdio.h>\n  int main(){\n  	printf(\"Hello,World.\\n\");\n	return 0;\n}', 1, '2019-06-09 14:22:53', NULL, NULL);
INSERT INTO `user_code` VALUES (207, 'admin', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"    Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}', 1, '2019-06-09 14:28:51', NULL, NULL);
INSERT INTO `user_code` VALUES (211, 'admin', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"    Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}\n', 1, '2019-06-09 14:40:03', NULL, NULL);
INSERT INTO `user_code` VALUES (212, 'admin', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"    Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}\n', 1, '2019-06-09 14:40:08', NULL, NULL);
INSERT INTO `user_code` VALUES (213, 'admin', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"    Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}\n', 1, '2019-06-09 14:41:43', NULL, NULL);
INSERT INTO `user_code` VALUES (214, 'admin', 57, 4, 'public class Main {\n\n	public static void main(String[] args) {\n		System.out.println(\"********************\");\n		System.out.println(\"    Hello,World!\");\n		System.out.println(\"********************\");\n\n	}\n\n}\n', 1, '2019-06-09 14:43:45', NULL, NULL);
INSERT INTO `user_code` VALUES (217, 'admin', 45, 1, '#include<stdio.h>\n  int main(){\n  while(1){\n  	printf(\"1111111\\n\");\n  }\n	return 0;\n}', 7, '2019-06-11 03:09:02', NULL, NULL);
INSERT INTO `user_code` VALUES (219, '001', 45, 1, '#include<stdio.h>\nint main(){\nprintf(\"Hello,World.\\n\");\nreturn 0;\n}', 1, '2019-06-11 03:28:37', NULL, NULL);
INSERT INTO `user_code` VALUES (225, '16211134123', 45, 1, '#include<stdio.h>\nint main(){\nprintf(\"Hello,World\\n\");\nreturn 0;\n}', 4, '2019-06-11 05:44:17', NULL, NULL);
INSERT INTO `user_code` VALUES (226, '16211134123', 45, 1, '#include<stdio.h>\nint main(){\nprintf(\"Hello,World.\\n\");\nreturn 0;\n}', 1, '2019-06-11 05:44:53', NULL, NULL);
INSERT INTO `user_code` VALUES (229, 'admin', 742, 4, 'import java.util.Scanner;\npublic class Main {\n\n	public static void main(String[] args) {\n		Scanner input = new Scanner(System.in);\n		\n		int n = input.nextInt();\n		int i=0;\n		while(i<n) {\n			int m = input.nextInt();\n			if(m%2==0) {\n				System.out.println(\"0\");\n			}\n			else {\n				System.out.println(\"1\");\n			}\n			i++;\n		}\n\n	}\n\n}', 1, '2019-06-12 10:39:00', NULL, NULL);
INSERT INTO `user_code` VALUES (230, 'admin', 52, 8, 'class Tree(object):\n    def __init__(self, ages):\n        self.ages = ages\n\n    def grow(self, years):\n        self.ages += years\n\n    def showAge(self):\n        print(\'Tree ages:\' + str(self.ages))\n\n\nwhile True:\n    ages, years = map(int, input().split())\n    if ages == 0 and years == 0:\n        break\n    tree = Tree(ages)\n    tree.grow(years)\n    tree.showAge()', 1, '2019-06-12 10:40:13', NULL, NULL);
INSERT INTO `user_code` VALUES (231, '16211134124', 291, 1, '#include<stdio.h>\nint main()\n{\n	int n,m,i;\n	int a[200],b[200];\n	int p,q;\n	while(1){\n		scanf(\"%d %d\",&n,&m);\n		if(n==0&&m==0){\n			break;\n		}\n		for(i=0;i<n;i++){\n			scanf(\"%d\",&a[i]);\n		}\n		p=q=0;\n		while(p<n){\n			if(p==0 && m<=a[p]){\n				b[q]=m;\n				q++;\n			}\n			if(p>0 && m>a[p-1] && m<=a[p]){\n				b[q]=m;\n				q++;\n			}\n			b[q]=a[p];\n			q++;\n			p++;\n		}\n		if(m>a[n-1]){\n			b[q]=m;\n			q++;\n		}\n		for(i=0;i<q;i++){\n			printf(\"%d \",b[i]);\n		}\n		printf(\"\\n\");\n	}\n	return 0;\n}', 1, '2019-06-12 10:49:14', NULL, NULL);
INSERT INTO `user_code` VALUES (232, 'admin', 191, 8, 'print(\"1 4\")', 4, '2019-06-12 11:42:20', NULL, NULL);
INSERT INTO `user_code` VALUES (233, 'admin', 191, 8, 'print(\"1 4\", end=\"\")', 4, '2019-06-12 11:42:40', NULL, NULL);
INSERT INTO `user_code` VALUES (234, '18211160126', 48, 1, '#include<stdio.h>\nint main()\n{\n	printf(\"+---+---+\\n\");\n	printf(\"|   |   |\\n\");\n	printf(\"+---+---+\\n\");\n	return 0;\n} ', 1, '2019-06-14 11:29:30', NULL, NULL);
INSERT INTO `user_code` VALUES (235, '18211160126', 45, 1, '#include<stdio.h>\nint main()\n{\n	printf(\"Hello,World.\\n\");\n	return 0;\n} ', 1, '2019-06-14 11:31:04', NULL, NULL);
INSERT INTO `user_code` VALUES (236, '16211134122', 45, 1, 'int main(){\nprint(\"Hello,World.\");\n}', 7, '2019-06-15 01:24:17', NULL, NULL);
INSERT INTO `user_code` VALUES (237, '16211134123', 45, 1, '#include<stdio.h>\n int main(){\n  printf(\"Hello,Worl.\\n\");\n	return 0;\n}', 4, '2019-06-17 01:50:24', NULL, NULL);
INSERT INTO `user_code` VALUES (238, '16211134123', 45, 1, '#include<stdio.h>\n int main(){\n  printf(\"Hello,World.\\n\");\n	return 0;\n}', 1, '2019-06-17 01:50:37', NULL, NULL);
INSERT INTO `user_code` VALUES (239, '16211134123', 45, 1, '#include<stdio.h>\n  int main()\n{\n	return 0;\n}', 4, '2019-06-17 03:21:48', NULL, NULL);
INSERT INTO `user_code` VALUES (240, 'admin', 943, 8, 'print(\"49877\")', 4, '2019-06-19 08:41:49', NULL, NULL);
INSERT INTO `user_code` VALUES (241, 'admin', 943, 8, 'print(\"49877\",end=\"\")', 4, '2019-06-19 08:41:56', NULL, NULL);
INSERT INTO `user_code` VALUES (243, 'admin', 45, 1, '#include<stdio.h>\nint main()\n{\n  printf(\"Hello,World.\\n\");\n}', 1, '2019-06-19 10:28:54', NULL, NULL);
INSERT INTO `user_code` VALUES (244, 'admin', 45, 1, '#include<stdio.h>\nint main()\n{\n  printf(\"Hello,World.\");\n}', 8, '2019-06-19 10:31:00', NULL, NULL);
INSERT INTO `user_code` VALUES (245, 'admin', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-19 10:34:38', NULL, NULL);
INSERT INTO `user_code` VALUES (246, '001', 112, 8, 'sum = 0\nn = int(input())\nwhile n != 1:\n    if n % 2 == 0:\n        n = n / 2\n        sum += 1\n    else:\n        n = (3 * n + 1) / 2\n        sum += 1\nprint(sum)', 1, '2019-06-19 10:38:47', NULL, NULL);
INSERT INTO `user_code` VALUES (247, '001', 45, 1, '#include<stdio.h>\nint main(){\nprintf(\"Hello,World!\");\nreturn 0 ;\n}', 4, '2019-06-19 10:45:17', NULL, NULL);
INSERT INTO `user_code` VALUES (248, 'admin', 45, 1, '#include<stdio.h>\nint main()\n{\n  printf(\"Hello,World.\\n\");\n}', 1, '2019-06-19 11:03:40', NULL, NULL);
INSERT INTO `user_code` VALUES (249, 'admin', 45, 1, '#include<stdio.h>\nint main()\n{\n  printf(\"Hello,World.\");\n}', 8, '2019-06-19 11:03:55', NULL, NULL);
INSERT INTO `user_code` VALUES (250, 'admin', 57, 4, 'public class Main{\n	public static void main(String[] args){\n		System.out.print(\"********************\\n\");\n		System.out.print(\"    Hello,World!\\n\");\n		System.out.print(\"********************\\n\");\n	}\n}', 1, '2019-06-19 11:04:22', NULL, NULL);
INSERT INTO `user_code` VALUES (251, 'testxbj', 45, 1, '#include<stdio.h>\nint main(){\nprintf(\"Hello,World!\");\nreturn 0 ;\n}', 4, '2019-06-19 11:10:34', NULL, NULL);
INSERT INTO `user_code` VALUES (252, 'testxbj', 45, 1, '#include<stdio.h>\nint main(){\nprintf(\"Hello,World.\");\nreturn 0 ;\n}', 8, '2019-06-19 11:11:15', NULL, NULL);
INSERT INTO `user_code` VALUES (253, 'testxbj', 45, 1, '#include<stdio.h>\nint main(){\nprintf(\"Hello,World.\\n\");\nreturn 0 ;\n}', 1, '2019-06-19 11:11:36', NULL, NULL);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `userid` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `password` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `isadmin` int(11) NOT NULL DEFAULT 0,
  `acnum` int(10) NULL DEFAULT 0,
  `submitsum` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`userid`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('001', 'test', 'e10adc3949ba59abbe56e057f20f883e', 0, 3, 17);
INSERT INTO `users` VALUES ('16211134117', '123456', '54a5218266ceb3f4ec94910ffa0fb208', 0, 0, 0);
INSERT INTO `users` VALUES ('16211134119', '薛志豪', 'e10adc3949ba59abbe56e057f20f883e', 0, 0, 0);
INSERT INTO `users` VALUES ('16211134120', '詹璐茜', 'e10adc3949ba59abbe56e057f20f883e', 0, 0, 0);
INSERT INTO `users` VALUES ('16211134122', '郑燕浪', 'e10adc3949ba59abbe56e057f20f883e', 0, 0, 3);
INSERT INTO `users` VALUES ('16211134123', '周丹', 'e10adc3949ba59abbe56e057f20f883e', 1, 36, 50);
INSERT INTO `users` VALUES ('16211134124', 'zm', 'e10adc3949ba59abbe56e057f20f883e', 0, 1, 1);
INSERT INTO `users` VALUES ('16211134203', '范俊强', '3d186804534370c3c817db0563f0e461', 0, 0, 0);
INSERT INTO `users` VALUES ('18211160106', '付毅宁', '449331ec6882c2336dd1b5be2d76706a', 0, 0, 2);
INSERT INTO `users` VALUES ('18211160126', '吴', 'e54e080a2d0aff5f47ad77acfdf29349', 0, 2, 2);
INSERT INTO `users` VALUES ('admin', '管理员', 'e10adc3949ba59abbe56e057f20f883e', 1, 23, 33);
INSERT INTO `users` VALUES ('test123', '123123', 'e10adc3949ba59abbe56e057f20f883e', 0, 0, 0);
INSERT INTO `users` VALUES ('testxbj', 'xbjxbj', 'e10adc3949ba59abbe56e057f20f883e', 0, 1, 3);
INSERT INTO `users` VALUES ('xbj', 'xbjxbj', 'e10adc3949ba59abbe56e057f20f883e', 0, 0, 0);

SET FOREIGN_KEY_CHECKS = 1;
